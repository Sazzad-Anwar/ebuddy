{"version":3,"sources":["Redux/Constants.jsx","Redux/Actons.jsx","Hooks/useDebounce.jsx","Screens/HomeScreen.jsx","CustomComponents/NotFound.jsx","Components/ProtectedRoute.jsx","Components/MessageContainingFile.jsx","Components/Messages.jsx","Components/Users.jsx","Components/UploadPreview.jsx","Screens/Chat.jsx","Components/Test.jsx","Routes/AppRoutes.jsx","App.js","Redux/store.js","Redux/Reducers.jsx","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["USER_LOGIN_SUCCESS","USER_LOGIN_FAILED","USER_LOGOUT","USER_UPDATE_SUCCESS","USER_UPDATE_FAILED","FRIEND_REQUEST_SUCCESS","FRIEND_REQUEST_ERROR","GET_FRIENDS_SUCCESS","GET_FRIENDS_ERROR","GET_CHAT_MESSAGE","GET_CHAT_MESSAGE_ERROR","userLogin","user","dispatch","a","axios","post","data","localStorage","setItem","JSON","stringify","type","payload","response","message","friendRequest","email","get","friendRequests","getFriends","friends","getChatMsg","messages","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","HomeScreen","addToast","useToasts","useSelector","state","responseError","error","history","useHistory","useDispatch","setEmail","images","setImages","photoUploaded","setPhotoUploaded","isDesktop","setIsDesktop","footerRef","useRef","login","setLogin","isPassword","setIsPassword","debouncedSearchTerm","show","setShow","useForm","register","handleSubmit","errors","watch","formState","submitForm","push","password","confirmPassword","photo","uploadFile","e","files","target","formData","FormData","i","length","append","map","image","preImage","filePath","console","log","searchCharacters","searchItem","removeFile","id","uploadId","split","delete","filter","singleImage","isLoggedIn","isSuccess","getResult","window","addEventListener","innerWidth","className","Container","Row","Col","lg","xs","md","Form","onSubmit","Avatar","alt","src","style","height","width","IconButton","onClick","Group","controlId","Label","Control","required","onChange","placeholder","htmlFor","InputGroup","FormControl","aria-label","aria-describedby","Text","cursor","Alert","variant","Button","name","accept","Navbar","ref","expand","Nav","Date","getFullYear","NotFound","position","top","left","transform","ProtectedRoute","children","rest","render","location","to","pathname","from","MessageContainingFile","fileData","setChatImage","fileLength","path","extname","Card","elevation","right","bottom","zIndex","FileSaver","saveAs","host","controls","backgroundColor","Messages","messageDetails","roomUser","editMsg","deleteMsg","replyMsg","anchorEl","setAnchorEl","chatImage","open","Boolean","handleClick","event","currentTarget","handleClose","marginRight","repliedOf","body","substring","startsWith","cardSize","showGraphic","maxLine","minLine","proxyUrl","url","file","aria-controls","aria-haspopup","Menu","keepMounted","onClose","PaperProps","maxHeight","MenuItem","_id","moment","updatedAt","fromNow","marginLeft","isSeen","Modal","onHide","fullscreen","centered","Users","userInfo","findRoomUser","setReplyMsgDetails","setDisplayMessages","showMobileChat","userMessage","unreadMsg","isActive","Badge","badgeContent","color","UploadPreview","Chat","requests","chat","users","setUsers","tabValue","setTabValue","notificationOn","setNotificationOn","setRoomUser","setMessages","setMessage","search","setSearch","setFriendRequests","findFriends","setFindFriends","roomUserPicShow","setRoomUserPicShow","replyMsgDetails","editMsgId","setEditMsgId","setShowMobileChat","displayMessages","isSearching","setIsSearching","userFound","setUserFound","heightRef","chatTextHeightRef","textAreaRef","socket","current","io","on","userData","othersData","allUsers","find","friend","joinedUser","appearance","autoDismiss","leavingUser","emit","requestReceiver","requestSender","requestSenderUser","requestId","userId","off","removeEventListener","audio","Audio","msg","play","result","focus","sendMessage","preventDefault","sendAt","now","key","onCloseRemoveImages","findMsg","addFriend","friendId","myId","removeRequest","request","requestAccepted","bg","fluid","Brand","Link","size","sx","ml","marginTop","offsetHeight","overflow","mt","mr","content","display","bgcolor","transformOrigin","horizontal","vertical","anchorOrigin","Divider","ListItemIcon","fontSize","removeItem","disconnect","Paper","square","borderRadius","Tabs","newValue","indicatorColor","textColor","Tab","icon","requestData","calendar","onKeyPress","as","autoComplete","hidden","multiple","component","background","backdrop","Header","Title","Body","overflowY","Footer","Test","setSelectedFiles","onDragOver","onDragEnter","onDragLeave","onDrop","dataTransfer","handleFiles","border","AppRoutes","exact","App","reducer","combineReducers","action","loading","getUser","getItem","parse","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","href","origin","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ServiceWorkerRegistration"],"mappings":"6jBACaA,EAAqB,qBACrBC,EAAoB,oBACpBC,EAAc,cACdC,EAAsB,sBACtBC,EAAqB,qBAErBC,EAAyB,yBACzBC,EAAuB,uBAEvBC,EAAsB,sBACtBC,EAAoB,oBAEpBC,EAAmB,mBACnBC,EAAyB,yBCEzBC,EAAY,SAACC,GAAD,8CAAU,WAAOC,GAAP,iBAAAC,EAAA,+EAEJC,IAAMC,KAAK,eAAgBJ,GAFvB,gBAEnBK,EAFmB,EAEnBA,KAERC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,EAAKL,OAEjDC,EAAS,CACLS,KAAMtB,EACNuB,QAASN,EAAKL,OARS,gDAW3BC,EAAS,CACLS,KAAMrB,EACNsB,QACI,KAAMC,UAAY,KAAMA,SAASP,KAAKQ,QAChC,KAAMD,SAASP,KAAKQ,QACpB,KAAMA,UAhBO,yDAAV,uDA+CZC,EAAgB,SAACC,GAAD,8CAAW,WAAOd,GAAP,iBAAAC,EAAA,+EAETC,IAAMa,IAAN,8BAAiCD,IAFxB,gBAExBV,EAFwB,EAExBA,KAERJ,EAAS,CACLS,KAAMjB,EACNkB,QAASN,EAAKY,iBANc,gDAShChB,EAAS,CACLS,KAAMhB,EACNiB,QACI,KAAMC,UAAY,KAAMA,SAASP,KAAKQ,QAChC,KAAMD,SAASP,KAAKQ,QACpB,KAAMA,UAdY,yDAAX,uDAmBhBK,GAAa,SAACH,GAAD,8CAAW,WAAOd,GAAP,iBAAAC,EAAA,+EAENC,IAAMa,IAAN,8BAAiCD,IAF3B,gBAErBV,EAFqB,EAErBA,KACRJ,EAAS,CACLS,KAAMf,EACNgB,QAASN,EAAKc,UALW,gDAQ7BlB,EAAS,CACLS,KAAMd,EACNe,QACI,KAAMC,UAAY,KAAMA,SAASP,KAAKQ,QAChC,KAAMD,SAASP,KAAKQ,QACpB,KAAMA,UAbS,yDAAX,uDAkBbO,GAAa,yDAAM,WAAOnB,GAAP,iBAAAC,EAAA,+EAEDC,IAAMa,IAAI,oBAFT,gBAEhBX,EAFgB,EAEhBA,KACRJ,EAAS,CACLS,KAAMb,EACNc,QAASN,EAAKgB,WALM,gDAQxBpB,EAAS,CACLS,KAAMZ,EACNa,QACI,KAAMC,UAAY,KAAMA,SAASP,KAAKQ,QAChC,KAAMD,SAASP,KAAKQ,QACpB,KAAMA,UAbI,yDAAN,uDCjFXS,OAff,SAAqBC,EAAOC,GAAO,MAEaC,mBAASF,GAFtB,mBAExBG,EAFwB,KAERC,EAFQ,KAY/B,OATAC,qBAAU,WACN,IAAMC,EAAUC,YAAW,WACvBH,EAAkBJ,KACnBC,GAEH,OAAO,WACHO,aAAaF,MAElB,CAACN,EAAOC,IACJE,G,QCqXIM,GAnWI,WAAO,IAAD,IACbC,EAAaC,sBAAbD,SADa,EAEkBE,aAAY,SAACC,GAAD,OAAWA,EAAMrC,aAA5DC,EAFa,EAEbA,KAAaqC,EAFA,EAEPC,MACRC,EAAUC,cACVvC,EAAWwC,cAJI,EAKKhB,mBAAS,IALd,mBAKdV,EALc,KAKP2B,EALO,OAMOjB,mBAAS,IANhB,mBAMdkB,EANc,KAMNC,EANM,OAOqBnB,oBAAS,GAP9B,mBAOdoB,EAPc,KAOCC,EAPD,OAQarB,oBAAS,GARtB,mBAQdsB,EARc,KAQHC,EARG,KASfC,EAAYC,iBAAO,GATJ,GAUKzB,oBAAS,GAVd,qBAUd0B,GAVc,MAUPC,GAVO,SAWe3B,oBAAS,GAXxB,qBAWd4B,GAXc,MAWFC,GAXE,MAYfC,GAAsBjC,GAAYP,EAAO,KAZ1B,GAaGU,oBAAS,GAbZ,qBAad+B,GAbc,MAaRC,GAbQ,SAmBjBC,cAJAC,GAfiB,GAejBA,SACAC,GAhBiB,GAgBjBA,aAEaC,IAlBI,GAiBjBC,MAjBiB,GAkBjBC,UAAaF,QAGXG,GAAa,SAAC3D,GAChB,GAAI8C,GACAlD,EAASF,EAAUM,IACnBkC,EAAQ0B,KAAK,cACV,GAAI5D,EAAK6D,WAAa7D,EAAK8D,gBAAiB,CAAC,IAAD,EAC/C9D,EAAK+D,MAAL,UAAazB,EAAO,UAApB,QAA0B,GAC1B1C,EAASF,EAAUM,IACnBkC,EAAQ0B,KAAK,WAIfI,GAAU,uCAAG,WAAOC,GAAP,qBAAApE,EAAA,sDAGf,IAFQqE,EAAUD,EAAEE,OAAZD,MACFE,EAAW,IAAIC,SACZC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAC9BF,EAASI,OAAO,UAAWN,EAAMI,IAJtB,yBAQYxE,IAAMC,KAAK,iBAAkBqE,GARzC,kBAQHpE,KACHyE,KAAI,SAACC,GAAD,OAAWnC,GAAU,SAACoC,GAAD,4BAAkBA,GAAlB,CAA4BD,EAAME,iBAChEnC,GAAiB,GAVN,kDAYXoC,QAAQC,IAAI,KAAMvE,UAZP,0DAAH,sDAgBVwE,GAAgB,uCAAG,WAAOC,GAAP,iBAAAnF,EAAA,+EAEMC,IAAMa,IAAN,8BAAiCqE,IAFvC,uBAEThF,EAFS,EAETA,KAFS,kBAGVA,GAHU,uCAKjB6E,QAAQC,IAAI,KAAMvE,UALD,kBAMV,MANU,yDAAH,sDAUhB0E,GAAU,uCAAG,WAAOC,GAAP,eAAArF,EAAA,6DACTsF,EAAWD,EAAGE,MAAM,aAAa,GACvCP,QAAQC,IAAI,CAAEI,KAAIC,aAFH,SAGTrF,IAAMuF,OAAN,yBAA+BF,IAHtB,OAIf5C,EAAUD,EAAOgD,QAAO,SAACC,GAAD,OAAiBA,IAAgBL,MACzDzC,GAAiB,GALF,2CAAH,sDAwChB,OAhCAlB,qBAAU,YACF5B,IAAI,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAM6F,aACdtD,EAAQ0B,KAAK,SAQbV,IACe,uCAAG,4BAAArD,EAAA,+EAESkF,GAAiB7B,IAF1B,QAEJlD,EAFI,QAGDyF,YACLZ,QAAQC,IAAI9E,EAAKL,KAAKoE,OACtBxB,EAAU,CAACvC,EAAKL,KAAKoE,SALf,gDAQVc,QAAQC,IAAI,KAAMvE,UARR,yDAAH,oDAWfmF,GAEAnD,EAAU,IAEdoD,OAAOC,iBAAiB,UAAU,WAC9BjD,EAAagD,OAAOE,WAAa,QAErClD,EAAagD,OAAOE,WAAa,OAClC,CAAC3D,EAASvC,EAAMuD,GAAqBlB,EAAeJ,IAGnD,uBAAKkE,UAAU,2BAAf,UACKhD,GACG,gBAACiD,EAAA,EAAD,WACI,qBAAID,UAAU,8BAAd,wBACA,gBAACE,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,IACT,eAACD,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,GAAIF,GAAI,EAAzB,SACI,gBAACG,EAAA,EAAD,CAAMC,SAAU/C,GAAaI,IAAamC,UAAU,OAApD,UACI,uBAAKA,UAAU,2EAAf,UACI,eAACS,EAAA,EAAD,CACIC,IAAK9F,EACL+F,IAAG,UAAEnE,EAAO,UAAT,QAAe,YAClBoE,MAAO,CAAEC,OAAQ,IAAKC,MAAO,KAC7Bd,UAAU,iCAEbxD,EAAO,IACJ,eAACuE,EAAA,EAAD,CACIf,UAAU,iCACVgB,QAAS,kBAAM7B,GAAW3C,EAAO,KAFrC,SAII,eAAC,IAAD,CAAYwD,UAAU,oBAKlC,gBAACO,EAAA,EAAKU,MAAN,CAAYjB,UAAU,OAAOkB,UAAU,QAAvC,UACI,eAACX,EAAA,EAAKY,MAAN,CAAYnB,UAAU,aAAtB,2BACA,eAACO,EAAA,EAAKa,QAAN,yBACIhG,MAAOR,GACH4C,GAAS,QAAS,CAAE6D,UAAU,KAFtC,IAGIC,SAAU,SAACnD,GAAD,OAAO5B,EAAS4B,EAAEE,OAAOjD,QACnCb,KAAK,QACLgH,YAAY,cACZC,QAAQ,WAEX9D,GAAO9C,OACJ,oBAAGoF,UAAU,mBAAb,kCAIR,eAACO,EAAA,EAAKY,MAAN,CAAYnB,UAAU,aAAtB,sBACA,gBAACyB,EAAA,EAAD,CAAYzB,UAAU,OAAtB,UACI,eAAC0B,EAAA,EAAD,yBACIH,YAAY,gBACZI,aAAW,gBACXC,mBAAiB,gBACbpE,GAAS,WAAY,CAAE6D,UAAU,KAJzC,IAKI9G,KAAM2C,GAAa,WAAa,OAChCsE,QAAQ,WAEZ,eAACC,EAAA,EAAWI,KAAZ,CACIzC,GAAG,eACHwB,MAAO,CACHkB,OAAQ,WAEZd,QAAS,kBAAM7D,IAAeD,KALlC,SAOKA,GAAa,eAAC,IAAD,IAAwB,eAAC,IAAD,SAG7CQ,GAAOK,UACJ,oBAAGiC,UAAU,mBAAb,mCAGFnG,GAAQqC,GAAiBmB,IACvB,gBAAC0E,EAAA,EAAD,CACIC,QAAQ,SACRhC,UAAU,qEAFd,UAIK9D,EAAe,IAChB,eAAC,IAAD,CACI8E,QAAS,kBAAM1D,IAAQ,IACvB0C,UAAU,kCAKtB,eAACiC,EAAA,EAAD,CAAQD,QAAQ,0BAA0BzH,KAAK,SAA/C,mBAGA,uBAAKyF,UAAU,oDAAf,UACI,oBAAGA,UAAU,kBAAb,8BACA,gBAACiC,EAAA,EAAD,CACIjC,UAAU,kBACVgB,QAAS,kBAAM/D,IAAUD,KAF7B,qBAIa,eAKzB,eAACmD,EAAA,EAAD,CAAKC,GAAI,UAIjB,gBAACH,EAAA,EAAD,CAAWD,UAAU,GAArB,UACI,qBAAIA,UAAU,8BAAd,wBACA,gBAACE,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,IACT,eAACD,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,GAAIF,GAAI,EAAzB,SACI,gBAACG,EAAA,EAAD,CAAMC,SAAU/C,GAAaI,IAAamC,UAAU,OAApD,UACI,uBAAKA,UAAU,2EAAf,UACI,eAACS,EAAA,EAAD,CACIE,IAAG,UAAEnE,EAAO,UAAT,QAAe,YAClBoE,MAAO,CAAEC,OAAQ,IAAKC,MAAO,KAC7Bd,UAAU,iCAEbxD,EAAO,IACJ,eAACuE,EAAA,EAAD,CACIf,UAAU,iCACVgB,QAAS,kBAAM7B,GAAW3C,EAAO,KAFrC,SAII,eAAC,IAAD,CAAYwD,UAAU,oBAIlC,gBAACO,EAAA,EAAKU,MAAN,CAAYjB,UAAU,OAAOkB,UAAU,OAAvC,UACI,eAACX,EAAA,EAAKY,MAAN,CAAYnB,UAAU,aAAtB,uBACA,eAACO,EAAA,EAAKa,QAAN,2BACQ5D,GAAS,OAAQ,CAAE6D,UAAU,KADrC,IAEI9G,KAAK,OACLgH,YAAY,aACZC,QAAQ,UAEX9D,GAAOwE,MACJ,oBAAGlC,UAAU,mBAAb,iCAGR,gBAACO,EAAA,EAAKU,MAAN,CAAYjB,UAAU,OAAOkB,UAAU,QAAvC,UACI,eAACX,EAAA,EAAKY,MAAN,CAAYnB,UAAU,aAAtB,2BACA,eAACO,EAAA,EAAKa,QAAN,2BACQ5D,GAAS,QAAS,CAAE6D,UAAU,KADtC,IAEI9G,KAAK,QACLgH,YAAY,cACZC,QAAQ,WAEX9D,GAAO9C,OACJ,oBAAGoF,UAAU,mBAAb,mCAINtD,GACE,gBAAC6D,EAAA,EAAKU,MAAN,CAAYjB,UAAU,OAAOkB,UAAU,QAAvC,UACI,eAACX,EAAA,EAAKY,MAAN,CAAYnB,UAAU,aAAtB,+BAGA,sBAAKA,UAAU,mBAAf,SACI,wBACIzF,KAAK,OACLyF,UAAU,eACVmC,OAAO,UACPb,SAAUpD,GACVqD,YAAY,eACZnC,GAAG,0BAMnB,eAACmB,EAAA,EAAKY,MAAN,CAAYnB,UAAU,aAAtB,sBACA,gBAACyB,EAAA,EAAD,CAAYzB,UAAU,OAAtB,UACI,eAAC0B,EAAA,EAAD,yBACIH,YAAY,uBACZI,aAAW,uBACXC,mBAAiB,gBACbpE,GAAS,WAAY,CAAE6D,UAAU,KAJzC,IAKI9G,KAAM2C,GAAa,WAAa,OAChCsE,QAAQ,WAEZ,eAACC,EAAA,EAAWI,KAAZ,CACIzC,GAAG,eACHwB,MAAO,CACHkB,OAAQ,WAEZd,QAAS,kBAAM7D,IAAeD,KALlC,SAOKA,GAAa,eAAC,IAAD,IAAwB,eAAC,IAAD,SAG7CQ,GAAOK,UACJ,oBAAGiC,UAAU,mBAAb,kCAGJ,eAACO,EAAA,EAAKY,MAAN,CAAYnB,UAAU,aAAtB,8BACA,gBAACyB,EAAA,EAAD,CAAYzB,UAAU,OAAtB,UACI,eAAC0B,EAAA,EAAD,yBACIH,YAAY,uBACZI,aAAW,uBACXC,mBAAiB,gBACbpE,GAAS,kBAAmB,CAAE6D,UAAU,KAJhD,IAKI9G,KAAM2C,GAAa,WAAa,OAChCsE,QAAQ,WAEZ,eAACC,EAAA,EAAWI,KAAZ,CACIzC,GAAG,eACHwB,MAAO,CACHkB,OAAQ,WAEZd,QAAS,kBAAM7D,IAAeD,KALlC,SAOKA,GAAa,eAAC,IAAD,IAAwB,eAAC,IAAD,SAG7CQ,GAAOM,iBACJ,oBAAGgC,UAAU,mBAAb,0CAGJ,eAACiC,EAAA,EAAD,CAAQD,QAAQ,0BAA0BzH,KAAK,SAA/C,sBAIA,uBAAKyF,UAAU,oDAAf,UACI,oBAAGA,UAAU,kBAAb,oCACA,gBAACiC,EAAA,EAAD,CACIjC,UAAU,kBACVgB,QAAS,kBAAM/D,IAAUD,KAF7B,kBAIU,eAKtB,eAACmD,EAAA,EAAD,CAAKC,GAAI,UAKpBxD,EACG,eAACwF,EAAA,EAAD,CAAQpC,UAAU,wBAAwBqC,IAAKvF,EAAWwF,OAAO,KAAjE,SACI,gBAACrC,EAAA,EAAD,CAAWD,UAAU,oDAArB,UACI,gBAACuC,EAAA,EAAD,CAAKvC,UAAU,sCAAf,uBACc,eAAC,IAAD,CAAeA,UAAU,SADvC,KACkD,IAAIwC,MAAOC,cAAe,IAD5E,sCAIA,eAACF,EAAA,EAAD,CAAKvC,UAAU,gCAAf,2DAMR,eAACoC,EAAA,EAAD,CAAQpC,UAAU,WAAWqC,IAAKvF,EAAWwF,OAAO,KAApD,SACI,gBAACrC,EAAA,EAAD,WACI,gBAACsC,EAAA,EAAD,CAAKvC,UAAU,kBAAf,6BACsB,IAAIwC,MAAOC,cADjC,wCAIA,eAACF,EAAA,EAAD,CAAKvC,UAAU,qCAAf,+DCnXT0C,GARE,kBACb,sBACI9B,MAAO,CAAE+B,SAAU,WAAYC,IAAK,MAAOC,KAAM,MAAOC,UAAW,wBADvE,SAGI,0D,UCoBOC,GApBQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,6BACtCpJ,EAASmC,aAAY,SAACC,GAAD,OAAWA,EAAMrC,aAAtCC,KACR,OACI,eAAC,IAAD,2BACQoJ,GADR,IAEIC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACJtJ,GAAQA,EAAK6F,WACTsD,EAEA,eAAC,IAAD,CACII,GAAI,CACAC,SAAU,IACVpH,MAAO,CAAEqH,KAAMH,W,wlBCiJ5BI,GAtJe,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,SAAUlG,EAAwC,EAAxCA,QAASmG,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAC9D,MAC+B,SAA3BC,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,IACc,UAA3BG,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,GAGT,eAACrD,EAAA,EAAD,CACIE,GAAI,GACJC,GAAmB,IAAfoD,EAAmB,GAAoB,IAAfA,EAAmB,EAAI,EACnD1D,UAAU,MAHd,SAMI,gBAAC6D,GAAA,EAAD,CACIC,UAAW,EACX9D,UAAU,iBACVY,MAAO,CACHkB,OAAQ,UACRa,SAAU,WACV9B,OAAQ,IACRC,MAAO,KAPf,UAUI,sBACIH,IAAK6C,EACL3C,OAAQ,IACRC,MAAM,OACNd,UAAU,oBACVU,IAAG,iBAAY8C,GACf5C,MAAO,CACHmD,MAAO,EACPnB,IAAK,EACLoB,OAAQ,EACRnB,KAAM,KAGd,sBAAK7C,UAAU,+DAAf,SACI,eAAC,KAAD,CACIA,UAAU,4CACVY,MAAO,CACHgC,IAAK,MACLC,KAAM,MACNC,UAAW,uBACXhB,OAAQ,UACRmC,OAAQ,GAEZjD,QAAS,kBACLkD,KAAUC,OAAV,UACOC,MADP,OACcZ,GADd,gBAEaG,KAAKC,QAAQJ,UAKtC,sBAAKxD,UAAU,+DAAf,SACI,eAAC,KAAD,CACIA,UAAU,4CACVY,MAAO,CACHgC,IAAK,EACLmB,MAAO,EACPjC,OAAQ,WAEZd,QAAS,WACL1D,GAAQ,GACRmG,EAAaD,YArDxBA,GA+Dc,SAA3BG,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,IACc,UAA3BG,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,GAGT,eAACrD,EAAA,EAAD,CAAKE,GAAI,GAAIL,UAAU,MAAvB,SACI,eAAC6D,GAAA,EAAD,CACIC,UAAW,EACX9D,UAAU,iBACVY,MAAO,CACHkB,OAAQ,UACRa,SAAU,WACV9B,OAAQ,IACRC,MAAO,KAPf,SAUI,wBAAOuD,UAAQ,EAACvD,MAAM,OAAOD,OAAO,MAApC,SACI,yBACIF,IAAK6C,EACLjJ,KAAI,gBAAWoJ,KAAKC,QAAQJ,GAAUlE,MAAM,KAAK,WAd/BkE,GAsBX,SAA3BG,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,IACc,UAA3BG,KAAKC,QAAQJ,GAGT,eAACrD,EAAA,EAAD,CAAKE,GAAI,GAAIL,UAAU,MAAvB,SACI,wBAAOqE,UAAQ,EAAf,SACI,yBAAQ1D,IAAK6C,EAAUjJ,KAAI,gBAAWoJ,KAAKC,QAAQJ,GAAUlE,MAAM,KAAK,SAF9CkE,GAQtC,eAACrD,EAAA,EAAD,CAAKE,GAAI,GAAIL,UAAU,MAAvB,SACI,eAAC6D,GAAA,EAAD,CACIC,UAAW,EACX9D,UAAU,yBACVY,MAAO,CACH0D,gBAAiB,WAJzB,SAOI,uBACItE,UAAU,oDACVY,MAAO,CAAEE,MAAO,KAFpB,UAII,eAAC,KAAD,CAAqBd,UAAU,eAC/B,uBAAMA,UAAU,iCAAhB,SAAkDwD,EAASlE,MAAM,KAAK,KACtE,uBAAMU,UAAU,aAAhB,SAA8B2D,KAAKC,QAAQJ,KAC3C,eAACzC,EAAA,EAAD,UACI,eAAC,KAAD,CACIf,UAAU,aACVgB,QAAS,kBACLkD,KAAUC,OAAV,UACOC,MADP,OACcZ,GADd,eAEYG,KAAKC,QAAQJ,gBArBfA,ICqJ3Be,GArQE,SAAC,GAAsE,IAApEC,EAAmE,EAAnEA,eAAgB3K,EAAmD,EAAnDA,KAAM4K,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAAe,EAC3DtJ,oBAAS,GADkD,mBAC5E+B,EAD4E,KACtEC,EADsE,OAEnDhC,mBAAS,MAF0C,mBAE5EuJ,EAF4E,KAElEC,EAFkE,OAGjDxJ,mBAAS,IAHwC,mBAG5EyJ,EAH4E,KAGjEtB,EAHiE,KAI7EuB,EAAOC,QAAQJ,GACfK,EAAc,SAACC,GACjBL,EAAYK,EAAMC,gBAEhBC,EAAc,WAChBP,EAAY,OAGhB,OACIjL,EAAKe,QAAU4J,EAAelB,MAC9BmB,EAAS7J,QAAU4J,EAAelB,MAClCzJ,EAAKe,QAAU4J,EAAepB,GAG1B,uBAAKpD,UAAU,0BAA0BY,MAAO,CAAE0E,YAAa,OAA/D,UACI,eAAC7E,EAAA,EAAD,CACIC,IAAK+D,EAASvC,KACdvB,IAAK8D,EAASxG,MACd2C,MAAO,CAAEE,MAAO,GAAID,OAAQ,MAEhC,uBAAKb,UAAU,uCAAf,UACI,uBAAKA,UAAU,SAAf,UACKwE,EAAe9J,SACZ,uBAAKsF,UAAU,mCAAf,UACKwE,EAAee,WACZ,gBAAC1B,GAAA,EAAD,CACI2B,MAAI,EACJxF,UAAU,iEAFd,oBAKQwE,EAAee,UAAU9G,OAAS,IAC5B+F,EAAee,UAAUE,UAAU,EAAG,KACtCjB,EAAee,UAP7B,OAQW,IACP,eAAC,KAAD,OAIR,eAAC1B,GAAA,EAAD,CACI2B,MAAI,EACJxF,UAAU,8BACVY,MAAO,CAAEE,MAAO,QAHpB,SAKK0D,EAAe9J,QAAQgL,WAAW,QAC/B,eAAC,iBAAD,CACIC,SAAS,QACTC,aAAa,EACbC,QAAS,EACTC,QAAS,EACTC,SAAS,qCACTC,IAAKxB,EAAe9J,UAGxB8J,EAAe9J,aAM9B8J,EAAeyB,MACZ,eAAC/F,EAAA,EAAD,CAAKF,UAAU,OAAf,SACKwE,EAAeyB,KAAKtH,KAAI,SAAC6E,GAAD,OACrB,eAAC,GAAD,CACIA,SAAUA,EACVlG,QAASA,EACTmG,aAAcA,GACTD,QAMrB,eAACzC,EAAA,EAAD,CACIY,aAAW,OACXuE,gBAAc,YACdC,gBAAc,OACdnF,QAASkE,EACTlF,UAAU,OALd,SAOI,eAAC,KAAD,MAEJ,eAACoG,GAAA,EAAD,CACIhH,GAAG,YACHyF,SAAUA,EACVwB,aAAW,EACXrB,KAAMA,EACNsB,QAASjB,EACTkB,WAAY,CACR3F,MAAO,CACH4F,UAAW,MARvB,SAYI,eAACC,GAAA,EAAD,CACIzF,QAAS,WACLqE,IACAT,EAASJ,EAAekC,MAHhC,SAMI,eAAC,KAAD,WAKZ,oBAAG1G,UAAU,uCAAb,SACK2G,KAAOnC,EAAeoC,WAAWC,kBAMlDhN,EAAKe,QAAU4J,EAAelB,MAAQmB,EAAS7J,QAAU4J,EAAepB,GAEpE,uBACIpD,UAAU,8DACVY,MAAO,CAAEkG,WAAY,OAFzB,UAII,uBAAK9G,UAAU,iDAAf,UACI,uBAAKA,UAAU,mEAAf,UACI,eAACe,EAAA,EAAD,CACIY,aAAW,OACXuE,gBAAc,YACdC,gBAAc,OACdnF,QAASkE,EACTlF,UAAU,OALd,SAOI,eAAC,KAAD,MAEJ,gBAACoG,GAAA,EAAD,CACIhH,GAAG,YACHyF,SAAUA,EACVwB,aAAW,EACXrB,KAAMA,EACNsB,QAASjB,EACTkB,WAAY,CACR3F,MAAO,CACH4F,UAAW,MARvB,UAaI,eAACC,GAAA,EAAD,CACIzF,QAAS,WACLqE,IACAV,EAAUH,EAAekC,MAHjC,SAMI,eAAC,KAAD,MAEHlC,EAAe9J,SACZ,eAAC+L,GAAA,EAAD,CACIzF,QAAS,WACLqE,IACAX,EAAQF,EAAekC,MAH/B,SAMI,eAAC,KAAD,MAIR,eAACD,GAAA,EAAD,CACIzF,QAAS,WACLqE,IACAT,EAASJ,EAAekC,MAHhC,SAMI,eAAC,KAAD,SAIR,uBAAK1G,UAAU,4DAAf,UACKwE,EAAe9J,SACZ,uBAAKsF,UAAU,mBAAf,UACKwE,EAAee,WACZ,gBAAC1B,GAAA,EAAD,CACI2B,MAAI,EACJxF,UAAU,0CAFd,oBAIQwE,EAAee,UAAUE,UAAU,EAAG,KAJ9C,OAIyD,IACrD,eAAC,KAAD,OAGR,eAAC5B,GAAA,EAAD,CACI2B,MAAI,EACJxF,UAAU,mBACVY,MAAO,CAAEE,MAAO,QAHpB,SAKK0D,EAAe9J,QAAQgL,WAAW,QAC/B,eAAC,iBAAD,CACIC,SAAS,QACTC,aAAa,EACbC,QAAS,EACTC,QAAS,EACTC,SAAS,qCACTC,IAAKxB,EAAe9J,UAGxB8J,EAAe9J,aAK9B8J,EAAeyB,MACZ,eAAC/F,EAAA,EAAD,UACKsE,EAAeyB,KAAKtH,KAAI,SAAC6E,GAAD,OACrB,eAAC,GAAD,CACIA,SAAUA,EACVlG,QAASA,EACTmG,aAAcA,EAEdC,WAAYc,EAAeyB,KAAKxH,QAD3B+E,cAS7B,eAAC/C,EAAA,EAAD,CACIC,IAAK7G,EAAKqI,KACVvB,IAAK9G,EAAKoE,MACV2C,MAAO,CAAEE,MAAO,GAAID,OAAQ,GAAIyE,YAAa,SAGrD,qBAAGtF,UAAU,4CAAb,UACKwE,EAAeuC,QAAU,oBAAG/G,UAAU,OAAb,kBACzB2G,KAAOnC,EAAeoC,WAAWC,aAItC,gBAACG,GAAA,EAAD,CACI3J,KAAMA,EACN4J,OAAQ,kBAAM3J,GAASD,IACvB6J,WAAW,UACXC,UAAQ,EACRnH,UAAU,kBALd,UAOI,sBAAKU,IAAKqE,EAAWpE,IAAKoE,IAC1B,eAAC,IAAD,CACI/E,UAAU,4CACVY,MAAO,CACHgC,IAAK,QACLmB,MAAO,QACPjC,OAAQ,WAEZd,QAAS,kBAAM1D,GAASD,aAMxCoH,EAAS7J,MAAU4J,EAAepB,GAC3B,OCrNAgE,GAnDD,SAAC,GAOR,IANHC,EAME,EANFA,SACAnM,EAKE,EALFA,SACAoM,EAIE,EAJFA,aACAC,EAGE,EAHFA,mBACAC,EAEE,EAFFA,mBACAC,EACE,EADFA,eAEM3N,EAAWwC,cADf,EAEgChB,mBAAQ,OACtCJ,QADsC,IACtCA,OADsC,EACtCA,EAAUsE,QACN,SAACkI,GAAD,OAAiBA,EAAYpE,QAAZ,OAAqB+D,QAArB,IAAqBA,OAArB,EAAqBA,EAAUzM,SAAU8M,EAAYX,UACxEtI,QALJ,mBAEKkJ,EAFL,UAQF,OACI,gBAAC9D,GAAA,EAAD,CACIC,UAAW,GACX0B,MAAI,EACJxF,WACY,OAARqH,QAAQ,IAARA,OAAA,EAAAA,EAAUO,UACJ,uEACA,qEAEVhH,MAAO,CAAEkB,OAAQ,WACjBd,QAAO,sBAAE,sBAAAjH,EAAA,6DACLuN,EAAY,OAACD,QAAD,IAACA,OAAD,EAACA,EAAUzM,OACvB2M,EAAmB,IACnBC,IAAqBC,GAHhB,SAICzN,IAAMa,IAAN,8CAA0CwM,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAUzM,QAJrD,OAKLd,EAASmB,MALJ,2CATb,UAiBI,uBAAK+E,UAAU,4BAAf,UACI,eAACS,EAAA,EAAD,CAAQC,IAAG,OAAE2G,QAAF,IAAEA,OAAF,EAAEA,EAAUnF,KAAMvB,IAAG,OAAE0G,QAAF,IAAEA,OAAF,EAAEA,EAAUpJ,MAAO+B,UAAU,qBAE7D,uBAAKA,UAAU,QAAf,UACI,oBAAGA,UAAU,uCAAb,gBAAqDqH,QAArD,IAAqDA,OAArD,EAAqDA,EAAUnF,OAC/D,oBAAGlC,UAAU,6BAAb,UACa,OAARqH,QAAQ,IAARA,OAAA,EAAAA,EAAUO,UACL,SADL,iBAEejB,KAAM,OAACU,QAAD,IAACA,OAAD,EAACA,EAAUT,WAAWC,mBAKvDc,EAAY,eAACE,GAAA,EAAD,CAAOC,aAAcH,EAAWI,MAAM,UAAU/H,UAAU,SAAY,SC4FhFgI,GA5IO,SAAC,GAA8B,IAA5BxE,EAA2B,EAA3BA,SAAUrE,EAAiB,EAAjBA,WAC/B,MAC+B,SAA3BwE,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,IACc,UAA3BG,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,GAGT,eAACrD,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,EAAGN,UAAU,MAA9B,SACI,gBAAC6D,GAAA,EAAD,CACIC,UAAW,EACX9D,UAAU,iBACVY,MAAO,CACH+B,SAAU,WACV9B,OAAQ,IACRC,MAAO,QANf,UASI,sBACIH,IAAK6C,EACL3C,OAAQ,IACRC,MAAM,OACNd,UAAU,oBACVU,IAAG,iBAAY8C,GACf5C,MAAO,CACHmD,MAAO,EACPnB,IAAK,EACLoB,OAAQ,EACRnB,KAAM,KAGd,eAAC,IAAD,CACI7C,UAAU,uCACVY,MAAO,CACHmD,MAAO,EACPnB,IAAK,EACLd,OAAQ,WAEZd,QAAS,kBAAM7B,EAAWqE,UA9BGA,GAsClB,SAA3BG,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,IACc,UAA3BG,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,GAGT,eAACrD,EAAA,EAAD,CAAKE,GAAI,GAAIL,UAAU,MAAvB,SACI,gBAAC6D,GAAA,EAAD,CACIC,UAAW,EACX9D,UAAU,iBACVY,MAAO,CACH+B,SAAU,YAJlB,UAOI,wBAAO0B,UAAQ,EAACvD,MAAM,OAAOD,OAAO,MAApC,SACI,yBACIF,IAAK6C,EACLjJ,KAAI,gBAAWoJ,KAAKC,QAAQJ,GAAUlE,MAAM,KAAK,QAGzD,eAAC,IAAD,CACIU,UAAU,uCACVY,MAAO,CACHmD,MAAO,EACPnB,IAAK,EACLd,OAAQ,UACRmC,OAAQ,GAEZjD,QAAS,kBAAM7B,EAAWqE,UAtBJA,GA6BX,SAA3BG,KAAKC,QAAQJ,IACc,SAA3BG,KAAKC,QAAQJ,IACc,UAA3BG,KAAKC,QAAQJ,GAGT,eAACrD,EAAA,EAAD,CAAKE,GAAI,GAAIL,UAAU,MAAvB,SACI,uBAAKA,UAAU,oBAAf,UACI,wBAAOqE,UAAQ,EAAf,SACI,yBACI1D,IAAK6C,EACLjJ,KAAI,gBAAWoJ,KAAKC,QAAQJ,GAAUlE,MAAM,KAAK,QAGzD,eAAC,IAAD,CACIU,UAAU,uCACVY,MAAO,CACHmD,MAAO,EACPnB,IAAK,EACLd,OAAQ,WAEZd,QAAS,kBAAM7B,EAAWqE,UAfJA,GAsBtC,eAACrD,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,EAAGN,UAAU,MAA9B,SACI,eAAC6D,GAAA,EAAD,CACIC,UAAW,EACX9D,UAAU,2CACVY,MAAO,CACH0D,gBAAiB,WAJzB,SAOI,uBACItE,UAAU,oDACVY,MAAO,CAAEE,MAAO,KAFpB,UAII,eAAC,KAAD,CAAqBd,UAAU,eAC/B,uBAAMA,UAAU,iCAAhB,SAAkDwD,EAASlE,MAAM,KAAK,KACtE,uBAAMU,UAAU,aAAhB,SAA8B2D,KAAKC,QAAQJ,KAC3C,eAAC,IAAD,CACIxD,UAAU,oBACVY,MAAO,CACHmD,MAAO,EACPnB,IAAK,EACLd,OAAQ,WAEZd,QAAS,kBAAM7B,EAAWqE,YAtBDA,IC43BlCyE,GA36BF,WAAO,IACRpO,EAASmC,aAAY,SAACC,GAAD,OAAWA,EAAMrC,aAAtCC,KACAmB,EAAYgB,aAAY,SAACC,GAAD,OAAWA,EAAMjB,WAAzCA,QACekN,EAAalM,aAAY,SAACC,GAAD,OAAWA,EAAMnB,kBAAzDH,cACAwN,EAASnM,aAAY,SAACC,GAAD,OAAWA,EAAMkM,QAAtCA,KACFrO,EAAWwC,cACXF,EAAUC,cAND,EAOWf,mBAASN,GAAWA,GAP/B,mBAORoN,EAPQ,KAODC,EAPC,KAQPvM,EAAaC,sBAAbD,SARO,EASiBR,mBAAS,GAT1B,mBASRgN,EATQ,KASEC,EATF,OAU6BjN,oBAAS,GAVtC,mBAURkN,EAVQ,KAUQC,EAVR,OAWiBnN,mBAAS,IAX1B,mBAWRmJ,EAXQ,KAWEiE,EAXF,OAYiBpN,mBAAS6M,GAAQA,GAZlC,mBAYRjN,EAZQ,KAYEyN,EAZF,OAaerN,mBAAS,IAbxB,mBAaRZ,GAbQ,KAaCkO,GAbD,QAcatN,mBAAS,IAdtB,qBAcRuN,GAdQ,MAcAC,GAdA,SAeaxN,mBAAS,IAftB,qBAeRkB,GAfQ,MAeAC,GAfA,SAgB6BnB,mBAAS,IAhBtC,qBAgBRR,GAhBQ,MAgBQiO,GAhBR,SAiBuBzN,mBAAS,IAjBhC,qCAkBSA,oBAAS,IAlBlB,qBAkBR+B,GAlBQ,MAkBFC,GAlBE,SAmBuBhC,qBAnBvB,qBAmBR0N,GAnBQ,MAmBKC,GAnBL,SAoB+B3N,oBAAS,GApBxC,qBAoBR4N,GApBQ,MAoBSC,GApBT,SAqB+B7N,mBAAS,MArBxC,qBAqBR8N,GArBQ,MAqBS7B,GArBT,SAsBmBjM,mBAAS,IAtB5B,qBAsBR+N,GAtBQ,MAsBGC,GAtBH,SAuB6BhO,oBAAS,GAvBtC,qBAuBRmM,GAvBQ,MAuBQ8B,GAvBR,SAwB+BjO,oBAAS,GAxBxC,qBAwBRkO,GAxBQ,MAwBShC,GAxBT,SAyBuBlM,oBAAS,GAzBhC,qBAyBRmO,GAzBQ,MAyBKC,GAzBL,SA0BmBpO,oBAAS,GA1B5B,qBA0BRqO,GA1BQ,MA0BGC,GA1BH,MA2BTxM,GAAsBjC,GAAY0N,GAAQ,KAC1CgB,GAAY9M,iBAAO,GACnBD,GAAYC,iBAAO,GACnB+M,GAAoB/M,iBAAO,GAC3BgN,GAAchN,iBAAO,MA/BZ,GAiCiBzB,mBAAS,MAjC1B,qBAiCRuJ,GAjCQ,MAiCEC,GAjCF,MAkCTE,GAAOC,QAAQJ,IAIfQ,GAAc,WAChBP,GAAY,OAGVkF,GAASjN,iBAAO,MAEhBkC,GAAgB,uCAAG,WAAOC,GAAP,iBAAAnF,EAAA,+EAEMC,IAAMa,IAAN,8BAAiCqE,IAFvC,uBAEThF,EAFS,EAETA,KAFS,kBAGVA,GAHU,gCAKjB6E,QAAQC,IAAI,KAAMvE,UALD,yDAAH,sDAatBgB,qBAAU,WAoDN,OAnDAuO,GAAOC,QAAUC,cAAG,KACpBF,GAAOC,QAAQE,GAAG,eAAe,SAACC,GAC9B,IAAMC,EAAaD,EAASE,SAAS9K,QACjC,SAAC6H,GAAD,OACIA,EAASzM,QAAUf,EAAKe,OACxBI,IADA,OAEAA,QAFA,IAEAA,OAFA,EAEAA,EAASuP,MAAK,SAACC,GAAD,OAAYA,EAAO5P,QAAUyM,EAASzM,aAE5DyN,EAASgC,GAELD,EAASK,YACTL,EAASK,WAAW7P,QAAUf,EAAKe,QADnC,OAEAf,QAFA,IAEAA,OAFA,EAEAA,EAAM6F,aACN1E,IAHA,OAIAA,QAJA,IAIAA,OAJA,EAIAA,EAASuP,MAAK,SAACC,GAAD,OAAYA,EAAO5P,QAAUwP,EAASxP,WAEpDkB,EAAS,GAAD,OAAIsO,EAASK,WAAWvI,KAAxB,cAA0C,CAC9CwI,WAAY,OACZC,aAAa,IAGA,OAAblG,IAA6B,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU7J,SAAUwP,EAASK,WAAW7P,OAC7D8N,EAAY0B,EAASK,aAGzBL,EAASQ,aACTR,EAASQ,YAAYhQ,QAAUf,EAAKe,QADpC,OAEAf,QAFA,IAEAA,OAFA,EAEAA,EAAM6F,aAENgJ,OAIRsB,GAAOC,QAAQY,KAAK,aAAchR,GAElCmQ,GAAOC,QAAQE,GACX,kBACA,YAA+E,IAA5EW,EAA2E,EAA3EA,gBAAiBC,EAA0D,EAA1DA,cAA0D,EAA3CrQ,QAA2C,EAAxBsQ,kBAC9CF,IAAoBC,GACpBjR,EAASa,EAAcd,EAAKe,WAKxCoP,GAAOC,QAAQE,GAAG,eAAe,YAA2B,EAAxBc,UAAwB,EAAbC,SAC5BrR,EAAK6M,MAChB5M,EAASiB,GAAWlB,EAAKe,QACzBd,EAASa,EAAcd,EAAKe,YAI7B,WACHoP,GAAOC,QAAQkB,IAAI,eAAe,SAACjR,OACnC8P,GAAOC,QAAQkB,IAAI,qBAAqB,SAACf,OAEzCJ,GAAOC,QAAQkB,IAAI,kBAAkB,eACrCnB,GAAOC,QAAQkB,IAAI,eAAe,eAClCtL,OAAOuL,oBAAoB,UAAU,kBAE1C,CACCtP,EACAjC,EACAuC,EACAgN,GACAZ,EACA/D,EACA3J,GACAhB,EACAkB,IAGJS,qBAAU,WACN,IAAM4P,EAAQ,IAAIC,MAAM,kBAoBxB,OAlBAtB,GAAOC,QAAQE,GAAG,oBAAlB,uCAAuC,WAAOjQ,GAAP,iBAAAH,EAAA,+EAEHC,IAAMa,IAAI,oBAFP,gBAEjB0Q,EAFiB,EAEvBrR,KACRyO,EAAY4C,EAAIrQ,UAHe,gDAK/B6D,QAAQC,IAAR,MAL+B,yDAAvC,uDASAgL,GAAOC,QAAQE,GAAG,eAAlB,uCAAkC,WAAOhC,GAAP,SAAApO,EAAA,sDAC1BoO,EAAK7E,OAASzJ,EAAKe,OAAS4N,GAC5B6C,EAAMG,OAENrD,EAAK7E,OAASzJ,EAAKe,OAASuN,EAAK/E,KAAOvJ,EAAKe,OAC7Cd,EAASmB,MALiB,2CAAlC,uDASO,WACH+O,GAAOC,QAAQkB,IAAI,gBAAgB,SAAChD,OACpC6B,GAAOC,QAAQkB,IAAI,qBAAqB,SAACjR,UAE9C,CAACJ,EAAUoB,EAAUsN,EAAgB3O,EAAKe,QAE7Ca,qBAAU,WACF2B,IACAsM,IAAe,GACfE,IAAa,GACE,uCAAG,4BAAA7P,EAAA,+EAEWkF,GAAiB7B,IAF5B,QAEJqO,EAFI,QAGC9L,WACPsJ,GAAewC,EAAO5R,MACtB6P,IAAe,KAEfA,IAAe,GACfE,IAAa,IARP,gDAWV7K,QAAQC,IAAI,KAAMvE,UAXR,yDAAH,oDAcfmF,KAEA8J,IAAe,GACfT,GAAe,KAGdpP,IAAQ,OAACA,QAAD,IAACA,OAAD,EAACA,EAAM6F,aAChBtD,EAAQ0B,KAAK,KAGb+B,OAAOE,WAAa,KACpBwJ,IAAkB,GAGtB1J,OAAOC,iBAAiB,UAAU,WAC1BD,OAAOE,WAAa,KACpBwJ,IAAkB,MAIN,OAApBH,KAA6BA,GAAgB1O,SAAW0O,GAAgBnD,OAClE8D,GAAYE,QAAQyB,QAG1B5R,EAASa,EAAcd,EAAKe,QAC5Bd,EAASiB,GAAWlB,EAAKe,QACzBd,EAASmB,QACV,CAACmC,GAAqBtD,EAAUsC,EAASgN,GAAiBvP,IAE7D,IAAMyN,GAAe,SAAC1M,GAClB8N,EAAYN,EAAM5I,QAAO,SAAC6H,GAAD,OAAcA,EAASzM,QAAUA,KAAO,KAG/D+Q,GAAW,uCAAG,WAAOxN,GAAP,mBAAApE,EAAA,yDAChBoE,EAAEyN,iBACIzD,EAAO,CACTzB,IAAK2C,GACLxP,KAAMA,EAAK6M,IACXpD,KAAMzJ,EAAKe,MACXqL,KAAMzJ,GACN+I,WAA0B,OAAf6D,SAAe,IAAfA,QAAA,EAAAA,GAAiB1O,SAAjB,OACL0O,SADK,IACLA,QADK,EACLA,GAAiB1O,SACF,OAAf0O,SAAe,IAAfA,QAAA,EAAAA,GAAiBnD,MAAjB,OACAmD,SADA,IACAA,QADA,EACAA,GAAiBnD,KAAK,GACtB,GACN7C,GAAE,OAAEqB,QAAF,IAAEA,OAAF,EAAEA,EAAU7J,MACdF,WACAmR,OAAQrJ,KAAKsJ,SAEZpR,IAAqB,UAAVyD,EAAE4N,KAAoBrR,IAAW8B,IAhBjC,wBAiBZoM,GAAW,IAjBC,kBAmBe5O,IAAMC,KAAK,mBAAoBkO,GAnB9C,iBAmBAjO,EAnBA,EAmBAA,MACCQ,UACLZ,EAASmB,MAET+O,GAAOC,QAAQY,KAAK,UAAW3Q,EAAKQ,SACpC4C,IAAQ,GACRb,GAAU,IACV8K,GAAmB,IACnB+B,GAAa,KA3BT,kDA8BRvK,QAAQC,IAAR,MA9BQ,gCAiCZlD,EAAS,yBAA0B,CAC/B4O,WAAY,OACZC,aAAa,IAnCL,0DAAH,sDAwCXzM,GAAU,uCAAG,WAAOC,GAAP,uBAAApE,EAAA,sDAGf,IAFQqE,EAAUD,EAAEE,OAAZD,MACFE,EAAW,IAAIC,SACZC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAC9BF,EAASI,OAAO,UAAWN,EAAMI,IAJtB,yBAQYxE,IAAMC,KAAK,iBAAkBqE,GARzC,iBAQHpE,EARG,EAQHA,MACHyE,KAAI,SAACC,GAAD,OAAWnC,IAAU,SAACoC,GAAD,4BAAkBA,GAAlB,CAA4BD,EAAME,iBAChE5E,EAAKuE,OAASnB,IAAQ,GAAQA,IAAQ,GAV3B,kDAYXyB,QAAQC,IAAI,KAAMvE,UAZP,0DAAH,sDAgBV0E,GAAU,uCAAG,WAAOC,GAAP,eAAArF,EAAA,6DACTsF,EAAWD,EAAGE,MAAM,aAAa,GADxB,SAETtF,IAAMuF,OAAN,yBAA+BF,IAFtB,OAGf5C,GAAUD,GAAOgD,QAAO,SAACC,GAAD,OAAiBA,IAAgBL,MACvC,IAAlB5C,GAAOiC,OAAenB,IAAQ,GAASA,IAAQ,GAJhC,2CAAH,sDAOV0O,GAAsB,WACpBxP,GAAOiC,SACPjC,GAAOmC,KAAI,SAACC,GAAD,OAAWO,GAAWP,MAC7BpC,GAAOiC,OAAS,EAAI,GACpB3C,EAAS,UAAD,OAAWU,GAAOiC,OAAS,EAA3B,UAAsC,CAC1CkM,aAAa,EACbD,WAAY,UAInBlO,GAAOiC,QACRnB,IAASD,KAIXsH,GAAY,SAACvF,GACf4K,GAAOC,QAAQY,KAAK,gBAAiBzL,IAEnCsF,GAAU,SAACtF,GACbkK,GAAalK,GACbwJ,GAAWT,GAAQA,EAAK3I,QAAO,SAACyM,GAAD,OAAaA,EAAQvF,MAAQtH,KAAI,GAAG1E,SACnEZ,EAASmB,OAGP2J,GAAW,SAACxF,GACdmI,GAAmBY,GAAQA,EAAK3I,QAAO,SAACyM,GAAD,OAAaA,EAAQvF,MAAQtH,KAAI,KAGtE8M,GAAS,uCAAG,WAAO9M,GAAP,SAAArF,EAAA,sDACdiQ,GAAOC,QAAQY,KAAK,sBAAuB,CAAEsB,SAAU/M,EAAIgN,KAAMvS,EAAK6M,MADxD,2CAAH,sDAIT2F,GAAa,uCAAG,WAAOjN,GAAP,SAAArF,EAAA,sDAClBiQ,GAAOC,QAAQY,KAAK,0BAA2B,CAAEI,UAAW7L,EAAI8L,OAAQrR,EAAK6M,MACzE5L,IACAiO,GAAkBjO,GAAe0E,QAAO,SAAC8M,GAAD,OAAaA,EAAQ5F,MAAQtH,MAEzEtF,EAASa,EAAcd,EAAKe,QALV,2CAAH,sDAQb2R,GAAe,uCAAG,WAAOnN,GAAP,SAAArF,EAAA,sDACpBiQ,GAAOC,QAAQY,KAAK,0BAA2B,CAAEI,UAAW7L,EAAI8L,OAAQrR,EAAK6M,MAC7E3H,QAAQC,IAAI,WAFQ,2CAAH,sDAKrB,OACI,iCACI,eAACoD,EAAA,EAAD,CAAQoK,GAAG,OAAOxM,UAAU,WAAWqC,IAAKwH,GAAWvH,OAAO,KAA9D,SACI,gBAACrC,EAAA,EAAD,CAAWwM,MAA0B,KAArC,UACI,eAAC,IAAD,CAAMrJ,GAAG,IAAT,SACI,gBAAChB,EAAA,EAAOsK,MAAR,CAAc1M,UAAU,gCAAxB,UACI,sBACIA,UAAU,iBACVa,OAAO,OACPF,IAAI,YACJD,IAAI,SAER,uBAAMV,UAAU,KAAhB,6BAGR,gBAACuC,EAAA,EAAD,CAAKvC,UAAU,6BAAf,UACI,eAACuC,EAAA,EAAIoK,KAAL,CAAU3M,UAAU,kBAApB,SACKwI,EACG,eAACzH,EAAA,EAAD,CACIC,QAAS,kBAAMyH,GAAkB,IACjCmE,KAAK,QACLC,GAAI,CAAEC,GAAI,GAHd,SAKI,eAAC,KAAD,CAAyB9M,UAAU,iBAGvC,eAACe,EAAA,EAAD,CACIC,QAAS,kBAAMyH,GAAkB,IACjCmE,KAAK,QACLC,GAAI,CAAEC,GAAI,GAHd,SAKI,eAAC,KAAD,CAAsB9M,UAAU,mBAI5C,eAACuC,EAAA,EAAIoK,KAAL,CAAU3M,UAAU,kBAApB,SACI,eAACe,EAAA,EAAD,CAAYC,QA5ThB,SAACmE,GACjBL,GAAYK,EAAMC,gBA2ToCwH,KAAK,QAAQC,GAAI,CAAEC,GAAI,GAAzD,SACI,eAACrM,EAAA,EAAD,CACIG,MAAO,CAAEE,MAAO,GAAID,OAAQ,IAC5BF,IAAK9G,EAAKoE,MACVyC,IAAK7G,EAAKqI,WAMtB,gBAACkE,GAAA,EAAD,CACIvB,SAAUA,GACVG,KAAMA,GACNsB,QAASjB,GACTrE,QAASqE,GACTzE,MAAO,CACHmM,UAAWlD,GAAUI,QAAQ+C,aAAe,IAEhDzG,WAAY,CACRzC,UAAW,EACX+I,GAAI,CACAI,SAAU,UACVzN,OAAQ,4CACR0N,GAAI,IACJ,oBAAqB,CACjBpM,MAAO,GACPD,OAAQ,GACRiM,IAAK,GACLK,GAAI,GAER,WAAY,CACRC,QAAS,KACTC,QAAS,QACT1K,SAAU,WACVC,IAAK,EACLmB,MAAO,GACPjD,MAAO,GACPD,OAAQ,GACRyM,QAAS,mBACTxK,UAAW,iCACXmB,OAAQ,KAIpBsJ,gBAAiB,CAAEC,WAAY,QAASC,SAAU,OAClDC,aAAc,CAAEF,WAAY,QAASC,SAAU,UAnCnD,UAqCI,gBAAChH,GAAA,EAAD,WACI,eAAChG,EAAA,EAAD,CACIC,IAAK7G,EAAKqI,KACVvB,IAAK9G,EAAKoE,MACV2C,MAAO,CAAEE,MAAO,GAAID,OAAQ,GAAIyE,YAAa,MAC9C,IACFzL,EAAKqI,QAEV,eAACyL,GAAA,EAAD,IACA,gBAAClH,GAAA,EAAD,WACI,eAACmH,GAAA,EAAD,UACI,eAAC,KAAD,CAAUC,SAAS,YAF3B,cAMA,gBAACpH,GAAA,EAAD,CACIzF,QAAS,WACLlH,EThcV,uCAAM,WAAOA,GAAP,SAAAC,EAAA,sDAC5BI,aAAa2T,WAAW,QACxBhU,EAAS,CACLS,KAAMpB,IAHkB,2CAAN,uDSicU6Q,GAAOC,QAAQ8D,aACf3R,EAAQ0B,KAAK,KACb3D,aAAa2T,WAAW,aALhC,UAQI,eAACF,GAAA,EAAD,UACI,eAAC,KAAD,CAAeC,SAAS,YAThC,uBAkBhB,0BAAS7N,UAAU,YAAnB,SACI,eAACC,EAAA,EAAD,CAAWwM,MAAoB,KAA/B,SACI,gBAACvM,EAAA,EAAD,WACI,gBAACC,EAAA,EAAD,CACIG,GAAI,EACJD,GAAI,GACJO,MAAO,CACHC,OAAO,gBAAD,OACFgJ,GAAUI,QAAQ+C,aAAelQ,GAAUmN,QAAQ+C,aADjD,OAGN1I,gBAAiB,WAPzB,UAUI,eAAC0J,GAAA,EAAD,CAAOC,QAAM,EAACrN,MAAO,CAAEmM,UAAW,GAAImB,aAAc,GAApD,SACI,gBAACC,GAAA,EAAD,CACI/S,MAAOkN,EACPhH,SA1YX,SAAC6D,EAAOiJ,GACzB7F,EAAY6F,IA0YgBpM,QAAQ,YACRqM,eAAe,UACfC,UAAU,UACV3M,aAAW,oBANf,UAQI,eAAC4M,GAAA,EAAD,CAAKC,KAAM,eAAC,KAAD,IAAe7M,aAAW,UAErC,eAAC4M,GAAA,EAAD,CACIC,KACI,eAAC3G,GAAA,EAAD,CACIC,aAAcI,GAAYA,EAASzJ,OACnCsJ,MAAM,UAFV,SAII,eAAC,KAAD,MAGRpG,aAAW,kBAKvB,sBAAK3B,UAAU,cAAf,SACI,gBAACyB,EAAA,EAAD,CAAYzB,UAAU,OAAtB,UACI,eAACyB,EAAA,EAAWI,KAAZ,CAAiBzC,GAAG,SAASY,UAAU,wBAAvC,SACI,eAAC,KAAD,MAEJ,eAAC0B,EAAA,EAAD,CACI1B,UAAU,iBACVuB,YAAY,oBACZI,aAAW,WACXC,mBAAiB,SACjBxG,MAAOyN,GACPvH,SAAU,SAACnD,GAAD,OAAO2K,GAAU3K,EAAEE,OAAOjD,QACpCb,KAAK,cAIhBsO,IAAUY,IAAe,oBAAGzJ,UAAU,aAAb,0BAEzBgJ,GACG,gBAACnF,GAAA,EAAD,CACIC,UAAW,GACX0B,MAAI,EACJxF,UAAU,qEACVY,MAAO,CAAEkB,OAAQ,WAJrB,UAMI,uBAAK9B,UAAU,4BAAf,UACI,eAACS,EAAA,EAAD,CACIC,IAAKsI,GAAY9G,KACjBvB,IAAKqI,GAAY/K,MACjB+B,UAAU,qBAGd,sBAAKA,UAAU,QAAf,SACI,oBAAGA,UAAU,uCAAb,SACKgJ,GAAY9G,YAKzB,+BACI,eAACnB,EAAA,EAAD,CAAYC,QAAS,kBAAMkL,GAAUlD,GAAYtC,MAAjD,SACI,eAAC,KAAD,CAAW1G,UAAU,sBAIhCyJ,KAAeZ,IAAWc,GAE3B,KADA,oBAAG3J,UAAU,aAAb,+BAGU,IAAbsI,GACG,iCACKJ,GACGA,EAASvJ,KAAI,SAAC2N,GAAD,OACT,gBAACzI,GAAA,EAAD,CACIC,UAAW,GACX0B,MAAI,EACJxF,UAAU,qEACVY,MAAO,CAAEkB,OAAQ,WAJrB,UAMI,uBAAK9B,UAAU,SAAf,UACI,eAACS,EAAA,EAAD,CACIC,IAAI,SACJC,IAAG,OAAE2L,QAAF,IAAEA,OAAF,EAAEA,EAASrO,MACd+B,UAAU,qBAGd,uBAAKA,UAAU,QAAf,UACI,oBAAGA,UAAU,uCAAb,gBACKsM,QADL,IACKA,OADL,EACKA,EAASpK,OAEd,oBAAGlC,UAAU,6BAAb,2CAMR,iCACI,eAACe,EAAA,EAAD,CACIC,QAAS,kBACLuL,GAAe,OAACD,QAAD,IAACA,OAAD,EAACA,EAAS5F,MAFjC,SAKI,eAAC,KAAD,CAAW1G,UAAU,iBAEzB,eAACe,EAAA,EAAD,CACIC,QAAS,kBAAMqL,GAAa,OAACC,QAAD,IAACA,OAAD,EAACA,EAAS5F,MAD1C,SAGI,eAAC,KAAD,CAAuB1G,UAAU,0BAKpDlF,IACGA,GAAe6D,KAAI,SAAC8P,GAAD,OACf,gBAAC5K,GAAA,EAAD,CACIC,UAAW,GACX0B,MAAI,EACJxF,UAAU,qEACVY,MAAO,CAAEkB,OAAQ,WAJrB,UAMI,uBAAK9B,UAAU,SAAf,UACI,eAACS,EAAA,EAAD,CACIC,IAAI,SACJC,IAAG,OAAE8N,QAAF,IAAEA,OAAF,EAAEA,EAAaxQ,MAClB+B,UAAU,qBAGd,uBAAKA,UAAU,QAAf,UACI,oBAAGA,UAAU,uCAAb,gBACKyO,QADL,IACKA,OADL,EACKA,EAAavM,OAElB,oBAAGlC,UAAU,6BAAb,2CAMR,iCACI,eAACe,EAAA,EAAD,CACIC,QAAS,kBACLuL,GAAe,OAACkC,QAAD,IAACA,OAAD,EAACA,EAAa/H,MAFrC,SAKI,eAAC,KAAD,CAAW1G,UAAU,iBAEzB,eAACe,EAAA,EAAD,CACIC,QAAS,kBACLqL,GAAa,OAACoC,QAAD,IAACA,OAAD,EAACA,EAAa/H,MAFnC,SAKI,eAAC,KAAD,CAAuB1G,UAAU,6BAQ5DoI,IACIE,GACDF,EAAMzJ,KAAI,SAAC0I,GAAD,OACN,eAAC,GAAD,CACIA,SAAUA,EACVnM,SAAUiN,GAAQA,EAClBb,aAAcA,GAEdC,mBAAoBA,GACpBC,mBAAoBA,GACpBC,eAAgBA,IAHXJ,EAASzM,aAO9B,eAACuF,EAAA,EAAD,CACIG,GAAI,EACJD,GAAI,GACJL,UACIyH,GACM,4DACA,aAEV7G,MAAO,CACHyM,QACI5F,IAAkB+B,GACZ,QACC/B,GAED,OADA,SAblB,SAiBI,uBAAMzH,UAAU,0BAAhB,UACa,OAARyE,QAAQ,IAARA,OAAA,EAAAA,EAAU7J,OACP,uCACI,2BACIoF,UAAU,4FACVZ,GAAG,aAFP,UAII,uBAAKY,UAAU,SAAf,UACI,eAACS,EAAA,EAAD,CACIC,IAAG,OAAE+D,QAAF,IAAEA,OAAF,EAAEA,EAAUvC,KACfvB,IAAG,OAAE8D,QAAF,IAAEA,OAAF,EAAEA,EAAUxG,MACf2C,MAAO,CACHC,OAAQ,GACRC,MAAO,GACPgB,OAAQ,WAEZd,QAAS,kBAAMmI,IAAmB,MAEtC,uBAAKnJ,UAAU,OAAf,UACI,qBAAIA,UAAU,kBAAd,gBACKyE,QADL,IACKA,OADL,EACKA,EAAUvC,OAEf,oBAAGlC,UAAU,kBAAb,UACa,OAARyE,QAAQ,IAARA,OAAA,EAAAA,EAAUmD,UACL,SADL,oBAEkBjB,KAAM,OACflC,QADe,IACfA,OADe,EACfA,EAAUmC,WACZ8H,oBAIpB,eAAC3N,EAAA,EAAD,CACIf,UAAU,6BACVgB,QAAS,kBAAMwG,IAAmB,IAFtC,SAII,eAAC,KAAD,CAAmBxH,UAAU,oBAGrC,eAAC,KAAD,CAAgBA,UAAU,2DAA1B,SACKmI,GACGA,EAAKxJ,KAAI,SAAC6F,GAAD,OACL,eAAC,GAAD,CACIA,eAAgBA,EAChB3K,KAAMA,EACN4K,SAAUA,EACVtF,WAAYA,GACZuF,QAASA,GACTC,UAAWA,GACXC,SAAUA,IACLJ,EAAekC,UAIpC,0BACI1G,UAAU,uDACVZ,GAAG,aAFP,SAII,uBACIoB,SAAUmL,GACV3L,UAAU,uBAFd,SAII,gBAACE,EAAA,EAAD,WACyB,OAApBkJ,KAAA,OACGA,SADH,IACGA,QADH,EACGA,GAAiB1O,UACb,eAACyF,EAAA,EAAD,CAAKE,GAAI,GAAT,SACI,sBAAKL,UAAU,yCAAf,SACI,qBAAGA,UAAU,uCAAb,UACI,+BACI,gDACA,eAAC,KAAD,CACIY,MAAO,CACHkC,UACI,kBACJ+K,SAAU,MAIdzE,GAAgB1O,QAClB,OAEN,eAAC,KAAD,CACIkG,MAAO,CAAEiN,SAAU,MAEvB,eAAC9M,EAAA,EAAD,CACIf,UAAU,gCACVgB,QAAS,WACLuG,GACI,KAJZ,SAQI,eAAC,IAAD,CAAWvH,UAAU,+CAMxB,OAApBoJ,MACG,OAACA,SAAD,IAACA,QAAD,EAACA,GAAiB1O,WADrB,OAEG0O,SAFH,IAEGA,QAFH,EAEGA,GAAiBnD,OACb,eAAC9F,EAAA,EAAD,CAAKE,GAAI,GAAT,SACI,sBAAKL,UAAU,yCAAf,SACI,qBAAGA,UAAU,uCAAb,UACI,+BACI,gDACA,eAAC,KAAD,CACIY,MAAO,CACHkC,UACI,kBACJ+K,SAAU,MANtB,gBAWA,eAAC,KAAD,CACIjN,MAAO,CAAEiN,SAAU,MAEvB,eAAC9M,EAAA,EAAD,CACIf,UAAU,gCACVgB,QAAS,WACLuG,GACI,KAJZ,SAQI,eAAC,IAAD,CAAWvH,UAAU,+CAM7C,eAACG,EAAA,EAAD,CAAKE,GAAI,GAAT,SACI,eAACE,EAAA,EAAKU,MAAN,CACIC,UAAU,iBACVmB,IAAKyH,GAFT,SAII,eAACvJ,EAAA,EAAKa,QAAN,CACIhG,MAAOV,GACP4G,SAAU,SAACnD,GAAD,OACNyK,GAAWzK,EAAEE,OAAOjD,QAExBuT,WAAY,SAACxQ,GAAD,MACE,UAAVA,EAAE4N,IACIJ,GAAYxN,GACZyK,GAAWzK,EAAEE,OAAOjD,QAE9BiH,IAAK0H,GACLxP,KAAK,OACLqU,GAAG,WACH5O,UAAU,4CACV6O,aAAa,YAIzB,eAAC1O,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,uBAAKL,UAAU,SAAf,UACI,yBACIwB,QAAQ,mBACRxB,UAAU,YAFd,UAII,wBACIZ,GAAG,mBACH7E,KAAK,OACL+G,SAAUpD,GACV4Q,QAAM,EACNC,UAAQ,IAEZ,eAAChO,EAAA,EAAD,CACIY,aAAW,iBACXqN,UAAU,OACVhP,UAAU,iCAHd,SAKI,eAAC,KAAD,CAAgBA,UAAU,qCAGlC,eAACiC,EAAA,EAAD,CACID,QAAQ,kEACRhC,UAAU,OACVzF,KAAK,SAHT,SAKI,eAAC,KAAD,CAAUyF,UAAU,uCAShD,sBACIY,MAAO,CACH+B,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBALnB,SAQI,qBAAI9C,UAAU,aAAd,uDAU5B,eAACoC,EAAA,EAAD,CAAQxB,MAAO,CAAEqO,WAAY,QAAUjP,UAAU,WAAWqC,IAAKvF,GAAWwF,OAAO,KAAnF,SACI,gBAACrC,EAAA,EAAD,CAAWwM,MAAc,KAAzB,UACI,gBAAClK,EAAA,EAAD,CAAKvC,UAAU,6CAAf,uBACc,eAAC,IAAD,CAAeA,UAAU,SADvC,KACkD,IAAIwC,MAAOC,cAAe,IAD5E,wCAIA,eAACF,EAAA,EAAD,CAAKvC,UAAU,6CAAf,2DAQR,gBAACgH,GAAA,EAAD,CACI3J,KAAMA,GACN4J,OAAQ,kBAAM3J,IAASD,KACvB6J,WAAW,UACXC,UAAQ,EACR+H,SAAS,SACTlP,UAAU,YANd,UAQI,eAACgH,GAAA,EAAMmI,OAAP,UACI,gBAACnI,GAAA,EAAMoI,MAAP,CAAapP,UAAU,0BAAvB,wBACgB,IACZ,eAACe,EAAA,EAAD,CACIf,UAAU,gCACVgB,QAAS,kBAAMgL,MAFnB,SAII,eAAC,IAAD,WAIZ,eAAChF,GAAA,EAAMqI,KAAP,UACI,eAACnP,EAAA,EAAD,CACIU,MAAO,CACH4F,UAAW,IACX8I,UAAW,QAHnB,SAMK9S,IACGA,GAAOmC,KAAI,SAACC,GAAD,OACP,eAAC,GAAD,CACI4E,SAAU5E,EACVO,WAAYA,IACPP,UAKzB,gBAACoI,GAAA,EAAMuI,OAAP,WACI,eAACtN,EAAA,EAAD,CAAQD,QAAQ,YAAYhB,QAAS,kBAAMgL,MAA3C,mBAGA,eAAC/J,EAAA,EAAD,CAAQD,QAAQ,kBAAkBhB,QAAS2K,GAA3C,SACI,eAAC,KAAD,CAAU3L,UAAU,iBAMhC,gBAACgH,GAAA,EAAD,CACI3J,KAAM6L,GACNjC,OAAQ,kBAAMkC,IAAoBD,KAClChC,WAAW,UACXC,UAAQ,EACRnH,UAAU,kBALd,WAOa,OAARyE,QAAQ,IAARA,OAAA,EAAAA,EAAUxG,OACP,sBAAKyC,IAAG,OAAE+D,QAAF,IAAEA,OAAF,EAAEA,EAAUvC,KAAMvB,IAAG,OAAE8D,QAAF,IAAEA,OAAF,EAAEA,EAAUxG,MAAO4C,OAAO,OAAOC,MAAM,SAEpE,uBAAKd,UAAU,qEAAf,UACI,sBACIU,IAAI,YACJC,IAAI,YACJX,UAAU,6BACVa,OAAO,MACPC,MAAM,QAEV,qBAAId,UAAU,OAAd,gBAAsByE,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAUvC,UAIxC,eAACnB,EAAA,EAAD,CACIf,UAAU,gCACVgB,QAAS,kBAAMmI,IAAoBD,KAFvC,SAII,eAAC,IAAD,CAAWlJ,UAAU,gCCp6B1BwP,GAnEF,WAAO,IAAD,EAC2BlU,mBAAS,IADpC,mBACOmU,GADP,WAGf1Q,QAAQC,IAAI,SA0BZ,OACI,iCACI,sBACIgB,UAAU,kEACV0P,WAxBK,SAACvR,GACdA,EAAEyN,kBAwBM+D,YArBM,SAACxR,GACfA,EAAEyN,kBAqBMgE,YAlBM,SAACzR,GACfA,EAAEyN,kBAkBMiE,OAfK,SAAC1R,GACdA,EAAEyN,iBADkB,IAEZxN,EAAUD,EAAE2R,aAAZ1R,MACJA,EAAMK,QAnBM,SAACL,GACjBqR,EAAiBrR,GACjBW,QAAQC,IAAIZ,GAkBR2R,CAAY3R,IAYRwC,MAAO,CACHC,OAAQ,IACRC,MAAO,IACPkP,OAAQ,mBAThB,SAYI,uBAAKhQ,UAAU,eAAf,UACI,sBAAKA,UAAU,gBADnB,mDAKJ,sBAAKA,UAAU,cC/BZiQ,GAZG,kBACd,gBAAC,IAAD,WACI,eAAC,IAAD,CAAOtM,KAAK,QAAQqL,UAAWQ,KAC/B,eAAC,GAAD,CAAgB7L,KAAK,QAArB,SACI,eAAC,GAAD,MAEJ,eAAC,IAAD,CAAOA,KAAK,aAAaqL,UAAWtM,KACpC,eAAC,IAAD,CAAOwN,OAAK,EAACvM,KAAK,IAAIqL,UAAWnT,KACjC,eAAC,IAAD,CAAUuH,GAAG,mBCHN+M,I,qBANH,kBACR,eAAC,IAAD,UACI,eAAC,IAAD,CAAOxM,KAAK,IAAIqL,UAAWiB,S,8BCH7BG,GAAUC,2BAAgB,CAC5BzW,UCQwB,WAAyB,IAAxBqC,EAAuB,uDAAf,GAAIqU,EAAW,uCAChD,OAAQA,EAAO/V,MACX,KAAKtB,EAEL,KAAKG,EACD,MAAO,CAAEmX,SAAS,EAAO1W,KAAMyW,EAAO9V,SAC1C,KAAKnB,EAEL,KAAKH,EACD,MAAO,CAAEqX,SAAS,EAAOpU,MAAOmU,EAAO9V,SAC3C,KAAKrB,EACD,MAAO,GACX,QACI,OAAO8C,IDpBfjB,QCmC6B,WAAyB,IAAxBiB,EAAuB,uDAAf,GAAIqU,EAAW,uCACrD,OAAQA,EAAO/V,MACX,KAAKf,EACD,MAAO,CAAEwB,QAASsV,EAAO9V,SAC7B,KAAKf,EACD,MAAO,CAAE0C,MAAOmU,EAAO9V,SAC3B,QACI,OAAOyB,IDzCfnB,eCuBiC,WAAyB,IAAxBmB,EAAuB,uDAAf,GAAIqU,EAAW,uCACzD,OAAQA,EAAO/V,MACX,KAAKjB,EACD,MAAO,CAAEqB,cAAe2V,EAAO9V,SACnC,KAAKjB,EACD,MAAO,CAAE4C,MAAOmU,EAAO9V,SAC3B,QACI,OAAOyB,ID7BfkM,KC4C0B,WAAyB,IAAxBlM,EAAuB,uDAAf,GAAIqU,EAAW,uCAClD,OAAQA,EAAO/V,MACX,KAAKb,EACD,MAAO,CAAEyO,KAAMmI,EAAO9V,SAC1B,KAAKb,EACD,MAAO,CAAEwC,MAAOmU,EAAO9V,SAC3B,QACI,OAAOyB,MDhDbuU,GAAUrW,aAAasW,QAAQ,QAAUpW,KAAKqW,MAAMvW,aAAasW,QAAQ,SAAW,GAEpFE,GAAe,CACjB/W,UAAW,CACPC,KAAM2W,GAAQ9Q,WAAa8Q,GAAU,CAAE9Q,YAAY,KAIrDkR,GAAa,CAACC,MAQLC,GANDC,uBACVX,GACAO,GACAK,+BAAoBC,mBAAe,WAAf,EAAmBL,MEd5BM,GAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKdQ,GAAc1M,QACa,cAA7BpF,OAAOsD,SAASyO,UAEiB,UAA7B/R,OAAOsD,SAASyO,UAEhB/R,OAAOsD,SAASyO,SAASC,MAAM,2DAEvC,SAASC,GAAgBC,EAAOC,GAC5BC,UAAUC,cACL1U,SAASuU,GACTV,MAAK,SAACc,GAEHA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBpW,QACbgW,UAAUC,cAAcM,YAIxBzT,QAAQC,IACJ,+GAKAgT,GAAUA,EAAOS,UACjBT,EAAOS,SAASN,KAMpBpT,QAAQC,IAAI,sCAGRgT,GAAUA,EAAOU,WACjBV,EAAOU,UAAUP,WAOxCQ,OAAM,SAACxW,GACJ4C,QAAQ5C,MAAM,4CAA6CA,MCnDvEyW,IAAS1P,OACL,eAAC,IAAD,CAAU4N,MAAOA,GAAjB,SACI,eAAC,gBAAD,UACI,eAAC,GAAD,QAGR+B,SAASC,eAAe,SAM5B5B,KDuEO,SAAkBc,GACrB,GAA6C,kBAAmBC,UAAW,CAGvE,GADkB,IAAIc,IAAIC,GAAwBnT,OAAOsD,SAAS8P,MACpDC,SAAWrT,OAAOsD,SAAS+P,OAIrC,OAGJrT,OAAOC,iBAAiB,QAAQ,WAC5B,IAAMiS,EAAK,UAAMiB,GAAN,sBAEPrB,KA1ChB,SAAiCI,EAAOC,GAEpCmB,MAAMpB,EAAO,CACTqB,QAAS,CAAE,iBAAkB,YAE5B/B,MAAK,SAAC5W,GAEH,IAAM4Y,EAAc5Y,EAAS2Y,QAAQvY,IAAI,gBAEjB,MAApBJ,EAAS6Y,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CtB,UAAUC,cAAcsB,MAAMnC,MAAK,SAACc,GAChCA,EAAasB,aAAapC,MAAK,WAC3BxR,OAAOsD,SAASuQ,eAKxB5B,GAAgBC,EAAOC,MAG9BW,OAAM,WACH5T,QAAQC,IAAI,oEAoBR2U,CAAwB5B,EAAOC,GAI/BC,UAAUC,cAAcsB,MAAMnC,MAAK,WAC/BtS,QAAQC,IACJ,+GAMR8S,GAAgBC,EAAOC,OClGvC4B,K","file":"static/js/main.6e865d30.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAILED = 'USER_LOGIN_FAILED';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAILED = 'USER_UPDATE_FAILED';\r\n\r\nexport const FRIEND_REQUEST_SUCCESS = 'FRIEND_REQUEST_SUCCESS';\r\nexport const FRIEND_REQUEST_ERROR = 'FRIEND_REQUEST_ERROR';\r\n\r\nexport const GET_FRIENDS_SUCCESS = 'GET_FRIENDS_SUCCESS';\r\nexport const GET_FRIENDS_ERROR = 'GET_FRIENDS_ERROR';\r\n\r\nexport const GET_CHAT_MESSAGE = 'GET_CHAT_MESSAGE';\r\nexport const GET_CHAT_MESSAGE_ERROR = 'GET_CHAT_MESSAGE_ERROR';\r\n","/* eslint-disable import/prefer-default-export */\r\nimport axios from 'axios';\r\nimport {\r\n    USER_LOGIN_FAILED,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_FAILED,\r\n    USER_UPDATE_SUCCESS,\r\n    FRIEND_REQUEST_ERROR,\r\n    FRIEND_REQUEST_SUCCESS,\r\n    GET_FRIENDS_SUCCESS,\r\n    GET_FRIENDS_ERROR,\r\n    GET_CHAT_MESSAGE_ERROR,\r\n    GET_CHAT_MESSAGE,\r\n} from './Constants';\r\n\r\nexport const userLogin = (user) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.post('/api/v1/user', user);\r\n\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data.user,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAILED,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const userLogout = () => async (dispatch) => {\r\n    localStorage.removeItem('user');\r\n    dispatch({\r\n        type: USER_LOGOUT,\r\n    });\r\n};\r\n\r\nexport const userUpdate = (user) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.put('/api/v1/user', user);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n            payload: data.user,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAILED,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const friendRequest = (email) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(`/api/v1/user?search=${email}`);\r\n\r\n        dispatch({\r\n            type: FRIEND_REQUEST_SUCCESS,\r\n            payload: data.friendRequests,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FRIEND_REQUEST_ERROR,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getFriends = (email) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(`/api/v1/user?search=${email}`);\r\n        dispatch({\r\n            type: GET_FRIENDS_SUCCESS,\r\n            payload: data.friends,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_FRIENDS_ERROR,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getChatMsg = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get('/api/v1/messages');\r\n        dispatch({\r\n            type: GET_CHAT_MESSAGE,\r\n            payload: data.messages,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_CHAT_MESSAGE_ERROR,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","// use this hook to make a delay after input search on onChange event\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [value, delay]);\r\n    return debouncedValue;\r\n}\r\n\r\nexport default useDebounce;\r\n\r\n// Usage of this functionality\r\n// const App = () => {\r\n\r\n//     // const [count, setCounter] = useState(0);\r\n//     const [searchTerm, setSearchTerm] = useState(\"\");\r\n//     const [results, setResults] = useState();\r\n//     const [isSearching, setIsSearching] = useState(false);\r\n//     const debouncedSearchTerm = useDebounce(searchTerm, 1000);\r\n\r\n//     async function searchCharacters(search) {\r\n//       try {\r\n//         const res = await fetch(`https://jsonplaceholder.typicode.com/photos/${search}`);\r\n//         let data = res.json();\r\n//         return data;\r\n//       } catch (error) {\r\n//         console.log(error.response);\r\n//       }\r\n\r\n//     }\r\n\r\n//     console.log(debouncedSearchTerm);\r\n\r\n//     // Effect for API call\r\n//     useEffect(\r\n//       () => {\r\n//         if (debouncedSearchTerm) {\r\n//           setIsSearching(true);\r\n//           const getResult = async () => {\r\n//             try {\r\n//               let result = await searchCharacters(debouncedSearchTerm);\r\n//               setIsSearching(false);\r\n//               setResults(result);\r\n//             } catch (error) {\r\n//               console.log(error.response);\r\n//             }\r\n//           }\r\n//           getResult();\r\n\r\n//         } else {\r\n//           setResults();\r\n//           setIsSearching(false);\r\n//         }\r\n//       },\r\n//       [debouncedSearchTerm] // Only call effect if debounced search term changes\r\n//     );\r\n\r\n//     return (\r\n//       <div>\r\n//         <input\r\n//           placeholder=\"Search Marvel Comics\"\r\n//           onChange={(e) => setSearchTerm(e.target.value)}\r\n//         />\r\n//         {isSearching && <div>Searching ...</div>}\r\n//         {results && (\r\n//           <div key={results.id}>\r\n//             <h4>{results.title}</h4>\r\n//             <img\r\n//               src={`${results.thumbnailUrl}`}\r\n//               alt=\"images\"\r\n//             />\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     )\r\n//   }\r\n\r\n//   export default App;\r\n","/* eslint-disable no-param-reassign */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable prettier/prettier */\r\n// import { Typography } from '@material-ui/core';\r\nimport {\r\n    Alert,\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormControl,\r\n    Image,\r\n    InputGroup,\r\n    Nav,\r\n    Navbar,\r\n    Row,\r\n} from 'react-bootstrap';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport axios from 'axios';\r\nimport { Avatar, Checkbox, FormControlLabel, IconButton } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { useForm } from 'react-hook-form';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { userLogin } from '../Redux/Actons';\r\nimport useDebounce from '../Hooks/useDebounce';\r\n\r\nconst HomeScreen = () => {\r\n    const { addToast } = useToasts();\r\n    const { user, error: responseError } = useSelector((state) => state.userLogin);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [photoUploaded, setPhotoUploaded] = useState(false);\r\n    const [isDesktop, setIsDesktop] = useState(true);\r\n    const footerRef = useRef(0);\r\n    const [login, setLogin] = useState(true);\r\n    const [isPassword, setIsPassword] = useState(true);\r\n    const debouncedSearchTerm = useDebounce(email, 1000);\r\n    const [show, setShow] = useState(true);\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const submitForm = (data) => {\r\n        if (login) {\r\n            dispatch(userLogin(data));\r\n            history.push('/chat');\r\n        } else if (data.password === data.confirmPassword) {\r\n            data.photo = images[0] ?? '';\r\n            dispatch(userLogin(data));\r\n            history.push('/chat');\r\n        }\r\n    };\r\n\r\n    const uploadFile = async (e) => {\r\n        const { files } = e.target;\r\n        const formData = new FormData();\r\n        for (let i = 0; i < files.length; i++) {\r\n            formData.append('uploads', files[i]);\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.post('/api/v1/upload', formData);\r\n            data.map((image) => setImages((preImage) => [...preImage, image.filePath]));\r\n            setPhotoUploaded(true);\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    };\r\n\r\n    const searchCharacters = async (searchItem) => {\r\n        try {\r\n            const { data } = await axios.get(`/api/v1/user?search=${searchItem}`);\r\n            return data;\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const removeFile = async (id) => {\r\n        const uploadId = id.split('/uploads/')[1];\r\n        console.log({ id, uploadId });\r\n        await axios.delete(`/api/v1/upload/${uploadId}`);\r\n        setImages(images.filter((singleImage) => singleImage !== id));\r\n        setPhotoUploaded(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user && user?.isLoggedIn) {\r\n            history.push('/chat');\r\n        }\r\n        // if (responseError && responseError && !user) {\r\n        //     addToast(responseError, {\r\n        //         appearance: 'error',\r\n        //         autoDismiss: true,\r\n        //     });\r\n        // }\r\n        if (debouncedSearchTerm) {\r\n            const getResult = async () => {\r\n                try {\r\n                    const data = await searchCharacters(debouncedSearchTerm);\r\n                    if (data.isSuccess) {\r\n                        console.log(data.user.photo);\r\n                        setImages([data.user.photo]);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error.response);\r\n                }\r\n            };\r\n            getResult();\r\n        } else {\r\n            setImages([]);\r\n        }\r\n        window.addEventListener('resize', () => {\r\n            setIsDesktop(window.innerWidth > 991);\r\n        });\r\n        setIsDesktop(window.innerWidth > 991);\r\n    }, [history, user, debouncedSearchTerm, responseError, addToast]);\r\n\r\n    return (\r\n        <div className=\"bg-primary login__screen\">\r\n            {login ? (\r\n                <Container>\r\n                    <h3 className=\"text-white pt-5 text-center\">Chat-Buddy</h3>\r\n                    <Row>\r\n                        <Col lg={4} />\r\n                        <Col xs={12} md={12} lg={4}>\r\n                            <Form onSubmit={handleSubmit(submitForm)} className=\"my-5\">\r\n                                <div className=\"d-flex justify-content-center align-items-center position-relative photo\">\r\n                                    <Avatar\r\n                                        alt={email}\r\n                                        src={images[0] ?? '/logo.gif'}\r\n                                        style={{ height: 150, width: 150 }}\r\n                                        className=\"shadow-lg border border-dark\"\r\n                                    />\r\n                                    {images[0] && (\r\n                                        <IconButton\r\n                                            className=\"position-absolute delete__icon\"\r\n                                            onClick={() => removeFile(images[0])}\r\n                                        >\r\n                                            <CancelIcon className=\"text-white\" />\r\n                                        </IconButton>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                                    <Form.Label className=\"text-white\">Email address</Form.Label>\r\n                                    <Form.Control\r\n                                        value={email}\r\n                                        {...register('email', { required: true })}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter email\"\r\n                                        htmlFor=\"email\"\r\n                                    />\r\n                                    {errors.email && (\r\n                                        <p className=\"text-danger py-1\">Email is required</p>\r\n                                    )}\r\n                                </Form.Group>\r\n\r\n                                <Form.Label className=\"text-white\">Password</Form.Label>\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <FormControl\r\n                                        placeholder=\"User Password\"\r\n                                        aria-label=\"User Password\"\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                        {...register('password', { required: true })}\r\n                                        type={isPassword ? 'password' : 'text'}\r\n                                        htmlFor=\"email\"\r\n                                    />\r\n                                    <InputGroup.Text\r\n                                        id=\"basic-addon2\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                        }}\r\n                                        onClick={() => setIsPassword(!isPassword)}\r\n                                    >\r\n                                        {isPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                                    </InputGroup.Text>\r\n                                </InputGroup>\r\n                                {errors.password && (\r\n                                    <p className=\"text-danger pb-1\">Password is required</p>\r\n                                )}\r\n\r\n                                {!user && responseError && show && (\r\n                                    <Alert\r\n                                        variant=\"danger\"\r\n                                        className=\"py-2 text-center d-flex justify-content-between align-items-center\"\r\n                                    >\r\n                                        {responseError}{' '}\r\n                                        <CloseIcon\r\n                                            onClick={() => setShow(false)}\r\n                                            className=\"text-white cursor__pointer\"\r\n                                        />\r\n                                    </Alert>\r\n                                )}\r\n\r\n                                <Button variant=\"outline-secondary w-100\" type=\"submit\">\r\n                                    Login\r\n                                </Button>\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <p className=\"text-white py-2\">Not registered? </p>\r\n                                    <Button\r\n                                        className=\"text-white py-2\"\r\n                                        onClick={() => setLogin(!login)}\r\n                                    >\r\n                                        Register{' '}\r\n                                    </Button>\r\n                                </div>\r\n                            </Form>\r\n                        </Col>\r\n                        <Col lg={4} />\r\n                    </Row>\r\n                </Container>\r\n            ) : (\r\n                <Container className=\"\">\r\n                    <h3 className=\"text-white pt-5 text-center\">Chat-Buddy</h3>\r\n                    <Row>\r\n                        <Col lg={4} />\r\n                        <Col xs={12} md={12} lg={4}>\r\n                            <Form onSubmit={handleSubmit(submitForm)} className=\"my-5\">\r\n                                <div className=\"d-flex justify-content-center align-items-center position-relative photo\">\r\n                                    <Avatar\r\n                                        src={images[0] ?? '/logo.gif'}\r\n                                        style={{ height: 150, width: 150 }}\r\n                                        className=\"shadow-lg border border-dark\"\r\n                                    />\r\n                                    {images[0] && (\r\n                                        <IconButton\r\n                                            className=\"position-absolute delete__icon\"\r\n                                            onClick={() => removeFile(images[0])}\r\n                                        >\r\n                                            <CancelIcon className=\"text-white\" />\r\n                                        </IconButton>\r\n                                    )}\r\n                                </div>\r\n                                <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                                    <Form.Label className=\"text-white\">User Name</Form.Label>\r\n                                    <Form.Control\r\n                                        {...register('name', { required: true })}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        htmlFor=\"name\"\r\n                                    />\r\n                                    {errors.name && (\r\n                                        <p className=\"text-danger py-1\">Name is required</p>\r\n                                    )}\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                                    <Form.Label className=\"text-white\">Email address</Form.Label>\r\n                                    <Form.Control\r\n                                        {...register('email', { required: true })}\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter email\"\r\n                                        htmlFor=\"email\"\r\n                                    />\r\n                                    {errors.email && (\r\n                                        <p className=\"text-danger py-1\">Email is required</p>\r\n                                    )}\r\n                                </Form.Group>\r\n\r\n                                {!photoUploaded && (\r\n                                    <Form.Group className=\"mb-3\" controlId=\"photo\">\r\n                                        <Form.Label className=\"text-white\">\r\n                                            Upload Your Photo\r\n                                        </Form.Label>\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                className=\"form-control\"\r\n                                                accept=\"image/*\"\r\n                                                onChange={uploadFile}\r\n                                                placeholder=\"Input Photos\"\r\n                                                id=\"inputGroupFile02\"\r\n                                            />\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                )}\r\n\r\n                                <Form.Label className=\"text-white\">Password</Form.Label>\r\n                                <InputGroup className=\"mb-1\">\r\n                                    <FormControl\r\n                                        placeholder=\"Recipient's username\"\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                        {...register('password', { required: true })}\r\n                                        type={isPassword ? 'password' : 'text'}\r\n                                        htmlFor=\"email\"\r\n                                    />\r\n                                    <InputGroup.Text\r\n                                        id=\"basic-addon2\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                        }}\r\n                                        onClick={() => setIsPassword(!isPassword)}\r\n                                    >\r\n                                        {isPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                                    </InputGroup.Text>\r\n                                </InputGroup>\r\n                                {errors.password && (\r\n                                    <p className=\"text-danger py-1\">Password is required</p>\r\n                                )}\r\n\r\n                                <Form.Label className=\"text-white\">Confirm Password</Form.Label>\r\n                                <InputGroup className=\"mb-1\">\r\n                                    <FormControl\r\n                                        placeholder=\"Recipient's username\"\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                        {...register('confirmPassword', { required: true })}\r\n                                        type={isPassword ? 'password' : 'text'}\r\n                                        htmlFor=\"email\"\r\n                                    />\r\n                                    <InputGroup.Text\r\n                                        id=\"basic-addon2\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                        }}\r\n                                        onClick={() => setIsPassword(!isPassword)}\r\n                                    >\r\n                                        {isPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                                    </InputGroup.Text>\r\n                                </InputGroup>\r\n                                {errors.confirmPassword && (\r\n                                    <p className=\"text-danger py-1\">Confirm Password is required</p>\r\n                                )}\r\n\r\n                                <Button variant=\"outline-secondary w-100\" type=\"submit\">\r\n                                    Register\r\n                                </Button>\r\n\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <p className=\"text-white py-2\">Have account already? </p>\r\n                                    <Button\r\n                                        className=\"text-white py-2\"\r\n                                        onClick={() => setLogin(!login)}\r\n                                    >\r\n                                        Login{' '}\r\n                                    </Button>\r\n                                </div>\r\n                            </Form>\r\n                        </Col>\r\n                        <Col lg={4} />\r\n                    </Row>\r\n                </Container>\r\n            )}\r\n\r\n            {isDesktop ? (\r\n                <Navbar className=\"nav__bar fixed-bottom\" ref={footerRef} expand=\"lg\">\r\n                    <Container className=\"d-flex justify-content-between align-items-center\">\r\n                        <Nav className=\" align-items-center py-2 text-white\">\r\n                            Copyright <CopyrightIcon className=\"me-2\" /> {new Date().getFullYear()}{' '}\r\n                            Chat-Buddy. All rights reserved.\r\n                        </Nav>\r\n                        <Nav className=\"align-items-center text-white\">\r\n                            Designed & Developed By Sazzad Bin Anwar\r\n                        </Nav>\r\n                    </Container>\r\n                </Navbar>\r\n            ) : (\r\n                <Navbar className=\"nav__bar\" ref={footerRef} expand=\"lg\">\r\n                    <Container>\r\n                        <Nav className=\"py-2 text-white\">\r\n                            Copyright &copy; {new Date().getFullYear()} All rights reserves to\r\n                            Chat-Buddy\r\n                        </Nav>\r\n                        <Nav className=\"align-items-center pb-4 text-white\">\r\n                            Designed & Developed By Sazzad Bin Anwar\r\n                        </Nav>\r\n                    </Container>\r\n                </Navbar>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","const NotFound = () => (\r\n    <div\r\n        style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%,-50%)' }}\r\n    >\r\n        <h4>404 | Page Not Found</h4>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProtectedRoute = ({ children, ...rest }) => {\r\n    const { user } = useSelector((state) => state.userLogin);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                user && user.isLoggedIn ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/',\r\n                            state: { from: location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\nexport default ProtectedRoute;\r\n","/* eslint-disable no-nested-ternary */\r\n/* eslint-disable jsx-a11y/media-has-caption */\r\nimport { Card, IconButton } from '@material-ui/core';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport path from 'path';\r\nimport { Col } from 'react-bootstrap';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport FileSaver from 'file-saver';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport { host } from '../Config.json';\r\n\r\nconst MessageContainingFile = ({ fileData, setShow, setChatImage, fileLength }) => {\r\n    if (\r\n        path.extname(fileData) === '.png' ||\r\n        path.extname(fileData) === '.jpg' ||\r\n        path.extname(fileData) === '.jpeg' ||\r\n        path.extname(fileData) === '.gif'\r\n    ) {\r\n        return (\r\n            <Col\r\n                xs={12}\r\n                md={fileLength === 1 ? 12 : fileLength === 2 ? 6 : 4}\r\n                className=\"g-2\"\r\n                key={fileData}\r\n            >\r\n                <Card\r\n                    elevation={5}\r\n                    className=\"mb-0 img__card\"\r\n                    style={{\r\n                        cursor: 'pointer',\r\n                        position: 'relative',\r\n                        height: 200,\r\n                        width: 200,\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={fileData}\r\n                        height={200}\r\n                        width=\"auto\"\r\n                        className=\"position-absolute\"\r\n                        alt={`upload-${fileData}`}\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            left: 0,\r\n                        }}\r\n                    />\r\n                    <div className=\"position-absolute start-0 top-0 end-0 bottom-0 download__btn\">\r\n                        <GetAppIcon\r\n                            className=\"bg-white rounded-circle position-absolute\"\r\n                            style={{\r\n                                top: '50%',\r\n                                left: '50%',\r\n                                transform: 'translate(-50%,-50%)',\r\n                                cursor: 'pointer',\r\n                                zIndex: 1,\r\n                            }}\r\n                            onClick={() =>\r\n                                FileSaver.saveAs(\r\n                                    `${host}${fileData}`,\r\n                                    `image.${path.extname(fileData)}`\r\n                                )\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"position-absolute start-0 top-0 end-0 bottom-0 download__btn\">\r\n                        <ZoomInIcon\r\n                            className=\"bg-white rounded-circle position-absolute\"\r\n                            style={{\r\n                                top: 0,\r\n                                right: 0,\r\n                                cursor: 'pointer',\r\n                            }}\r\n                            onClick={() => {\r\n                                setShow(true);\r\n                                setChatImage(fileData);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    if (\r\n        path.extname(fileData) === '.mp4' ||\r\n        path.extname(fileData) === '.mov' ||\r\n        path.extname(fileData) === '.wmv' ||\r\n        path.extname(fileData) === '.flv' ||\r\n        path.extname(fileData) === '.webm' ||\r\n        path.extname(fileData) === '.mkv'\r\n    ) {\r\n        return (\r\n            <Col xs={12} className=\"g-2\" key={fileData}>\r\n                <Card\r\n                    elevation={5}\r\n                    className=\"mb-0 img__card\"\r\n                    style={{\r\n                        cursor: 'pointer',\r\n                        position: 'relative',\r\n                        height: 400,\r\n                        width: 400,\r\n                    }}\r\n                >\r\n                    <video controls width=\"100%\" height=\"400\">\r\n                        <source\r\n                            src={fileData}\r\n                            type={`video/${path.extname(fileData).split('.')[1]}`}\r\n                        />\r\n                    </video>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n    if (\r\n        path.extname(fileData) === '.mp3' ||\r\n        path.extname(fileData) === '.ogg' ||\r\n        path.extname(fileData) === '.mpeg'\r\n    ) {\r\n        return (\r\n            <Col xs={12} className=\"g-2\" key={fileData}>\r\n                <audio controls>\r\n                    <source src={fileData} type={`audio/${path.extname(fileData).split('.')[1]}`} />\r\n                </audio>\r\n            </Col>\r\n        );\r\n    }\r\n    return (\r\n        <Col xs={12} className=\"g-2\" key={fileData}>\r\n            <Card\r\n                elevation={5}\r\n                className=\"mb-0 py-1 px-2 rounded\"\r\n                style={{\r\n                    backgroundColor: '#616161',\r\n                }}\r\n            >\r\n                <div\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                    style={{ width: 200 }}\r\n                >\r\n                    <InsertDriveFileIcon className=\"text-white\" />\r\n                    <span className=\"col-4 text-truncate text-white\">{fileData.split('/')[2]}</span>\r\n                    <span className=\"text-white\">{path.extname(fileData)}</span>\r\n                    <IconButton>\r\n                        <GetAppIcon\r\n                            className=\"text-white\"\r\n                            onClick={() =>\r\n                                FileSaver.saveAs(\r\n                                    `${host}${fileData}`,\r\n                                    `file.${path.extname(fileData)}`\r\n                                )\r\n                            }\r\n                        />\r\n                    </IconButton>\r\n                </div>\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default MessageContainingFile;\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable jsx-a11y/media-has-caption */\r\n/* eslint-disable no-nested-ternary */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-boolean-value */\r\nimport { Avatar, Card, IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport { ReactTinyLink } from 'react-tiny-link';\r\nimport moment from 'moment';\r\nimport { Col, Modal, Popover, Row } from 'react-bootstrap';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useState } from 'react';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport MessageContainingFile from './MessageContainingFile';\r\n\r\nconst Messages = ({ messageDetails, user, roomUser, editMsg, deleteMsg, replyMsg }) => {\r\n    const [show, setShow] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [chatImage, setChatImage] = useState('');\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    if (\r\n        user.email !== messageDetails.from &&\r\n        roomUser.email === messageDetails.from &&\r\n        user.email === messageDetails.to\r\n    ) {\r\n        return (\r\n            <div className=\"d-flex my-3 chat__buddy\" style={{ marginRight: '20%' }}>\r\n                <Avatar\r\n                    alt={roomUser.name}\r\n                    src={roomUser.photo}\r\n                    style={{ width: 32, height: 32 }}\r\n                />\r\n                <div className=\"d-flex flex-column align-items-start\">\r\n                    <div className=\"d-flex\">\r\n                        {messageDetails.message && (\r\n                            <div className=\"chat__card chat__person ms-0 p-2\">\r\n                                {messageDetails.repliedOf && (\r\n                                    <Card\r\n                                        body\r\n                                        className=\"chat__card chat__person p-2 chat__reply text-white rounded-top\"\r\n                                    >\r\n                                        {`${\r\n                                            messageDetails.repliedOf.length > 200\r\n                                                ? messageDetails.repliedOf.substring(0, 200)\r\n                                                : messageDetails.repliedOf\r\n                                        }...`}{' '}\r\n                                        <ReplyIcon />\r\n                                    </Card>\r\n                                )}\r\n\r\n                                <Card\r\n                                    body\r\n                                    className=\"chat__card chat__person p-2\"\r\n                                    style={{ width: '100%' }}\r\n                                >\r\n                                    {messageDetails.message.startsWith('http') ? (\r\n                                        <ReactTinyLink\r\n                                            cardSize=\"small\"\r\n                                            showGraphic={true}\r\n                                            maxLine={2}\r\n                                            minLine={1}\r\n                                            proxyUrl=\"https://corsanywhere.herokuapp.com\"\r\n                                            url={messageDetails.message}\r\n                                        />\r\n                                    ) : (\r\n                                        messageDetails.message\r\n                                    )}\r\n                                </Card>\r\n                            </div>\r\n                        )}\r\n\r\n                        {messageDetails.file && (\r\n                            <Row className=\"ms-2\">\r\n                                {messageDetails.file.map((fileData) => (\r\n                                    <MessageContainingFile\r\n                                        fileData={fileData}\r\n                                        setShow={setShow}\r\n                                        setChatImage={setChatImage}\r\n                                        key={fileData}\r\n                                    />\r\n                                ))}\r\n                            </Row>\r\n                        )}\r\n\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"long-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                            className=\"ms-2\"\r\n                        >\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    maxHeight: 48 * 4.5,\r\n                                },\r\n                            }}\r\n                        >\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    replyMsg(messageDetails._id);\r\n                                }}\r\n                            >\r\n                                <ReplyIcon />\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n\r\n                    <p className=\"text-white ms-2 mt-0 pt-0 last__seen\">\r\n                        {moment(messageDetails.updatedAt).fromNow()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (user.email === messageDetails.from && roomUser.email === messageDetails.to) {\r\n        return (\r\n            <div\r\n                className=\"d-flex flex-column justify-content-end align-items-end my-3\"\r\n                style={{ marginLeft: '20%' }}\r\n            >\r\n                <div className=\"d-flex my__chat text-right justify-content-end\">\r\n                    <div className=\"chat__card me-3 d-flex justify-content-center align-items-center\">\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"long-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                            className=\"me-3\"\r\n                        >\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    maxHeight: 48 * 4.5,\r\n                                    // width: '20ch',\r\n                                },\r\n                            }}\r\n                        >\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    deleteMsg(messageDetails._id);\r\n                                }}\r\n                            >\r\n                                <DeleteIcon />\r\n                            </MenuItem>\r\n                            {messageDetails.message && (\r\n                                <MenuItem\r\n                                    onClick={() => {\r\n                                        handleClose();\r\n                                        editMsg(messageDetails._id);\r\n                                    }}\r\n                                >\r\n                                    <EditIcon />\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    replyMsg(messageDetails._id);\r\n                                }}\r\n                            >\r\n                                <ReplyIcon />\r\n                            </MenuItem>\r\n                        </Menu>\r\n\r\n                        <div className=\"d-flex flex-column justify-content-end align-items-center\">\r\n                            {messageDetails.message && (\r\n                                <div className=\"chat__person p-2\">\r\n                                    {messageDetails.repliedOf && (\r\n                                        <Card\r\n                                            body\r\n                                            className=\"chat__person p-2 chat__reply text-white\"\r\n                                        >\r\n                                            {`${messageDetails.repliedOf.substring(0, 200)}...`}{' '}\r\n                                            <ReplyIcon />\r\n                                        </Card>\r\n                                    )}\r\n                                    <Card\r\n                                        body\r\n                                        className=\"chat__person p-2\"\r\n                                        style={{ width: '100%' }}\r\n                                    >\r\n                                        {messageDetails.message.startsWith('http') ? (\r\n                                            <ReactTinyLink\r\n                                                cardSize=\"small\"\r\n                                                showGraphic={true}\r\n                                                maxLine={2}\r\n                                                minLine={1}\r\n                                                proxyUrl=\"https://corsanywhere.herokuapp.com\"\r\n                                                url={messageDetails.message}\r\n                                            />\r\n                                        ) : (\r\n                                            messageDetails.message\r\n                                        )}\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {messageDetails.file && (\r\n                                <Row>\r\n                                    {messageDetails.file.map((fileData) => (\r\n                                        <MessageContainingFile\r\n                                            fileData={fileData}\r\n                                            setShow={setShow}\r\n                                            setChatImage={setChatImage}\r\n                                            key={fileData}\r\n                                            fileLength={messageDetails.file.length}\r\n                                        />\r\n                                    ))}\r\n                                </Row>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Avatar\r\n                        alt={user.name}\r\n                        src={user.photo}\r\n                        style={{ width: 32, height: 32, marginRight: 10 }}\r\n                    />\r\n                </div>\r\n                <p className=\"text-white mt-1 mb-0 me-3 pe-5 last__seen\">\r\n                    {messageDetails.isSeen && <i className=\"me-1\">seen</i>}\r\n                    {moment(messageDetails.updatedAt).fromNow()}\r\n                </p>\r\n\r\n                {/* modal for picture view */}\r\n                <Modal\r\n                    show={show}\r\n                    onHide={() => setShow(!show)}\r\n                    fullscreen=\"md-down\"\r\n                    centered\r\n                    className=\"shadow-lg w-100\"\r\n                >\r\n                    <img alt={chatImage} src={chatImage} />\r\n                    <CloseIcon\r\n                        className=\"bg-white rounded-circle position-absolute\"\r\n                        style={{\r\n                            top: '-10px',\r\n                            right: '-10px',\r\n                            cursor: 'pointer',\r\n                        }}\r\n                        onClick={() => setShow(!show)}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n    if (roomUser.email !== messageDetails.to) {\r\n        return null;\r\n    }\r\n    return null;\r\n};\r\n\r\nexport default Messages;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Avatar, Badge, Card } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { getChatMsg } from '../Redux/Actons';\r\n\r\nconst Users = ({\r\n    userInfo,\r\n    messages,\r\n    findRoomUser,\r\n    setReplyMsgDetails,\r\n    setDisplayMessages,\r\n    showMobileChat,\r\n}) => {\r\n    const dispatch = useDispatch();\r\n    const [unreadMsg, setUnreadMsg] = useState(\r\n        messages?.filter(\r\n            (userMessage) => userMessage.from === userInfo?.email && !userMessage.isSeen\r\n        ).length\r\n    );\r\n\r\n    return (\r\n        <Card\r\n            elevation={10}\r\n            body\r\n            className={\r\n                userInfo?.isActive\r\n                    ? 'bg__green p-2 d-flex align-items-center mb-3 justify-content-between'\r\n                    : 'bg-dark p-2 d-flex align-items-center mb-3 justify-content-between'\r\n            }\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={async () => {\r\n                findRoomUser(userInfo?.email);\r\n                setReplyMsgDetails('');\r\n                setDisplayMessages(!!showMobileChat);\r\n                await axios.get(`/api/v1/messages?messageSeen=${userInfo?.email}`);\r\n                dispatch(getChatMsg());\r\n            }}\r\n        >\r\n            <div className=\"d-flex align-items-center\">\r\n                <Avatar alt={userInfo?.name} src={userInfo?.photo} className=\"shadow-lg border\" />\r\n\r\n                <div className=\"ps-3 \">\r\n                    <p className=\"text-white my-0 fs-6 user__name_list\">{userInfo?.name}</p>\r\n                    <p className=\"text-white my-0 last__seen\">\r\n                        {userInfo?.isActive\r\n                            ? 'Online'\r\n                            : `Active ${moment(userInfo?.updatedAt).fromNow()}`}\r\n                        {}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            {unreadMsg ? <Badge badgeContent={unreadMsg} color=\"primary\" className=\"me-3\" /> : null}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","/* eslint-disable jsx-a11y/media-has-caption */\r\nimport { Card } from '@material-ui/core';\r\nimport { Col } from 'react-bootstrap';\r\nimport path from 'path';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\n\r\nconst UploadPreview = ({ fileData, removeFile }) => {\r\n    if (\r\n        path.extname(fileData) === '.png' ||\r\n        path.extname(fileData) === '.jpg' ||\r\n        path.extname(fileData) === '.jpeg' ||\r\n        path.extname(fileData) === '.gif'\r\n    ) {\r\n        return (\r\n            <Col xs={12} md={6} className=\"g-2\" key={fileData}>\r\n                <Card\r\n                    elevation={5}\r\n                    className=\"mb-0 img__card\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        height: 200,\r\n                        width: '100%',\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={fileData}\r\n                        height={200}\r\n                        width=\"auto\"\r\n                        className=\"position-absolute\"\r\n                        alt={`upload-${fileData}`}\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            left: 0,\r\n                        }}\r\n                    />\r\n                    <CancelIcon\r\n                        className=\"position-absolute bg-white text-dark\"\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            cursor: 'pointer',\r\n                        }}\r\n                        onClick={() => removeFile(fileData)}\r\n                    />\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    if (\r\n        path.extname(fileData) === '.mp4' ||\r\n        path.extname(fileData) === '.mov' ||\r\n        path.extname(fileData) === '.wmv' ||\r\n        path.extname(fileData) === '.flv' ||\r\n        path.extname(fileData) === '.webm' ||\r\n        path.extname(fileData) === '.mkv'\r\n    ) {\r\n        return (\r\n            <Col xs={12} className=\"g-2\" key={fileData}>\r\n                <Card\r\n                    elevation={5}\r\n                    className=\"mb-0 img__card\"\r\n                    style={{\r\n                        position: 'relative',\r\n                    }}\r\n                >\r\n                    <video controls width=\"100%\" height=\"400\">\r\n                        <source\r\n                            src={fileData}\r\n                            type={`video/${path.extname(fileData).split('.')[1]}`}\r\n                        />\r\n                    </video>\r\n                    <CancelIcon\r\n                        className=\"position-absolute bg-white text-dark\"\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            cursor: 'pointer',\r\n                            zIndex: 1,\r\n                        }}\r\n                        onClick={() => removeFile(fileData)}\r\n                    />\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n    if (\r\n        path.extname(fileData) === '.mp3' ||\r\n        path.extname(fileData) === '.ogg' ||\r\n        path.extname(fileData) === '.mpeg'\r\n    ) {\r\n        return (\r\n            <Col xs={12} className=\"g-2\" key={fileData}>\r\n                <div className=\"position-relative\">\r\n                    <audio controls>\r\n                        <source\r\n                            src={fileData}\r\n                            type={`audio/${path.extname(fileData).split('.')[1]}`}\r\n                        />\r\n                    </audio>\r\n                    <CancelIcon\r\n                        className=\"position-absolute bg-white text-dark\"\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            cursor: 'pointer',\r\n                        }}\r\n                        onClick={() => removeFile(fileData)}\r\n                    />\r\n                </div>\r\n            </Col>\r\n        );\r\n    }\r\n    return (\r\n        <Col xs={12} md={6} className=\"g-2\" key={fileData}>\r\n            <Card\r\n                elevation={5}\r\n                className=\"mb-0 py-3 px-3 rounded position-relative\"\r\n                style={{\r\n                    backgroundColor: '#616161',\r\n                }}\r\n            >\r\n                <div\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                    style={{ width: 200 }}\r\n                >\r\n                    <InsertDriveFileIcon className=\"text-white\" />\r\n                    <span className=\"col-4 text-truncate text-white\">{fileData.split('/')[2]}</span>\r\n                    <span className=\"text-white\">{path.extname(fileData)}</span>\r\n                    <CancelIcon\r\n                        className=\"position-absolute\"\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            cursor: 'pointer',\r\n                        }}\r\n                        onClick={() => removeFile(fileData)}\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default UploadPreview;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable jsx-a11y/media-has-caption */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable no-nested-ternary */\r\n/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-unused-vars */\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormControl,\r\n    InputGroup,\r\n    Modal,\r\n    Nav,\r\n    Navbar,\r\n    Row,\r\n} from 'react-bootstrap';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n    Avatar,\r\n    Card,\r\n    IconButton,\r\n    MenuItem,\r\n    ListItemIcon,\r\n    Divider,\r\n    Menu,\r\n    Tabs,\r\n    Tab,\r\n    Paper,\r\n    Badge,\r\n} from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport { io } from 'socket.io-client';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from 'axios';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport PersonAdd from '@material-ui/icons/PersonAdd';\r\nimport Settings from '@material-ui/icons/Settings';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport NotificationsOffIcon from '@material-ui/icons/NotificationsOff';\r\nimport FormatQuoteRoundedIcon from '@material-ui/icons/FormatQuoteRounded';\r\nimport {\r\n    friendRequest,\r\n    getChatMsg,\r\n    getFriends,\r\n    userLogin,\r\n    userLogout,\r\n    userUpdate,\r\n} from '../Redux/Actons';\r\nimport Messages from '../Components/Messages';\r\nimport Users from '../Components/Users';\r\nimport UploadPreview from '../Components/UploadPreview';\r\nimport useDebounce from '../Hooks/useDebounce';\r\n\r\nconst Chat = () => {\r\n    const { user } = useSelector((state) => state.userLogin);\r\n    const { friends } = useSelector((state) => state.friends);\r\n    const { friendRequest: requests } = useSelector((state) => state.friendRequests);\r\n    const { chat } = useSelector((state) => state.chat);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState(friends && friends);\r\n    const { addToast } = useToasts();\r\n    const [tabValue, setTabValue] = useState(0);\r\n    const [notificationOn, setNotificationOn] = useState(true);\r\n    const [roomUser, setRoomUser] = useState({});\r\n    const [messages, setMessages] = useState(chat && chat);\r\n    const [message, setMessage] = useState('');\r\n    const [search, setSearch] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [friendRequests, setFriendRequests] = useState([]);\r\n    const [newMessages, setNewMessages] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const [findFriends, setFindFriends] = useState();\r\n    const [roomUserPicShow, setRoomUserPicShow] = useState(false);\r\n    const [replyMsgDetails, setReplyMsgDetails] = useState(null);\r\n    const [editMsgId, setEditMsgId] = useState('');\r\n    const [showMobileChat, setShowMobileChat] = useState(false);\r\n    const [displayMessages, setDisplayMessages] = useState(false);\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [userFound, setUserFound] = useState(true);\r\n    const debouncedSearchTerm = useDebounce(search, 1000);\r\n    const heightRef = useRef(0);\r\n    const footerRef = useRef(0);\r\n    const chatTextHeightRef = useRef(0);\r\n    const textAreaRef = useRef(null);\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const socket = useRef(null);\r\n\r\n    const searchCharacters = async (searchItem) => {\r\n        try {\r\n            const { data } = await axios.get(`/api/v1/user?search=${searchItem}`);\r\n            return data;\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.current = io('/');\r\n        socket.current.on('user-joined', (userData) => {\r\n            const othersData = userData.allUsers.filter(\r\n                (userInfo) =>\r\n                    userInfo.email !== user.email &&\r\n                    friends &&\r\n                    friends?.find((friend) => friend.email === userInfo.email)\r\n            );\r\n            setUsers(othersData);\r\n            if (\r\n                userData.joinedUser &&\r\n                userData.joinedUser.email !== user.email &&\r\n                user?.isLoggedIn &&\r\n                friends &&\r\n                friends?.find((friend) => friend.email === userData.email)\r\n            ) {\r\n                addToast(`${userData.joinedUser.name} is active`, {\r\n                    appearance: 'info',\r\n                    autoDismiss: true,\r\n                });\r\n\r\n                if (roomUser !== null && roomUser?.email === userData.joinedUser.email) {\r\n                    setRoomUser(userData.joinedUser);\r\n                }\r\n            } else if (\r\n                userData.leavingUser &&\r\n                userData.leavingUser.email !== user.email &&\r\n                user?.isLoggedIn\r\n            ) {\r\n                setRoomUser();\r\n            }\r\n        });\r\n\r\n        socket.current.emit('user-login', user);\r\n\r\n        socket.current.on(\r\n            'friend-request',\r\n            ({ requestReceiver, requestSender, message: errorMsg, requestSenderUser }) => {\r\n                if (requestReceiver !== requestSender) {\r\n                    dispatch(friendRequest(user.email));\r\n                }\r\n            }\r\n        );\r\n\r\n        socket.current.on('friend-list', ({ requestId, userId }) => {\r\n            if (userId === user._id) {\r\n                dispatch(getFriends(user.email));\r\n                dispatch(friendRequest(user.email));\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.current.off('user-joined', (data) => {});\r\n            socket.current.off('room-user-details', (userData) => {});\r\n\r\n            socket.current.off('friend-request', () => {});\r\n            socket.current.off('friend-list', () => {});\r\n            window.removeEventListener('resize', () => {});\r\n        };\r\n    }, [\r\n        addToast,\r\n        user,\r\n        history,\r\n        replyMsgDetails,\r\n        notificationOn,\r\n        roomUser,\r\n        friendRequests,\r\n        dispatch,\r\n        friends,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        const audio = new Audio('/msg_sound.mp3');\r\n\r\n        socket.current.on('removeMsgFromChat', async (data) => {\r\n            try {\r\n                const { data: msg } = await axios.get('/api/v1/messages');\r\n                setMessages(msg.messages);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        });\r\n\r\n        socket.current.on('chat-message', async (chat) => {\r\n            if (chat.from !== user.email && notificationOn) {\r\n                audio.play();\r\n            }\r\n            if (chat.from === user.email || chat.to === user.email) {\r\n                dispatch(getChatMsg());\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.current.off('chat-message', (chat) => {});\r\n            socket.current.off('removeMsgFromChat', (data) => {});\r\n        };\r\n    }, [dispatch, messages, notificationOn, user.email]);\r\n\r\n    useEffect(() => {\r\n        if (debouncedSearchTerm) {\r\n            setIsSearching(true);\r\n            setUserFound(true);\r\n            const getResult = async () => {\r\n                try {\r\n                    const result = await searchCharacters(debouncedSearchTerm);\r\n                    if (result.isSuccess) {\r\n                        setFindFriends(result.user);\r\n                        setIsSearching(false);\r\n                    } else {\r\n                        setIsSearching(false);\r\n                        setUserFound(false);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error.response);\r\n                }\r\n            };\r\n            getResult();\r\n        } else {\r\n            setIsSearching(false);\r\n            setFindFriends('');\r\n        }\r\n\r\n        if (!user && !user?.isLoggedIn) {\r\n            history.push('/');\r\n        }\r\n\r\n        if (window.innerWidth < 991) {\r\n            setShowMobileChat(true);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth < 991) {\r\n                setShowMobileChat(true);\r\n            }\r\n        });\r\n\r\n        replyMsgDetails !== null && (replyMsgDetails.message || replyMsgDetails.file)\r\n            ? textAreaRef.current.focus()\r\n            : null;\r\n\r\n        dispatch(friendRequest(user.email));\r\n        dispatch(getFriends(user.email));\r\n        dispatch(getChatMsg());\r\n    }, [debouncedSearchTerm, dispatch, history, replyMsgDetails, user]);\r\n\r\n    const findRoomUser = (email) => {\r\n        setRoomUser(users.filter((userInfo) => userInfo.email === email)[0]);\r\n    };\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const chat = {\r\n            _id: editMsgId,\r\n            user: user._id,\r\n            from: user.email,\r\n            file: images,\r\n            repliedOf: replyMsgDetails?.message\r\n                ? replyMsgDetails?.message\r\n                : replyMsgDetails?.file\r\n                ? replyMsgDetails?.file[0]\r\n                : '',\r\n            to: roomUser?.email,\r\n            message,\r\n            sendAt: Date.now(),\r\n        };\r\n        if ((message && e.key === 'Enter') || message || images) {\r\n            setMessage('');\r\n            try {\r\n                const { data } = await axios.post('/api/v1/messages', chat);\r\n                if (data.message) {\r\n                    dispatch(getChatMsg());\r\n                    // setMessages([...messages, data.message]);\r\n                    socket.current.emit('message', data.message);\r\n                    setShow(false);\r\n                    setImages([]);\r\n                    setReplyMsgDetails({});\r\n                    setEditMsgId('');\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        } else {\r\n            addToast('Please Write something', {\r\n                appearance: 'info',\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    const uploadFile = async (e) => {\r\n        const { files } = e.target;\r\n        const formData = new FormData();\r\n        for (let i = 0; i < files.length; i++) {\r\n            formData.append('uploads', files[i]);\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.post('/api/v1/upload', formData);\r\n            data.map((image) => setImages((preImage) => [...preImage, image.filePath]));\r\n            data.length ? setShow(true) : setShow(false);\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    };\r\n\r\n    const removeFile = async (id) => {\r\n        const uploadId = id.split('/uploads/')[1];\r\n        await axios.delete(`/api/v1/upload/${uploadId}`);\r\n        setImages(images.filter((singleImage) => singleImage !== id));\r\n        images.length === 1 ? setShow(false) : setShow(true);\r\n    };\r\n\r\n    const onCloseRemoveImages = () => {\r\n        if (images.length) {\r\n            images.map((image) => removeFile(image));\r\n            if (images.length - 1 > 0) {\r\n                addToast(`Remove ${images.length - 1} files`, {\r\n                    autoDismiss: true,\r\n                    appearance: 'info',\r\n                });\r\n            }\r\n        }\r\n        if (!images.length) {\r\n            setShow(!show);\r\n        }\r\n    };\r\n\r\n    const deleteMsg = (id) => {\r\n        socket.current.emit('messageDelete', id);\r\n    };\r\n    const editMsg = (id) => {\r\n        setEditMsgId(id);\r\n        setMessage(chat && chat.filter((findMsg) => findMsg._id === id)[0].message);\r\n        dispatch(getChatMsg());\r\n    };\r\n\r\n    const replyMsg = (id) => {\r\n        setReplyMsgDetails(chat && chat.filter((findMsg) => findMsg._id === id)[0]);\r\n    };\r\n\r\n    const addFriend = async (id) => {\r\n        socket.current.emit('friend-request-send', { friendId: id, myId: user._id });\r\n    };\r\n\r\n    const removeRequest = async (id) => {\r\n        socket.current.emit('friend-request-declined', { requestId: id, userId: user._id });\r\n        if (friendRequests) {\r\n            setFriendRequests(friendRequests.filter((request) => request._id !== id));\r\n        }\r\n        dispatch(friendRequest(user.email));\r\n    };\r\n\r\n    const requestAccepted = async (id) => {\r\n        socket.current.emit('friend-request-accepted', { requestId: id, userId: user._id });\r\n        console.log('clicked');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" className=\"nav__bar\" ref={heightRef} expand=\"lg\">\r\n                <Container fluid={('xs', 'sm', 'md', 'lg')}>\r\n                    <Link to=\"/\">\r\n                        <Navbar.Brand className=\"text-white align-items-center\">\r\n                            <img\r\n                                className=\"app__logo me-2\"\r\n                                height=\"30px\"\r\n                                src=\"/logo.gif\"\r\n                                alt=\"logo\"\r\n                            />\r\n                            <span className=\"h4\">Chat-Buddy</span>\r\n                        </Navbar.Brand>\r\n                    </Link>\r\n                    <Nav className=\"ms-auto align-items-center\">\r\n                        <Nav.Link className=\"text-white fs-5\">\r\n                            {notificationOn ? (\r\n                                <IconButton\r\n                                    onClick={() => setNotificationOn(false)}\r\n                                    size=\"small\"\r\n                                    sx={{ ml: 2 }}\r\n                                >\r\n                                    <NotificationsActiveIcon className=\"text-white\" />\r\n                                </IconButton>\r\n                            ) : (\r\n                                <IconButton\r\n                                    onClick={() => setNotificationOn(true)}\r\n                                    size=\"small\"\r\n                                    sx={{ ml: 2 }}\r\n                                >\r\n                                    <NotificationsOffIcon className=\"text-white\" />\r\n                                </IconButton>\r\n                            )}\r\n                        </Nav.Link>\r\n                        <Nav.Link className=\"text-white fs-5\">\r\n                            <IconButton onClick={handleClick} size=\"small\" sx={{ ml: 2 }}>\r\n                                <Avatar\r\n                                    style={{ width: 32, height: 32 }}\r\n                                    src={user.photo}\r\n                                    alt={user.name}\r\n                                />\r\n                            </IconButton>\r\n                        </Nav.Link>\r\n\r\n                        {/* profile submenu */}\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            onClick={handleClose}\r\n                            style={{\r\n                                marginTop: heightRef.current.offsetHeight - 15,\r\n                            }}\r\n                            PaperProps={{\r\n                                elevation: 0,\r\n                                sx: {\r\n                                    overflow: 'visible',\r\n                                    filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                                    mt: 1.5,\r\n                                    '& .MuiAvatar-root': {\r\n                                        width: 32,\r\n                                        height: 32,\r\n                                        ml: -0.5,\r\n                                        mr: 1,\r\n                                    },\r\n                                    '&:before': {\r\n                                        content: '\"\"',\r\n                                        display: 'block',\r\n                                        position: 'absolute',\r\n                                        top: 0,\r\n                                        right: 14,\r\n                                        width: 10,\r\n                                        height: 10,\r\n                                        bgcolor: 'background.paper',\r\n                                        transform: 'translateY(-50%) rotate(45deg)',\r\n                                        zIndex: 0,\r\n                                    },\r\n                                },\r\n                            }}\r\n                            transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                            anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                        >\r\n                            <MenuItem>\r\n                                <Avatar\r\n                                    alt={user.name}\r\n                                    src={user.photo}\r\n                                    style={{ width: 22, height: 22, marginRight: 30 }}\r\n                                />{' '}\r\n                                {user.name}\r\n                            </MenuItem>\r\n                            <Divider />\r\n                            <MenuItem>\r\n                                <ListItemIcon>\r\n                                    <Settings fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                Settings\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    dispatch(userLogout());\r\n                                    socket.current.disconnect();\r\n                                    history.push('/');\r\n                                    localStorage.removeItem('roomUser');\r\n                                }}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <ExitToAppIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                Logout\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n\r\n            <section className=\"bg__black\">\r\n                <Container fluid={('sm', 'md', 'lg')}>\r\n                    <Row>\r\n                        <Col\r\n                            md={3}\r\n                            xs={12}\r\n                            style={{\r\n                                height: `calc(100vh - ${\r\n                                    heightRef.current.offsetHeight + footerRef.current.offsetHeight\r\n                                }px)`,\r\n                                backgroundColor: '#1c2834',\r\n                            }}\r\n                        >\r\n                            <Paper square style={{ marginTop: 15, borderRadius: 7 }}>\r\n                                <Tabs\r\n                                    value={tabValue}\r\n                                    onChange={handleChange}\r\n                                    variant=\"fullWidth\"\r\n                                    indicatorColor=\"primary\"\r\n                                    textColor=\"primary\"\r\n                                    aria-label=\"icon tabs example\"\r\n                                >\r\n                                    <Tab icon={<ForumIcon />} aria-label=\"phone\" />\r\n\r\n                                    <Tab\r\n                                        icon={\r\n                                            <Badge\r\n                                                badgeContent={requests && requests.length}\r\n                                                color=\"primary\"\r\n                                            >\r\n                                                <PersonAdd />\r\n                                            </Badge>\r\n                                        }\r\n                                        aria-label=\"favorite\"\r\n                                    />\r\n                                </Tabs>\r\n                            </Paper>\r\n\r\n                            <div className=\"search__bar\">\r\n                                <InputGroup className=\"py-3\">\r\n                                    <InputGroup.Text id=\"search\" className=\"bg-white border-end-0\">\r\n                                        <SearchIcon />\r\n                                    </InputGroup.Text>\r\n                                    <FormControl\r\n                                        className=\"border-start-0\"\r\n                                        placeholder=\"Search friend ...\"\r\n                                        aria-label=\"Username\"\r\n                                        aria-describedby=\"search\"\r\n                                        value={search}\r\n                                        onChange={(e) => setSearch(e.target.value)}\r\n                                        type=\"text\"\r\n                                    />\r\n                                </InputGroup>\r\n                            </div>\r\n                            {search && isSearching && <p className=\"text-white\">Searching...</p>}\r\n\r\n                            {findFriends ? (\r\n                                <Card\r\n                                    elevation={10}\r\n                                    body\r\n                                    className=\"bg-dark p-2 d-flex justify-content-between align-items-center mb-3\"\r\n                                    style={{ cursor: 'pointer' }}\r\n                                >\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <Avatar\r\n                                            alt={findFriends.name}\r\n                                            src={findFriends.photo}\r\n                                            className=\"shadow-lg border\"\r\n                                        />\r\n\r\n                                        <div className=\"ps-3 \">\r\n                                            <p className=\"text-white my-0 fs-6 user__name_list\">\r\n                                                {findFriends.name}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <IconButton onClick={() => addFriend(findFriends._id)}>\r\n                                            <PersonAdd className=\"text-white\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </Card>\r\n                            ) : !isSearching && search && !userFound ? (\r\n                                <p className=\"text-white\">User is not found</p>\r\n                            ) : null}\r\n\r\n                            {tabValue === 1 && (\r\n                                <div>\r\n                                    {requests &&\r\n                                        requests.map((request) => (\r\n                                            <Card\r\n                                                elevation={10}\r\n                                                body\r\n                                                className=\"bg-dark p-2 d-flex justify-content-between align-items-center mb-3\"\r\n                                                style={{ cursor: 'pointer' }}\r\n                                            >\r\n                                                <div className=\"d-flex\">\r\n                                                    <Avatar\r\n                                                        alt=\"Friend\"\r\n                                                        src={request?.photo}\r\n                                                        className=\"shadow-lg border\"\r\n                                                    />\r\n\r\n                                                    <div className=\"ps-3 \">\r\n                                                        <p className=\"text-white my-0 fs-6 user__name_list\">\r\n                                                            {request?.name}\r\n                                                        </p>\r\n                                                        <p className=\"text-white my-0 last__seen\">\r\n                                                            Wants to be your friend\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                    <IconButton\r\n                                                        onClick={() =>\r\n                                                            requestAccepted(request?._id)\r\n                                                        }\r\n                                                    >\r\n                                                        <PersonAdd className=\"text-white\" />\r\n                                                    </IconButton>\r\n                                                    <IconButton\r\n                                                        onClick={() => removeRequest(request?._id)}\r\n                                                    >\r\n                                                        <PersonAddDisabledIcon className=\"text-white\" />\r\n                                                    </IconButton>\r\n                                                </div>\r\n                                            </Card>\r\n                                        ))}\r\n                                    {friendRequests &&\r\n                                        friendRequests.map((requestData) => (\r\n                                            <Card\r\n                                                elevation={10}\r\n                                                body\r\n                                                className=\"bg-dark p-2 d-flex justify-content-between align-items-center mb-3\"\r\n                                                style={{ cursor: 'pointer' }}\r\n                                            >\r\n                                                <div className=\"d-flex\">\r\n                                                    <Avatar\r\n                                                        alt=\"Friend\"\r\n                                                        src={requestData?.photo}\r\n                                                        className=\"shadow-lg border\"\r\n                                                    />\r\n\r\n                                                    <div className=\"ps-3 \">\r\n                                                        <p className=\"text-white my-0 fs-6 user__name_list\">\r\n                                                            {requestData?.name}\r\n                                                        </p>\r\n                                                        <p className=\"text-white my-0 last__seen\">\r\n                                                            Wants to be your friend\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                    <IconButton\r\n                                                        onClick={() =>\r\n                                                            requestAccepted(requestData?._id)\r\n                                                        }\r\n                                                    >\r\n                                                        <PersonAdd className=\"text-white\" />\r\n                                                    </IconButton>\r\n                                                    <IconButton\r\n                                                        onClick={() =>\r\n                                                            removeRequest(requestData?._id)\r\n                                                        }\r\n                                                    >\r\n                                                        <PersonAddDisabledIcon className=\"text-white\" />\r\n                                                    </IconButton>\r\n                                                </div>\r\n                                            </Card>\r\n                                        ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            {users &&\r\n                                !tabValue &&\r\n                                users.map((userInfo) => (\r\n                                    <Users\r\n                                        userInfo={userInfo}\r\n                                        messages={chat && chat}\r\n                                        findRoomUser={findRoomUser}\r\n                                        key={userInfo.email}\r\n                                        setReplyMsgDetails={setReplyMsgDetails}\r\n                                        setDisplayMessages={setDisplayMessages}\r\n                                        showMobileChat={showMobileChat}\r\n                                    />\r\n                                ))}\r\n                        </Col>\r\n                        <Col\r\n                            md={9}\r\n                            xs={12}\r\n                            className={\r\n                                showMobileChat\r\n                                    ? 'bg-primary position-absolute top-0 end-0 bottom-0 start-0'\r\n                                    : 'bg-primary'\r\n                            }\r\n                            style={{\r\n                                display:\r\n                                    showMobileChat && displayMessages\r\n                                        ? 'block'\r\n                                        : !showMobileChat\r\n                                        ? 'block'\r\n                                        : 'none',\r\n                            }}\r\n                        >\r\n                            <main className=\"position-relative h-100\">\r\n                                {roomUser?.email ? (\r\n                                    <>\r\n                                        <section\r\n                                            className=\"message__header d-flex justify-content-between align-items-center py-4 px-2 border-bottom\"\r\n                                            id=\"user__head\"\r\n                                        >\r\n                                            <div className=\"d-flex\">\r\n                                                <Avatar\r\n                                                    alt={roomUser?.name}\r\n                                                    src={roomUser?.photo}\r\n                                                    style={{\r\n                                                        height: 50,\r\n                                                        width: 50,\r\n                                                        cursor: 'pointer',\r\n                                                    }}\r\n                                                    onClick={() => setRoomUserPicShow(true)}\r\n                                                />\r\n                                                <div className=\"ps-3\">\r\n                                                    <h4 className=\"text-white my-0\">\r\n                                                        {roomUser?.name}\r\n                                                    </h4>\r\n                                                    <p className=\"text-white my-0\">\r\n                                                        {roomUser?.isActive\r\n                                                            ? 'Online'\r\n                                                            : `Last Seen ${moment(\r\n                                                                  roomUser?.updatedAt\r\n                                                              ).calendar()}`}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <IconButton\r\n                                                className=\"float-end mobile__back_btn\"\r\n                                                onClick={() => setDisplayMessages(false)}\r\n                                            >\r\n                                                <ArrowRightAltIcon className=\"text-white\" />\r\n                                            </IconButton>\r\n                                        </section>\r\n                                        <ScrollToBottom className=\"message__body overflow-auto position-relative drag__drop\">\r\n                                            {chat &&\r\n                                                chat.map((messageDetails) => (\r\n                                                    <Messages\r\n                                                        messageDetails={messageDetails}\r\n                                                        user={user}\r\n                                                        roomUser={roomUser}\r\n                                                        removeFile={removeFile}\r\n                                                        editMsg={editMsg}\r\n                                                        deleteMsg={deleteMsg}\r\n                                                        replyMsg={replyMsg}\r\n                                                        key={messageDetails._id}\r\n                                                    />\r\n                                                ))}\r\n                                        </ScrollToBottom>\r\n                                        <section\r\n                                            className=\"input__area position-absolute bottom-0 start-0 end-0\"\r\n                                            id=\"text__area\"\r\n                                        >\r\n                                            <form\r\n                                                onSubmit={sendMessage}\r\n                                                className=\"mb-2 bg-primary pt-3\"\r\n                                            >\r\n                                                <Row>\r\n                                                    {replyMsgDetails !== null &&\r\n                                                        replyMsgDetails?.message && (\r\n                                                            <Col xs={10}>\r\n                                                                <div className=\"px-3 py-2 bg-primary position-relative\">\r\n                                                                    <p className=\"mb-0 col-10 text-truncate text-white\">\r\n                                                                        <i>\r\n                                                                            <b>Replying to : </b>\r\n                                                                            <FormatQuoteRoundedIcon\r\n                                                                                style={{\r\n                                                                                    transform:\r\n                                                                                        'rotateY(180deg)',\r\n                                                                                    fontSize: 20,\r\n                                                                                }}\r\n                                                                            />\r\n                                                                            {\r\n                                                                                replyMsgDetails.message\r\n                                                                            }{' '}\r\n                                                                        </i>\r\n                                                                        <FormatQuoteRoundedIcon\r\n                                                                            style={{ fontSize: 20 }}\r\n                                                                        />\r\n                                                                        <IconButton\r\n                                                                            className=\"position-absolute top-0 end-0\"\r\n                                                                            onClick={() => {\r\n                                                                                setReplyMsgDetails(\r\n                                                                                    {}\r\n                                                                                );\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <CloseIcon className=\"text-white bg-dark rounded-circle\" />\r\n                                                                        </IconButton>\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        )}\r\n                                                    {replyMsgDetails !== null &&\r\n                                                        !replyMsgDetails?.message &&\r\n                                                        replyMsgDetails?.file && (\r\n                                                            <Col xs={10}>\r\n                                                                <div className=\"px-3 py-2 bg-primary position-relative\">\r\n                                                                    <p className=\"mb-0 col-10 text-truncate text-white\">\r\n                                                                        <i>\r\n                                                                            <b>Replying to : </b>\r\n                                                                            <FormatQuoteRoundedIcon\r\n                                                                                style={{\r\n                                                                                    transform:\r\n                                                                                        'rotateY(180deg)',\r\n                                                                                    fontSize: 20,\r\n                                                                                }}\r\n                                                                            />\r\n                                                                            Attachment\r\n                                                                        </i>\r\n                                                                        <FormatQuoteRoundedIcon\r\n                                                                            style={{ fontSize: 20 }}\r\n                                                                        />\r\n                                                                        <IconButton\r\n                                                                            className=\"position-absolute top-0 end-0\"\r\n                                                                            onClick={() => {\r\n                                                                                setReplyMsgDetails(\r\n                                                                                    {}\r\n                                                                                );\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <CloseIcon className=\"text-white bg-dark rounded-circle\" />\r\n                                                                        </IconButton>\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        )}\r\n                                                    <Col xs={10}>\r\n                                                        <Form.Group\r\n                                                            controlId=\"formBasicEmail\"\r\n                                                            ref={chatTextHeightRef}\r\n                                                        >\r\n                                                            <Form.Control\r\n                                                                value={message}\r\n                                                                onChange={(e) =>\r\n                                                                    setMessage(e.target.value)\r\n                                                                }\r\n                                                                onKeyPress={(e) =>\r\n                                                                    e.key === 'Enter'\r\n                                                                        ? sendMessage(e)\r\n                                                                        : setMessage(e.target.value)\r\n                                                                }\r\n                                                                ref={textAreaRef}\r\n                                                                type=\"text\"\r\n                                                                as=\"textarea\"\r\n                                                                className=\"rounded text__input bg-primary text-white\"\r\n                                                                autoComplete=\"off\"\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                    </Col>\r\n                                                    <Col xs={1}>\r\n                                                        <div className=\"d-flex\">\r\n                                                            <label\r\n                                                                htmlFor=\"icon-button-file\"\r\n                                                                className=\"float-end\"\r\n                                                            >\r\n                                                                <input\r\n                                                                    id=\"icon-button-file\"\r\n                                                                    type=\"file\"\r\n                                                                    onChange={uploadFile}\r\n                                                                    hidden\r\n                                                                    multiple\r\n                                                                />\r\n                                                                <IconButton\r\n                                                                    aria-label=\"upload picture\"\r\n                                                                    component=\"span\"\r\n                                                                    className=\"border p-2 input__file__button\"\r\n                                                                >\r\n                                                                    <AttachmentIcon className=\"attachments__icon text-dark\" />\r\n                                                                </IconButton>\r\n                                                            </label>\r\n                                                            <Button\r\n                                                                variant=\"outline-secondary rounded-circle p-2 pl-3 shadow-lg float-start\"\r\n                                                                className=\"ms-2\"\r\n                                                                type=\"submit\"\r\n                                                            >\r\n                                                                <SendIcon className=\"attachments__icon\" />\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </form>\r\n                                        </section>\r\n                                    </>\r\n                                ) : (\r\n                                    <div\r\n                                        style={{\r\n                                            position: 'absolute',\r\n                                            top: '50%',\r\n                                            left: '50%',\r\n                                            transform: 'translate(-50%,-50%)',\r\n                                        }}\r\n                                    >\r\n                                        <h4 className=\"text-white\">Please Select a conversation</h4>\r\n                                    </div>\r\n                                )}\r\n                            </main>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n\r\n            {/* footer nav */}\r\n            <Navbar style={{ background: '#000' }} className=\"nav__bar\" ref={footerRef} expand=\"lg\">\r\n                <Container fluid={('sm', 'md')}>\r\n                    <Nav className=\"me-auto align-items-center py-3 text-white\">\r\n                        Copyright <CopyrightIcon className=\"me-2\" /> {new Date().getFullYear()}{' '}\r\n                        e-Chat-Buddy. All rights reserved.\r\n                    </Nav>\r\n                    <Nav className=\"ms-auto align-items-center py-3 text-white\">\r\n                        Designed & Developed By Sazzad Bin Anwar\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n\r\n            {/* All modals */}\r\n            {/* Modal for image upload */}\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(!show)}\r\n                fullscreen=\"md-down\"\r\n                centered\r\n                backdrop=\"static\"\r\n                className=\"shadow-lg\"\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title className=\"position-relative w-100\">\r\n                        Upload File{' '}\r\n                        <IconButton\r\n                            className=\"position-absolute top-0 end-0\"\r\n                            onClick={() => onCloseRemoveImages()}\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row\r\n                        style={{\r\n                            maxHeight: 450,\r\n                            overflowY: 'auto',\r\n                        }}\r\n                    >\r\n                        {images &&\r\n                            images.map((image) => (\r\n                                <UploadPreview\r\n                                    fileData={image}\r\n                                    removeFile={removeFile}\r\n                                    key={image}\r\n                                />\r\n                            ))}\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => onCloseRemoveImages()}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"outline-primary\" onClick={sendMessage}>\r\n                        <SendIcon className=\"fs-7\" />\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* modal for picture view */}\r\n            <Modal\r\n                show={roomUserPicShow}\r\n                onHide={() => setRoomUserPicShow(!roomUserPicShow)}\r\n                fullscreen=\"md-down\"\r\n                centered\r\n                className=\"shadow-lg w-100\"\r\n            >\r\n                {roomUser?.photo ? (\r\n                    <img alt={roomUser?.name} src={roomUser?.photo} height=\"auto\" width=\"auto\" />\r\n                ) : (\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center  my-5\">\r\n                        <img\r\n                            alt=\"userphoto\"\r\n                            src=\"/user.png\"\r\n                            className=\"rounded-circle bg-dark p-3\"\r\n                            height=\"150\"\r\n                            width=\"150\"\r\n                        />\r\n                        <h3 className=\"my-2\">{roomUser?.name}</h3>\r\n                    </div>\r\n                )}\r\n\r\n                <IconButton\r\n                    className=\"position-absolute top-0 end-0\"\r\n                    onClick={() => setRoomUserPicShow(!roomUserPicShow)}\r\n                >\r\n                    <CloseIcon className=\"text-white bg-dark\" />\r\n                </IconButton>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","/* eslint-disable no-unused-vars */\r\nimport { useState } from 'react';\r\n\r\nconst Test = () => {\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n    console.log('hello');\r\n\r\n    const handleFiles = (files) => {\r\n        setSelectedFiles(files);\r\n        console.log(files);\r\n    };\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const fileDrop = (e) => {\r\n        e.preventDefault();\r\n        const { files } = e.dataTransfer;\r\n        if (files.length) {\r\n            handleFiles(files);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className=\"drop-container d-flex justify-content-center align-items-center\"\r\n                onDragOver={dragOver}\r\n                onDragEnter={dragEnter}\r\n                onDragLeave={dragLeave}\r\n                onDrop={fileDrop}\r\n                style={{\r\n                    height: 300,\r\n                    width: 300,\r\n                    border: '1px solid black',\r\n                }}\r\n            >\r\n                <div className=\"drop-message\">\r\n                    <div className=\"upload-icon\" />\r\n                    Drag and Drop files here or click to upload\r\n                </div>\r\n            </div>\r\n            <div className=\"files\">\r\n                {/* {selectedFiles.map((data) => (\r\n                    <div className=\"file-status-bar\" key={data.name}>\r\n                        <div>\r\n                            <div className=\"file-type-logo\" />\r\n                            <div className=\"file-type\">{data.name}</div>\r\n                            <span className={`file-name ${data.invalid ? 'file-error' : ''}`}>\r\n                                {data.name}\r\n                            </span>\r\n                            <span className=\"file-size\">({data.size})</span>{' '}\r\n                        </div>\r\n                        <div className=\"file-remove\">X</div>\r\n                    </div>\r\n                ))} */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport HomeScreen from '../Screens/HomeScreen';\r\nimport NotFound from '../CustomComponents/NotFound';\r\nimport ProtectedRoute from '../Components/ProtectedRoute';\r\nimport Chat from '../Screens/Chat';\r\nimport Test from '../Components/Test';\r\n\r\nconst AppRoutes = () => (\r\n    <Switch>\r\n        <Route path=\"/test\" component={Test} />\r\n        <ProtectedRoute path=\"/chat\">\r\n            <Chat />\r\n        </ProtectedRoute>\r\n        <Route path=\"/not-found\" component={NotFound} />\r\n        <Route exact path=\"/\" component={HomeScreen} />\r\n        <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n);\r\n\r\nexport default AppRoutes;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport AppRoutes from './Routes/AppRoutes';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './assets/css/global.css';\r\nimport './assets/css/custom.css';\r\n\r\nconst App = () => (\r\n    <Router>\r\n        <Route path=\"/\" component={AppRoutes} />\r\n    </Router>\r\n);\r\n\r\nexport default App;\r\n","/* eslint-disable no-unused-vars */\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { friendRequestsReducer, getChatReducer, getFriendsReducer, loginReducer } from './Reducers';\r\n\r\nconst reducer = combineReducers({\r\n    userLogin: loginReducer,\r\n    friends: getFriendsReducer,\r\n    friendRequests: friendRequestsReducer,\r\n    chat: getChatReducer,\r\n});\r\n\r\nconst getUser = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {};\r\n\r\nconst initialState = {\r\n    userLogin: {\r\n        user: getUser.isLoggedIn ? getUser : { isLoggedIn: false },\r\n    },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","/* eslint-disable import/prefer-default-export */\r\nimport {\r\n    FRIEND_REQUEST_ERROR,\r\n    FRIEND_REQUEST_SUCCESS,\r\n    GET_CHAT_MESSAGE,\r\n    GET_CHAT_MESSAGE_ERROR,\r\n    GET_FRIENDS_ERROR,\r\n    GET_FRIENDS_SUCCESS,\r\n    USER_LOGIN_FAILED,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_FAILED,\r\n    USER_UPDATE_SUCCESS,\r\n} from './Constants';\r\n\r\nexport const loginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_UPDATE_FAILED:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGIN_FAILED:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const friendRequestsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FRIEND_REQUEST_SUCCESS:\r\n            return { friendRequest: action.payload };\r\n        case FRIEND_REQUEST_ERROR:\r\n            return { error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getFriendsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case GET_FRIENDS_SUCCESS:\r\n            return { friends: action.payload };\r\n        case GET_FRIENDS_ERROR:\r\n            return { error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getChatReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case GET_CHAT_MESSAGE:\r\n            return { chat: action.payload };\r\n        case GET_CHAT_MESSAGE_ERROR:\r\n            return { error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            // eslint-disable-next-line no-param-reassign\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\nimport App from './App';\r\nimport store from './Redux/store';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as ServiceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ToastProvider>\r\n            <App />\r\n        </ToastProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nServiceWorkerRegistration.register();\r\n"],"sourceRoot":""}