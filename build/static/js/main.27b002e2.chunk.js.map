{"version":3,"sources":["Redux/Constants.jsx","Redux/Actons.jsx","Screens/HomeScreen.jsx","CustomComponents/NotFound.jsx","Components/ProtectedRoute.jsx","Screens/Login.jsx","Components/MessageContainingFile.jsx","Components/Messages.jsx","Components/Users.jsx","Components/UploadPreview.jsx","Hooks/useDebounce.jsx","Screens/Chat.jsx","Components/Test.jsx","Routes/AppRoutes.jsx","App.js","Redux/store.js","Redux/Reducers.jsx","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILED","USER_LOGOUT","USER_UPDATE_SUCCESS","USER_UPDATE_FAILED","FRIEND_REQUEST_SUCCESS","FRIEND_REQUEST_ERROR","GET_FRIENDS_SUCCESS","GET_FRIENDS_ERROR","GET_CHAT_MESSAGE","GET_CHAT_MESSAGE_ERROR","friendRequest","email","dispatch","a","axios","get","data","type","payload","friendRequests","response","message","getFriends","friends","getChatMsg","messages","HomeScreen","addToast","useToasts","user","useSelector","state","userLogin","history","useHistory","useDispatch","useState","name","setName","setEmail","images","setImages","photoUploaded","setPhotoUploaded","footerRef","useRef","uploadFile","e","files","target","formData","FormData","i","length","append","post","map","image","preImage","filePath","console","log","removeFile","id","uploadId","split","delete","filter","singleImage","useEffect","isLoggedIn","push","handlePhotoUploaded","isSuccess","photo","autoDismiss","appearance","className","Container","Row","Col","lg","xs","md","Form","onSubmit","preventDefault","localStorage","setItem","JSON","stringify","Avatar","alt","src","style","height","width","IconButton","onClick","Group","controlId","Label","Control","value","onChange","placeholder","htmlFor","FormControlLabel","control","Checkbox","checked","label","accept","Button","variant","Navbar","ref","expand","Nav","Date","getFullYear","NotFound","position","top","left","transform","ProtectedRoute","children","rest","render","location","to","pathname","from","Login","Typography","component","MessageContainingFile","fileData","setShow","setChatImage","fileLength","path","extname","Card","elevation","cursor","right","bottom","zIndex","FileSaver","saveAs","host","controls","backgroundColor","Messages","messageDetails","roomUser","editMsg","deleteMsg","replyMsg","show","anchorEl","setAnchorEl","chatImage","open","Boolean","handleClick","event","currentTarget","handleClose","marginRight","repliedOf","body","substring","startsWith","cardSize","showGraphic","maxLine","minLine","proxyUrl","url","aria-label","aria-controls","aria-haspopup","Menu","keepMounted","onClose","PaperProps","maxHeight","MenuItem","_id","file","moment","updatedAt","fromNow","marginLeft","Modal","onHide","fullscreen","centered","Users","userInfo","findRoomUser","setReplyMsgDetails","setDisplayMessages","showMobileChat","isActive","Badge","badgeContent","userMessage","color","UploadPreview","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","Chat","requests","chat","users","setUsers","tabValue","setTabValue","notificationOn","setNotificationOn","setRoomUser","setMessages","setMessage","search","setSearch","setFriendRequests","findFriends","setFindFriends","roomUserPicShow","setRoomUserPicShow","replyMsgDetails","editMsgId","setEditMsgId","setShowMobileChat","displayMessages","isSearching","setIsSearching","userFound","setUserFound","debouncedSearchTerm","heightRef","chatTextHeightRef","textAreaRef","socket","searchCharacters","searchItem","current","io","on","userData","othersData","allUsers","find","friend","joinedUser","leavingUser","emit","requestReceiver","requestSender","requestSenderUser","requestId","userId","off","window","removeEventListener","audio","Audio","msg","play","result","getResult","innerWidth","addEventListener","focus","sendMessage","sendAt","now","key","onCloseRemoveImages","findMsg","addFriend","friendId","myId","removeRequest","request","requestAccepted","bg","fluid","Brand","Link","size","sx","ml","marginTop","offsetHeight","overflow","mt","mr","content","display","bgcolor","transformOrigin","horizontal","vertical","anchorOrigin","Divider","ListItemIcon","fontSize","removeItem","disconnect","Paper","square","borderRadius","Tabs","newValue","indicatorColor","textColor","Tab","icon","InputGroup","Text","FormControl","aria-describedby","requestData","calendar","onKeyPress","as","autoComplete","hidden","multiple","background","backdrop","Header","Title","Body","overflowY","Footer","Test","setSelectedFiles","onDragOver","onDragEnter","onDragLeave","onDrop","dataTransfer","handleFiles","border","AppRoutes","exact","App","reducer","combineReducers","action","loading","error","getUser","getItem","parse","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","href","origin","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ServiceWorkerRegistration"],"mappings":"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","file":"static/js/main.27b002e2.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAILED = 'USER_LOGIN_FAILED';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAILED = 'USER_UPDATE_FAILED';\r\n\r\nexport const FRIEND_REQUEST_SUCCESS = 'FRIEND_REQUEST_SUCCESS';\r\nexport const FRIEND_REQUEST_ERROR = 'FRIEND_REQUEST_ERROR';\r\n\r\nexport const GET_FRIENDS_SUCCESS = 'GET_FRIENDS_SUCCESS';\r\nexport const GET_FRIENDS_ERROR = 'GET_FRIENDS_ERROR';\r\n\r\nexport const GET_CHAT_MESSAGE = 'GET_CHAT_MESSAGE';\r\nexport const GET_CHAT_MESSAGE_ERROR = 'GET_CHAT_MESSAGE_ERROR';\r\n","/* eslint-disable import/prefer-default-export */\r\nimport axios from 'axios';\r\nimport {\r\n    USER_LOGIN_FAILED,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_FAILED,\r\n    USER_UPDATE_SUCCESS,\r\n    FRIEND_REQUEST_ERROR,\r\n    FRIEND_REQUEST_SUCCESS,\r\n    GET_FRIENDS_SUCCESS,\r\n    GET_FRIENDS_ERROR,\r\n    GET_CHAT_MESSAGE_ERROR,\r\n    GET_CHAT_MESSAGE,\r\n} from './Constants';\r\n\r\nexport const userLogin = (user) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        });\r\n\r\n        const { data } = await axios.post('/api/v1/user', user);\r\n\r\n        console.log(data);\r\n\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data.user,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAILED,\r\n            payload: error.response ? error.response : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const userLogout = () => async (dispatch) => {\r\n    localStorage.removeItem('user');\r\n    dispatch({\r\n        type: USER_LOGOUT,\r\n    });\r\n};\r\n\r\nexport const userUpdate = (user) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.put('/api/v1/user', user);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n            payload: data.user,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAILED,\r\n            payload: error.response ? error.response : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const friendRequest = (email) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(`/api/v1/user?search=${email}`);\r\n\r\n        dispatch({\r\n            type: FRIEND_REQUEST_SUCCESS,\r\n            payload: data.friendRequests,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FRIEND_REQUEST_ERROR,\r\n            payload: error.response ? error.response : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getFriends = (email) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(`/api/v1/user?search=${email}`);\r\n        dispatch({\r\n            type: GET_FRIENDS_SUCCESS,\r\n            payload: data.friends,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_FRIENDS_ERROR,\r\n            payload: error.response ? error.response : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getChatMsg = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get('/api/v1/messages');\r\n        dispatch({\r\n            type: GET_CHAT_MESSAGE,\r\n            payload: data.messages,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_CHAT_MESSAGE_ERROR,\r\n            payload: error.response ? error.response : error.message,\r\n        });\r\n    }\r\n};\r\n","/* eslint-disable no-plusplus */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable prettier/prettier */\r\n// import { Typography } from '@material-ui/core';\r\nimport { Button, Col, Container, Form, Image, Nav, Navbar, Row } from 'react-bootstrap';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport axios from 'axios';\r\nimport { Avatar, Checkbox, FormControlLabel, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport { userLogin } from '../Redux/Actons';\r\n\r\nconst HomeScreen = () => {\r\n    const { addToast } = useToasts();\r\n    const { user } = useSelector((state) => state.userLogin);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [photoUploaded, setPhotoUploaded] = useState(false);\r\n    const footerRef = useRef(0);\r\n\r\n    const uploadFile = async (e) => {\r\n        const { files } = e.target;\r\n        const formData = new FormData();\r\n        for (let i = 0; i < files.length; i++) {\r\n            formData.append('uploads', files[i]);\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.post('/api/v1/upload', formData);\r\n            data.map((image) => setImages((preImage) => [...preImage, image.filePath]));\r\n            setPhotoUploaded(true);\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    };\r\n\r\n    const removeFile = async (id) => {\r\n        const uploadId = id.split('/uploads/')[1];\r\n        console.log({ id, uploadId });\r\n        await axios.delete(`/api/v1/upload/${uploadId}`);\r\n        setImages(images.filter((singleImage) => singleImage !== id));\r\n        setPhotoUploaded(false);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!name || !email) {\r\n            addToast('Name or Email can not be null', {\r\n                autoDismiss: true,\r\n                appearance: 'error',\r\n            });\r\n        } else {\r\n            const data = { name, email, photo: images[0] };\r\n            dispatch(userLogin(data));\r\n            history.push('/chat');\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (user && user?.isLoggedIn) {\r\n            history.push('/chat');\r\n        }\r\n    }, [history, dispatch, user]);\r\n\r\n    const handlePhotoUploaded = async () => {\r\n        try {\r\n            if (email && !photoUploaded) {\r\n                const { data } = await axios.get(`/api/v1/user?search=${email}`);\r\n                if (data.isSuccess) {\r\n                    console.log(data.user.photo);\r\n                    setImages([data.user.photo]);\r\n                }\r\n            } else if (!email) {\r\n                addToast('Email can not be null', {\r\n                    autoDismiss: true,\r\n                    appearance: 'error',\r\n                });\r\n                setPhotoUploaded(false);\r\n            } else if (email && photoUploaded) {\r\n                setImages([]);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-primary login__screen\">\r\n            <Container className=\"\">\r\n                <h3 className=\"text-white pt-5 text-center\">e-chat-Buddy</h3>\r\n                <Row>\r\n                    <Col lg={4} />\r\n                    <Col xs={12} md={12} lg={4}>\r\n                        <Form onSubmit={handleSubmit} className=\"my-5\">\r\n                            <div className=\"d-flex justify-content-center align-items-center position-relative photo\">\r\n                                <Avatar\r\n                                    alt={name}\r\n                                    src={images[0] ?? '/logo.gif'}\r\n                                    style={{ height: 150, width: 150 }}\r\n                                    className=\"shadow-lg border border-dark\"\r\n                                />\r\n                                {images[0] && (\r\n                                    <IconButton\r\n                                        className=\"position-absolute delete__icon\"\r\n                                        onClick={() => removeFile(images[0])}\r\n                                    >\r\n                                        <CancelIcon className=\"text-white\" />\r\n                                    </IconButton>\r\n                                )}\r\n                            </div>\r\n                            <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                                <Form.Label className=\"text-white\">User Name</Form.Label>\r\n                                <Form.Control\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    htmlFor=\"name\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                                <Form.Label className=\"text-white\">Email address</Form.Label>\r\n                                <Form.Control\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter email\"\r\n                                    htmlFor=\"email\"\r\n                                />\r\n                            </Form.Group>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={photoUploaded}\r\n                                        onChange={() => {\r\n                                            setPhotoUploaded(!photoUploaded);\r\n                                            handlePhotoUploaded();\r\n                                        }}\r\n                                        className=\"text-white\"\r\n                                    />\r\n                                }\r\n                                label=\"Photo is Uploaded\"\r\n                                className=\"text-white\"\r\n                            />\r\n\r\n                            {!photoUploaded && (\r\n                                <Form.Group className=\"mb-3\" controlId=\"photo\">\r\n                                    <Form.Label className=\"text-white\">\r\n                                        Upload Your Photo\r\n                                    </Form.Label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            className=\"form-control\"\r\n                                            accept=\"image/*\"\r\n                                            onChange={uploadFile}\r\n                                            placeholder=\"Input Photos\"\r\n                                            id=\"inputGroupFile02\"\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            )}\r\n\r\n                            <Button variant=\"outline-secondary w-100\" type=\"submit\">\r\n                                Login\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col lg={4} />\r\n                </Row>\r\n            </Container>\r\n            <Navbar className=\"nav__bar fixed-bottom\" ref={footerRef} expand=\"lg\">\r\n                <Container className=\"d-flex flex-column\">\r\n                    <Nav className=\" align-items-center py-2 text-white\">\r\n                        Copyright <CopyrightIcon className=\"me-2\" /> {new Date().getFullYear()}{' '}\r\n                        e-Chat-Buddy. All rights reserved.\r\n                    </Nav>\r\n                    <Nav className=\"align-items-center pb-4 text-white\">\r\n                        Designed & Developed By Sazzad Bin Anwar\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","const NotFound = () => (\r\n    <div\r\n        style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%,-50%)' }}\r\n    >\r\n        <h4>404 | Page Not Found</h4>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProtectedRoute = ({ children, ...rest }) => {\r\n    const { user } = useSelector((state) => state.userLogin);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                user && user.isLoggedIn ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/',\r\n                            state: { from: location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\nexport default ProtectedRoute;\r\n","import { Typography } from '@material-ui/core';\r\n\r\nconst Login = () => (\r\n    <>\r\n        <Typography\r\n            component=\"h1\"\r\n            variant=\"h4\"\r\n            style={{\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%,-50%)',\r\n            }}\r\n        >\r\n            This is login page\r\n        </Typography>\r\n    </>\r\n);\r\n\r\nexport default Login;\r\n","/* eslint-disable no-nested-ternary */\r\n/* eslint-disable jsx-a11y/media-has-caption */\r\nimport { Card, IconButton } from '@material-ui/core';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport path from 'path';\r\nimport { Col } from 'react-bootstrap';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport FileSaver from 'file-saver';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport { host } from '../Config.json';\r\n\r\nconst MessageContainingFile = ({ fileData, setShow, setChatImage, fileLength }) => {\r\n    if (\r\n        path.extname(fileData) === '.png' ||\r\n        path.extname(fileData) === '.jpg' ||\r\n        path.extname(fileData) === '.jpeg' ||\r\n        path.extname(fileData) === '.gif'\r\n    ) {\r\n        return (\r\n            <Col\r\n                xs={12}\r\n                md={fileLength === 1 ? 12 : fileLength === 2 ? 6 : 4}\r\n                className=\"g-2\"\r\n                key={fileData}\r\n            >\r\n                <Card\r\n                    elevation={5}\r\n                    className=\"mb-0 img__card\"\r\n                    style={{\r\n                        cursor: 'pointer',\r\n                        position: 'relative',\r\n                        height: 200,\r\n                        width: 200,\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={fileData}\r\n                        height={200}\r\n                        width=\"auto\"\r\n                        className=\"position-absolute\"\r\n                        alt={`upload-${fileData}`}\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            left: 0,\r\n                        }}\r\n                    />\r\n                    <div className=\"position-absolute start-0 top-0 end-0 bottom-0 download__btn\">\r\n                        <GetAppIcon\r\n                            className=\"bg-white rounded-circle position-absolute\"\r\n                            style={{\r\n                                top: '50%',\r\n                                left: '50%',\r\n                                transform: 'translate(-50%,-50%)',\r\n                                cursor: 'pointer',\r\n                                zIndex: 1,\r\n                            }}\r\n                            onClick={() =>\r\n                                FileSaver.saveAs(\r\n                                    `${host}${fileData}`,\r\n                                    `image.${path.extname(fileData)}`\r\n                                )\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"position-absolute start-0 top-0 end-0 bottom-0 download__btn\">\r\n                        <ZoomInIcon\r\n                            className=\"bg-white rounded-circle position-absolute\"\r\n                            style={{\r\n                                top: 0,\r\n                                right: 0,\r\n                                cursor: 'pointer',\r\n                            }}\r\n                            onClick={() => {\r\n                                setShow(true);\r\n                                setChatImage(fileData);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    if (\r\n        path.extname(fileData) === '.mp4' ||\r\n        path.extname(fileData) === '.mov' ||\r\n        path.extname(fileData) === '.wmv' ||\r\n        path.extname(fileData) === '.flv' ||\r\n        path.extname(fileData) === '.webm' ||\r\n        path.extname(fileData) === '.mkv'\r\n    ) {\r\n        return (\r\n            <Col xs={12} className=\"g-2\" key={fileData}>\r\n                <Card\r\n                    elevation={5}\r\n                    className=\"mb-0 img__card\"\r\n                    style={{\r\n                        cursor: 'pointer',\r\n                        position: 'relative',\r\n                        height: 400,\r\n                        width: 400,\r\n                    }}\r\n                >\r\n                    <video controls width=\"100%\" height=\"400\">\r\n                        <source\r\n                            src={fileData}\r\n                            type={`video/${path.extname(fileData).split('.')[1]}`}\r\n                        />\r\n                    </video>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n    if (\r\n        path.extname(fileData) === '.mp3' ||\r\n        path.extname(fileData) === '.ogg' ||\r\n        path.extname(fileData) === '.mpeg'\r\n    ) {\r\n        return (\r\n            <Col xs={12} className=\"g-2\" key={fileData}>\r\n                <audio controls>\r\n                    <source src={fileData} type={`audio/${path.extname(fileData).split('.')[1]}`} />\r\n                </audio>\r\n            </Col>\r\n        );\r\n    }\r\n    return (\r\n        <Col xs={12} className=\"g-2\" key={fileData}>\r\n            <Card\r\n                elevation={5}\r\n                className=\"mb-0 py-1 px-2 rounded\"\r\n                style={{\r\n                    backgroundColor: '#616161',\r\n                }}\r\n            >\r\n                <div\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                    style={{ width: 200 }}\r\n                >\r\n                    <InsertDriveFileIcon className=\"text-white\" />\r\n                    <span className=\"col-4 text-truncate text-white\">{fileData.split('/')[2]}</span>\r\n                    <span className=\"text-white\">{path.extname(fileData)}</span>\r\n                    <IconButton>\r\n                        <GetAppIcon\r\n                            className=\"text-white\"\r\n                            onClick={() =>\r\n                                FileSaver.saveAs(\r\n                                    `${host}${fileData}`,\r\n                                    `file.${path.extname(fileData)}`\r\n                                )\r\n                            }\r\n                        />\r\n                    </IconButton>\r\n                </div>\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default MessageContainingFile;\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable jsx-a11y/media-has-caption */\r\n/* eslint-disable no-nested-ternary */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-boolean-value */\r\nimport { Avatar, Card, IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport { ReactTinyLink } from 'react-tiny-link';\r\nimport moment from 'moment';\r\nimport { Col, Modal, Popover, Row } from 'react-bootstrap';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useState } from 'react';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport MessageContainingFile from './MessageContainingFile';\r\n\r\nconst Messages = ({ messageDetails, user, roomUser, editMsg, deleteMsg, replyMsg }) => {\r\n    const [show, setShow] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [chatImage, setChatImage] = useState('');\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    if (\r\n        user.email !== messageDetails.from &&\r\n        roomUser.email === messageDetails.from &&\r\n        user.email === messageDetails.to\r\n    ) {\r\n        return (\r\n            <div className=\"d-flex my-3 chat__buddy\" style={{ marginRight: '20%' }}>\r\n                <Avatar\r\n                    alt={roomUser.name}\r\n                    src={roomUser.photo}\r\n                    style={{ width: 32, height: 32 }}\r\n                />\r\n                <div className=\"d-flex flex-column align-items-start\">\r\n                    <div className=\"d-flex\">\r\n                        {messageDetails.message && (\r\n                            <div className=\"chat__card chat__person ms-0 p-2\">\r\n                                {messageDetails.repliedOf && (\r\n                                    <Card\r\n                                        body\r\n                                        className=\"chat__card chat__person p-2 chat__reply text-white rounded-top\"\r\n                                    >\r\n                                        {`${\r\n                                            messageDetails.repliedOf.length > 200\r\n                                                ? messageDetails.repliedOf.substring(0, 200)\r\n                                                : messageDetails.repliedOf\r\n                                        }...`}{' '}\r\n                                        <ReplyIcon />\r\n                                    </Card>\r\n                                )}\r\n\r\n                                <Card\r\n                                    body\r\n                                    className=\"chat__card chat__person p-2\"\r\n                                    style={{ width: '100%' }}\r\n                                >\r\n                                    {messageDetails.message.startsWith('http') ? (\r\n                                        <ReactTinyLink\r\n                                            cardSize=\"small\"\r\n                                            showGraphic={true}\r\n                                            maxLine={2}\r\n                                            minLine={1}\r\n                                            proxyUrl=\"https://corsanywhere.herokuapp.com\"\r\n                                            url={messageDetails.message}\r\n                                        />\r\n                                    ) : (\r\n                                        messageDetails.message\r\n                                    )}\r\n                                </Card>\r\n                            </div>\r\n                        )}\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"long-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                            className=\"ms-2\"\r\n                        >\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    maxHeight: 48 * 4.5,\r\n                                },\r\n                            }}\r\n                        >\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    replyMsg(messageDetails._id);\r\n                                }}\r\n                            >\r\n                                <ReplyIcon />\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n\r\n                    {messageDetails.file && (\r\n                        <Row className=\"ms-2\">\r\n                            {messageDetails.file.map((fileData) => (\r\n                                <MessageContainingFile\r\n                                    fileData={fileData}\r\n                                    setShow={setShow}\r\n                                    setChatImage={setChatImage}\r\n                                    key={fileData}\r\n                                />\r\n                            ))}\r\n                        </Row>\r\n                    )}\r\n                    <p className=\"text-white ms-2 mt-1 last__seen\">\r\n                        {moment(messageDetails.updatedAt).fromNow()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (user.email === messageDetails.from && roomUser.email === messageDetails.to) {\r\n        return (\r\n            <div\r\n                className=\"d-flex flex-column justify-content-end align-items-end my-3\"\r\n                style={{ marginLeft: '20%' }}\r\n            >\r\n                <div className=\"d-flex my__chat text-right justify-content-end\">\r\n                    <div className=\"chat__card me-3 d-flex justify-content-center align-items-center\">\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"long-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                            className=\"me-3\"\r\n                        >\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    maxHeight: 48 * 4.5,\r\n                                    // width: '20ch',\r\n                                },\r\n                            }}\r\n                        >\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    deleteMsg(messageDetails._id);\r\n                                }}\r\n                            >\r\n                                <DeleteIcon />\r\n                            </MenuItem>\r\n                            {messageDetails.message && (\r\n                                <MenuItem\r\n                                    onClick={() => {\r\n                                        handleClose();\r\n                                        editMsg(messageDetails._id);\r\n                                    }}\r\n                                >\r\n                                    <EditIcon />\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    replyMsg(messageDetails._id);\r\n                                }}\r\n                            >\r\n                                <ReplyIcon />\r\n                            </MenuItem>\r\n                        </Menu>\r\n\r\n                        <div className=\"d-flex flex-column justify-content-end align-items-center\">\r\n                            {messageDetails.message && (\r\n                                <div className=\"chat__person p-2\">\r\n                                    {messageDetails.repliedOf && (\r\n                                        <Card\r\n                                            body\r\n                                            className=\"chat__person p-2 chat__reply text-white\"\r\n                                        >\r\n                                            {`${messageDetails.repliedOf.substring(0, 200)}...`}{' '}\r\n                                            <ReplyIcon />\r\n                                        </Card>\r\n                                    )}\r\n                                    <Card\r\n                                        body\r\n                                        className=\"chat__person p-2\"\r\n                                        style={{ width: '100%' }}\r\n                                    >\r\n                                        {messageDetails.message.startsWith('http') ? (\r\n                                            <ReactTinyLink\r\n                                                cardSize=\"small\"\r\n                                                showGraphic={true}\r\n                                                maxLine={2}\r\n                                                minLine={1}\r\n                                                proxyUrl=\"https://corsanywhere.herokuapp.com\"\r\n                                                url={messageDetails.message}\r\n                                            />\r\n                                        ) : (\r\n                                            messageDetails.message\r\n                                        )}\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {messageDetails.file && (\r\n                                <Row>\r\n                                    {messageDetails.file.map((fileData) => (\r\n                                        <MessageContainingFile\r\n                                            fileData={fileData}\r\n                                            setShow={setShow}\r\n                                            setChatImage={setChatImage}\r\n                                            key={fileData}\r\n                                            fileLength={messageDetails.file.length}\r\n                                        />\r\n                                    ))}\r\n                                </Row>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Avatar\r\n                        alt={user.name}\r\n                        src={user.photo}\r\n                        style={{ width: 32, height: 32, marginRight: 10 }}\r\n                    />\r\n                </div>\r\n                <p className=\"text-white mt-1 me-3 pe-5 last__seen\">\r\n                    {moment(messageDetails.updatedAt).fromNow()}\r\n                </p>\r\n\r\n                {/* modal for picture view */}\r\n                <Modal\r\n                    show={show}\r\n                    onHide={() => setShow(!show)}\r\n                    fullscreen=\"md-down\"\r\n                    centered\r\n                    className=\"shadow-lg w-100\"\r\n                >\r\n                    <img alt={chatImage} src={chatImage} />\r\n                    <CloseIcon\r\n                        className=\"bg-white rounded-circle position-absolute\"\r\n                        style={{\r\n                            top: '-10px',\r\n                            right: '-10px',\r\n                            cursor: 'pointer',\r\n                        }}\r\n                        onClick={() => setShow(!show)}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n    if (roomUser.email !== messageDetails.to) {\r\n        return null;\r\n    }\r\n    return null;\r\n};\r\n\r\nexport default Messages;\r\n","import { Avatar, Badge, Card } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\nconst Users = ({\r\n    userInfo,\r\n    messages,\r\n    findRoomUser,\r\n    setReplyMsgDetails,\r\n    setDisplayMessages,\r\n    showMobileChat,\r\n}) => (\r\n    <Card\r\n        elevation={10}\r\n        body\r\n        className={\r\n            userInfo?.isActive\r\n                ? 'bg__green p-2 d-flex align-items-center mb-3'\r\n                : 'bg-dark p-2 d-flex align-items-center mb-3'\r\n        }\r\n        style={{ cursor: 'pointer' }}\r\n        onClick={() => {\r\n            findRoomUser(userInfo?.email);\r\n            setReplyMsgDetails('');\r\n            setDisplayMessages(!!showMobileChat);\r\n        }}\r\n    >\r\n        <Badge\r\n            badgeContent={\r\n                userInfo?.isActive\r\n                    ? messages?.filter((userMessage) => userMessage.from === userInfo?.email).length\r\n                    : 0\r\n            }\r\n            color=\"primary\"\r\n        >\r\n            <Avatar alt={userInfo?.name} src={userInfo?.photo} className=\"shadow-lg border\" />\r\n        </Badge>\r\n\r\n        <div className=\"ps-3 \">\r\n            <p className=\"text-white my-0 fs-6 user__name_list\">{userInfo?.name}</p>\r\n            <p className=\"text-white my-0 last__seen\">\r\n                {userInfo?.isActive ? 'Online' : `Active ${moment(userInfo?.updatedAt).fromNow()}`}\r\n                {}\r\n            </p>\r\n        </div>\r\n    </Card>\r\n);\r\n\r\nexport default Users;\r\n","/* eslint-disable jsx-a11y/media-has-caption */\r\nimport { Card } from '@material-ui/core';\r\nimport { Col } from 'react-bootstrap';\r\nimport path from 'path';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\n\r\nconst UploadPreview = ({ fileData, removeFile }) => {\r\n    if (\r\n        path.extname(fileData) === '.png' ||\r\n        path.extname(fileData) === '.jpg' ||\r\n        path.extname(fileData) === '.jpeg' ||\r\n        path.extname(fileData) === '.gif'\r\n    ) {\r\n        return (\r\n            <Col xs={12} md={6} className=\"g-2\" key={fileData}>\r\n                <Card\r\n                    elevation={5}\r\n                    className=\"mb-0 img__card\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        height: 200,\r\n                        width: '100%',\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={fileData}\r\n                        height={200}\r\n                        width=\"auto\"\r\n                        className=\"position-absolute\"\r\n                        alt={`upload-${fileData}`}\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            left: 0,\r\n                        }}\r\n                    />\r\n                    <CancelIcon\r\n                        className=\"position-absolute bg-white text-dark\"\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            cursor: 'pointer',\r\n                        }}\r\n                        onClick={() => removeFile(fileData)}\r\n                    />\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    if (\r\n        path.extname(fileData) === '.mp4' ||\r\n        path.extname(fileData) === '.mov' ||\r\n        path.extname(fileData) === '.wmv' ||\r\n        path.extname(fileData) === '.flv' ||\r\n        path.extname(fileData) === '.webm' ||\r\n        path.extname(fileData) === '.mkv'\r\n    ) {\r\n        return (\r\n            <Col xs={12} className=\"g-2\" key={fileData}>\r\n                <Card\r\n                    elevation={5}\r\n                    className=\"mb-0 img__card\"\r\n                    style={{\r\n                        position: 'relative',\r\n                    }}\r\n                >\r\n                    <video controls width=\"100%\" height=\"400\">\r\n                        <source\r\n                            src={fileData}\r\n                            type={`video/${path.extname(fileData).split('.')[1]}`}\r\n                        />\r\n                    </video>\r\n                    <CancelIcon\r\n                        className=\"position-absolute bg-white text-dark\"\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            cursor: 'pointer',\r\n                            zIndex: 1,\r\n                        }}\r\n                        onClick={() => removeFile(fileData)}\r\n                    />\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n    if (\r\n        path.extname(fileData) === '.mp3' ||\r\n        path.extname(fileData) === '.ogg' ||\r\n        path.extname(fileData) === '.mpeg'\r\n    ) {\r\n        return (\r\n            <Col xs={12} className=\"g-2\" key={fileData}>\r\n                <div className=\"position-relative\">\r\n                    <audio controls>\r\n                        <source\r\n                            src={fileData}\r\n                            type={`audio/${path.extname(fileData).split('.')[1]}`}\r\n                        />\r\n                    </audio>\r\n                    <CancelIcon\r\n                        className=\"position-absolute bg-white text-dark\"\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            cursor: 'pointer',\r\n                        }}\r\n                        onClick={() => removeFile(fileData)}\r\n                    />\r\n                </div>\r\n            </Col>\r\n        );\r\n    }\r\n    return (\r\n        <Col xs={12} md={6} className=\"g-2\" key={fileData}>\r\n            <Card\r\n                elevation={5}\r\n                className=\"mb-0 py-3 px-3 rounded position-relative\"\r\n                style={{\r\n                    backgroundColor: '#616161',\r\n                }}\r\n            >\r\n                <div\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                    style={{ width: 200 }}\r\n                >\r\n                    <InsertDriveFileIcon className=\"text-white\" />\r\n                    <span className=\"col-4 text-truncate text-white\">{fileData.split('/')[2]}</span>\r\n                    <span className=\"text-white\">{path.extname(fileData)}</span>\r\n                    <CancelIcon\r\n                        className=\"position-absolute\"\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            cursor: 'pointer',\r\n                        }}\r\n                        onClick={() => removeFile(fileData)}\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default UploadPreview;\r\n","// use this hook to make a delay after input search on onChange event\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [value, delay]);\r\n    return debouncedValue;\r\n}\r\n\r\nexport default useDebounce;\r\n\r\n// Usage of this functionality\r\n// const App = () => {\r\n\r\n//     // const [count, setCounter] = useState(0);\r\n//     const [searchTerm, setSearchTerm] = useState(\"\");\r\n//     const [results, setResults] = useState();\r\n//     const [isSearching, setIsSearching] = useState(false);\r\n//     const debouncedSearchTerm = useDebounce(searchTerm, 1000);\r\n\r\n//     async function searchCharacters(search) {\r\n//       try {\r\n//         const res = await fetch(`https://jsonplaceholder.typicode.com/photos/${search}`);\r\n//         let data = res.json();\r\n//         return data;\r\n//       } catch (error) {\r\n//         console.log(error.response);\r\n//       }\r\n\r\n//     }\r\n\r\n//     console.log(debouncedSearchTerm);\r\n\r\n//     // Effect for API call\r\n//     useEffect(\r\n//       () => {\r\n//         if (debouncedSearchTerm) {\r\n//           setIsSearching(true);\r\n//           const getResult = async () => {\r\n//             try {\r\n//               let result = await searchCharacters(debouncedSearchTerm);\r\n//               setIsSearching(false);\r\n//               setResults(result);\r\n//             } catch (error) {\r\n//               console.log(error.response);\r\n//             }\r\n//           }\r\n//           getResult();\r\n\r\n//         } else {\r\n//           setResults();\r\n//           setIsSearching(false);\r\n//         }\r\n//       },\r\n//       [debouncedSearchTerm] // Only call effect if debounced search term changes\r\n//     );\r\n\r\n//     return (\r\n//       <div>\r\n//         <input\r\n//           placeholder=\"Search Marvel Comics\"\r\n//           onChange={(e) => setSearchTerm(e.target.value)}\r\n//         />\r\n//         {isSearching && <div>Searching ...</div>}\r\n//         {results && (\r\n//           <div key={results.id}>\r\n//             <h4>{results.title}</h4>\r\n//             <img\r\n//               src={`${results.thumbnailUrl}`}\r\n//               alt=\"images\"\r\n//             />\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     )\r\n//   }\r\n\r\n//   export default App;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable jsx-a11y/media-has-caption */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable no-nested-ternary */\r\n/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-unused-vars */\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormControl,\r\n    InputGroup,\r\n    Modal,\r\n    Nav,\r\n    Navbar,\r\n    Row,\r\n} from 'react-bootstrap';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n    Avatar,\r\n    Card,\r\n    IconButton,\r\n    MenuItem,\r\n    ListItemIcon,\r\n    Divider,\r\n    Menu,\r\n    Tabs,\r\n    Tab,\r\n    Paper,\r\n    Badge,\r\n} from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport { io } from 'socket.io-client';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from 'axios';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PersonAdd from '@material-ui/icons/PersonAdd';\r\nimport Settings from '@material-ui/icons/Settings';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport NotificationsOffIcon from '@material-ui/icons/NotificationsOff';\r\nimport path from 'path';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport {\r\n    friendRequest,\r\n    getChatMsg,\r\n    getFriends,\r\n    userLogin,\r\n    userLogout,\r\n    userUpdate,\r\n} from '../Redux/Actons';\r\nimport Messages from '../Components/Messages';\r\nimport Users from '../Components/Users';\r\nimport UploadPreview from '../Components/UploadPreview';\r\nimport useDebounce from '../Hooks/useDebounce';\r\n\r\nconst Chat = () => {\r\n    const { user } = useSelector((state) => state.userLogin);\r\n    const { friends } = useSelector((state) => state.friends);\r\n    const { friendRequest: requests } = useSelector((state) => state.friendRequests);\r\n    const { chat } = useSelector((state) => state.chat);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState(friends && friends);\r\n    const { addToast } = useToasts();\r\n    const [tabValue, setTabValue] = useState(0);\r\n    const [notificationOn, setNotificationOn] = useState(true);\r\n    const [roomUser, setRoomUser] = useState({});\r\n    const [messages, setMessages] = useState(chat && chat);\r\n    const [message, setMessage] = useState('');\r\n    const [search, setSearch] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [friendRequests, setFriendRequests] = useState([]);\r\n    const [newMessages, setNewMessages] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const [findFriends, setFindFriends] = useState();\r\n    const [roomUserPicShow, setRoomUserPicShow] = useState(false);\r\n    const [replyMsgDetails, setReplyMsgDetails] = useState(null);\r\n    const [editMsgId, setEditMsgId] = useState('');\r\n    const [showMobileChat, setShowMobileChat] = useState(false);\r\n    const [displayMessages, setDisplayMessages] = useState(false);\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [userFound, setUserFound] = useState(true);\r\n    const debouncedSearchTerm = useDebounce(search, 1000);\r\n    const heightRef = useRef(0);\r\n    const footerRef = useRef(0);\r\n    const chatTextHeightRef = useRef(0);\r\n    const textAreaRef = useRef(null);\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const socket = useRef(null);\r\n\r\n    const searchCharacters = async (searchItem) => {\r\n        try {\r\n            const { data } = await axios.get(`/api/v1/user?search=${searchItem}`);\r\n            return data;\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.current = io('/');\r\n        socket.current.on('user-joined', (userData) => {\r\n            const othersData = userData.allUsers.filter(\r\n                (userInfo) =>\r\n                    userInfo.email !== user.email &&\r\n                    friends &&\r\n                    friends?.find((friend) => friend.email === userInfo.email)\r\n            );\r\n            setUsers(othersData);\r\n            if (\r\n                userData.joinedUser &&\r\n                userData.joinedUser.email !== user.email &&\r\n                user?.isLoggedIn &&\r\n                friends &&\r\n                friends?.find((friend) => friend.email === userData.email)\r\n            ) {\r\n                addToast(`${userData.joinedUser.name} is active`, {\r\n                    appearance: 'info',\r\n                    autoDismiss: true,\r\n                });\r\n\r\n                if (roomUser !== null && roomUser?.email === userData.joinedUser.email) {\r\n                    setRoomUser(userData.joinedUser);\r\n                }\r\n            } else if (\r\n                userData.leavingUser &&\r\n                userData.leavingUser.email !== user.email &&\r\n                user?.isLoggedIn\r\n            ) {\r\n                setRoomUser();\r\n            }\r\n        });\r\n\r\n        socket.current.emit('user-login', user);\r\n\r\n        socket.current.on(\r\n            'friend-request',\r\n            ({ requestReceiver, requestSender, message: errorMsg, requestSenderUser }) => {\r\n                if (requestReceiver !== requestSender) {\r\n                    dispatch(friendRequest(user.email));\r\n                }\r\n            }\r\n        );\r\n\r\n        socket.current.on('friend-list', ({ requestId, userId }) => {\r\n            if (userId === user._id) {\r\n                dispatch(getFriends(user.email));\r\n                dispatch(friendRequest(user.email));\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.current.off('user-joined', (data) => {});\r\n            socket.current.off('room-user-details', (userData) => {});\r\n\r\n            socket.current.off('friend-request', () => {});\r\n            socket.current.off('friend-list', () => {});\r\n            window.removeEventListener('resize', () => {});\r\n        };\r\n    }, [\r\n        addToast,\r\n        user,\r\n        history,\r\n        replyMsgDetails,\r\n        notificationOn,\r\n        roomUser,\r\n        friendRequests,\r\n        dispatch,\r\n        friends,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        const audio = new Audio('/msg_sound.mp3');\r\n\r\n        socket.current.on('removeMsgFromChat', async (data) => {\r\n            try {\r\n                const { data: msg } = await axios.get('/api/v1/messages');\r\n                setMessages(msg.messages);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        });\r\n\r\n        socket.current.on('chat-message', async (chat) => {\r\n            if (chat.from !== user.email) {\r\n                audio.play();\r\n            }\r\n            if (chat.from === user.email || chat.to === user.email) {\r\n                dispatch(getChatMsg());\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.current.off('chat-message', (chat) => {});\r\n            socket.current.off('removeMsgFromChat', (data) => {});\r\n        };\r\n    }, [dispatch, messages, user.email]);\r\n\r\n    console.log(chat);\r\n\r\n    useEffect(() => {\r\n        if (debouncedSearchTerm) {\r\n            setIsSearching(true);\r\n            setUserFound(true);\r\n            const getResult = async () => {\r\n                try {\r\n                    const result = await searchCharacters(debouncedSearchTerm);\r\n                    if (result.isSuccess) {\r\n                        setFindFriends(result.user);\r\n                        setIsSearching(false);\r\n                    } else {\r\n                        setIsSearching(false);\r\n                        setUserFound(false);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error.response);\r\n                }\r\n            };\r\n            getResult();\r\n        } else {\r\n            setIsSearching(false);\r\n            setFindFriends('');\r\n        }\r\n\r\n        if (!user && !user?.isLoggedIn) {\r\n            history.push('/');\r\n        }\r\n\r\n        if (window.innerWidth < 991) {\r\n            setShowMobileChat(true);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth < 991) {\r\n                setShowMobileChat(true);\r\n            }\r\n        });\r\n\r\n        replyMsgDetails !== null && replyMsgDetails.message ? textAreaRef.current.focus() : null;\r\n\r\n        dispatch(friendRequest(user.email));\r\n        dispatch(getFriends(user.email));\r\n        dispatch(getChatMsg());\r\n    }, [debouncedSearchTerm, dispatch, history, replyMsgDetails, user]);\r\n\r\n    const findRoomUser = (email) => {\r\n        setRoomUser(users.filter((userInfo) => userInfo.email === email)[0]);\r\n    };\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const chat = {\r\n            _id: editMsgId,\r\n            user: user._id,\r\n            from: user.email,\r\n            file: images,\r\n            repliedOf: replyMsgDetails?.message\r\n                ? replyMsgDetails?.message\r\n                : replyMsgDetails?.file\r\n                ? replyMsgDetails?.file[0]\r\n                : '',\r\n            to: roomUser?.email,\r\n            message,\r\n            sendAt: Date.now(),\r\n        };\r\n        if ((message && e.key === 'Enter') || message || images) {\r\n            setMessage('');\r\n            try {\r\n                const { data } = await axios.post('/api/v1/messages', chat);\r\n                if (data.message) {\r\n                    dispatch(getChatMsg());\r\n                    // setMessages([...messages, data.message]);\r\n                    socket.current.emit('message', data.message);\r\n                    setShow(false);\r\n                    setImages([]);\r\n                    setReplyMsgDetails({});\r\n                    setEditMsgId('');\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        } else {\r\n            addToast('Please Write something', {\r\n                appearance: 'info',\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    const uploadFile = async (e) => {\r\n        const { files } = e.target;\r\n        const formData = new FormData();\r\n        for (let i = 0; i < files.length; i++) {\r\n            formData.append('uploads', files[i]);\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.post('/api/v1/upload', formData);\r\n            data.map((image) => setImages((preImage) => [...preImage, image.filePath]));\r\n            data.length ? setShow(true) : setShow(false);\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    };\r\n\r\n    const removeFile = async (id) => {\r\n        const uploadId = id.split('/uploads/')[1];\r\n        await axios.delete(`/api/v1/upload/${uploadId}`);\r\n        setImages(images.filter((singleImage) => singleImage !== id));\r\n        images.length === 1 ? setShow(false) : setShow(true);\r\n    };\r\n\r\n    const onCloseRemoveImages = () => {\r\n        if (images.length) {\r\n            images.map((image) => removeFile(image));\r\n            if (images.length - 1 > 0) {\r\n                addToast(`Remove ${images.length - 1} files`, {\r\n                    autoDismiss: true,\r\n                    appearance: 'info',\r\n                });\r\n            }\r\n        }\r\n        if (!images.length) {\r\n            setShow(!show);\r\n        }\r\n    };\r\n\r\n    const deleteMsg = (id) => {\r\n        socket.current.emit('messageDelete', id);\r\n    };\r\n    const editMsg = (id) => {\r\n        setEditMsgId(id);\r\n        setMessages(messages.filter((findMsg) => findMsg._id !== id));\r\n        setMessage(messages.filter((findMsg) => findMsg._id === id)[0].message);\r\n    };\r\n\r\n    const replyMsg = (id) => {\r\n        setReplyMsgDetails(messages.filter((findMsg) => findMsg._id === id)[0]);\r\n    };\r\n\r\n    const addFriend = async (id) => {\r\n        socket.current.emit('friend-request-send', { friendId: id, myId: user._id });\r\n    };\r\n\r\n    const removeRequest = async (id) => {\r\n        socket.current.emit('friend-request-declined', { requestId: id, userId: user._id });\r\n        if (friendRequests) {\r\n            setFriendRequests(friendRequests.filter((request) => request._id !== id));\r\n        }\r\n        dispatch(friendRequest(user.email));\r\n    };\r\n\r\n    const requestAccepted = async (id) => {\r\n        socket.current.emit('friend-request-accepted', { requestId: id, userId: user._id });\r\n        console.log('clicked');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" className=\"nav__bar\" ref={heightRef} expand=\"lg\">\r\n                <Container fluid={('xs', 'sm', 'md', 'lg')}>\r\n                    <Link to=\"/\">\r\n                        <Navbar.Brand className=\"text-white align-items-center\">\r\n                            <img\r\n                                className=\"app__logo me-2\"\r\n                                height=\"30px\"\r\n                                src=\"/logo.gif\"\r\n                                alt=\"logo\"\r\n                            />\r\n                            <span className=\"h4\">Chat-Buddy</span>\r\n                        </Navbar.Brand>\r\n                    </Link>\r\n                    <Nav className=\"ms-auto align-items-center\">\r\n                        <Nav.Link className=\"text-white fs-5\">\r\n                            {notificationOn ? (\r\n                                <IconButton\r\n                                    onClick={() => setNotificationOn(false)}\r\n                                    size=\"small\"\r\n                                    sx={{ ml: 2 }}\r\n                                >\r\n                                    <NotificationsActiveIcon className=\"text-white\" />\r\n                                </IconButton>\r\n                            ) : (\r\n                                <IconButton\r\n                                    onClick={() => setNotificationOn(true)}\r\n                                    size=\"small\"\r\n                                    sx={{ ml: 2 }}\r\n                                >\r\n                                    <NotificationsOffIcon className=\"text-white\" />\r\n                                </IconButton>\r\n                            )}\r\n                        </Nav.Link>\r\n                        <Nav.Link className=\"text-white fs-5\">\r\n                            <IconButton onClick={handleClick} size=\"small\" sx={{ ml: 2 }}>\r\n                                <Avatar\r\n                                    style={{ width: 32, height: 32 }}\r\n                                    src={user.photo}\r\n                                    alt={user.name}\r\n                                />\r\n                            </IconButton>\r\n                        </Nav.Link>\r\n\r\n                        {/* profile submenu */}\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            onClick={handleClose}\r\n                            style={{\r\n                                marginTop: heightRef.current.offsetHeight - 15,\r\n                            }}\r\n                            PaperProps={{\r\n                                elevation: 0,\r\n                                sx: {\r\n                                    overflow: 'visible',\r\n                                    filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                                    mt: 1.5,\r\n                                    '& .MuiAvatar-root': {\r\n                                        width: 32,\r\n                                        height: 32,\r\n                                        ml: -0.5,\r\n                                        mr: 1,\r\n                                    },\r\n                                    '&:before': {\r\n                                        content: '\"\"',\r\n                                        display: 'block',\r\n                                        position: 'absolute',\r\n                                        top: 0,\r\n                                        right: 14,\r\n                                        width: 10,\r\n                                        height: 10,\r\n                                        bgcolor: 'background.paper',\r\n                                        transform: 'translateY(-50%) rotate(45deg)',\r\n                                        zIndex: 0,\r\n                                    },\r\n                                },\r\n                            }}\r\n                            transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                            anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                        >\r\n                            <MenuItem>\r\n                                <Avatar\r\n                                    alt={user.name}\r\n                                    src={user.photo}\r\n                                    style={{ width: 22, height: 22, marginRight: 30 }}\r\n                                />{' '}\r\n                                {user.name}\r\n                            </MenuItem>\r\n                            <Divider />\r\n                            <MenuItem>\r\n                                <ListItemIcon>\r\n                                    <Settings fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                Settings\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    dispatch(userLogout());\r\n                                    socket.current.disconnect();\r\n                                    history.push('/');\r\n                                    localStorage.removeItem('roomUser');\r\n                                }}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <ExitToAppIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                Logout\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n\r\n            <section className=\"bg__black\">\r\n                <Container fluid={('sm', 'md', 'lg')}>\r\n                    <Row>\r\n                        <Col\r\n                            md={3}\r\n                            xs={12}\r\n                            style={{\r\n                                height: `calc(100vh - ${\r\n                                    heightRef.current.offsetHeight + footerRef.current.offsetHeight\r\n                                }px)`,\r\n                                backgroundColor: '#1c2834',\r\n                            }}\r\n                        >\r\n                            <Paper square style={{ marginTop: 15, borderRadius: 7 }}>\r\n                                <Tabs\r\n                                    value={tabValue}\r\n                                    onChange={handleChange}\r\n                                    variant=\"fullWidth\"\r\n                                    indicatorColor=\"primary\"\r\n                                    textColor=\"primary\"\r\n                                    aria-label=\"icon tabs example\"\r\n                                >\r\n                                    <Tab icon={<ForumIcon />} aria-label=\"phone\" />\r\n\r\n                                    <Tab\r\n                                        icon={\r\n                                            <Badge\r\n                                                badgeContent={requests && requests.length}\r\n                                                color=\"primary\"\r\n                                            >\r\n                                                <PersonAdd />\r\n                                            </Badge>\r\n                                        }\r\n                                        aria-label=\"favorite\"\r\n                                    />\r\n                                </Tabs>\r\n                            </Paper>\r\n\r\n                            <div className=\"search__bar\">\r\n                                <InputGroup className=\"py-3\">\r\n                                    <InputGroup.Text id=\"search\" className=\"bg-white border-end-0\">\r\n                                        <SearchIcon />\r\n                                    </InputGroup.Text>\r\n                                    <FormControl\r\n                                        className=\"border-start-0\"\r\n                                        placeholder=\"Username\"\r\n                                        aria-label=\"Username\"\r\n                                        aria-describedby=\"search\"\r\n                                        value={search}\r\n                                        onChange={(e) => setSearch(e.target.value)}\r\n                                        type=\"text\"\r\n                                    />\r\n                                </InputGroup>\r\n                            </div>\r\n                            {search && isSearching && <p className=\"text-white\">Searching...</p>}\r\n\r\n                            {findFriends ? (\r\n                                <Card\r\n                                    elevation={10}\r\n                                    body\r\n                                    className=\"bg-dark p-2 d-flex justify-content-between align-items-center mb-3\"\r\n                                    style={{ cursor: 'pointer' }}\r\n                                >\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <Avatar\r\n                                            alt={findFriends.name}\r\n                                            src={findFriends.photo}\r\n                                            className=\"shadow-lg border\"\r\n                                        />\r\n\r\n                                        <div className=\"ps-3 \">\r\n                                            <p className=\"text-white my-0 fs-6 user__name_list\">\r\n                                                {findFriends.name}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <IconButton onClick={() => addFriend(findFriends._id)}>\r\n                                            <PersonAdd className=\"text-white\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </Card>\r\n                            ) : !isSearching && search && !userFound ? (\r\n                                <p className=\"text-white\">User is not found</p>\r\n                            ) : null}\r\n\r\n                            {tabValue === 1 && (\r\n                                <div>\r\n                                    {requests &&\r\n                                        requests.map((request) => (\r\n                                            <Card\r\n                                                elevation={10}\r\n                                                body\r\n                                                className=\"bg-dark p-2 d-flex justify-content-between align-items-center mb-3\"\r\n                                                style={{ cursor: 'pointer' }}\r\n                                            >\r\n                                                <div className=\"d-flex\">\r\n                                                    <Avatar\r\n                                                        alt=\"Friend\"\r\n                                                        src={request?.photo}\r\n                                                        className=\"shadow-lg border\"\r\n                                                    />\r\n\r\n                                                    <div className=\"ps-3 \">\r\n                                                        <p className=\"text-white my-0 fs-6 user__name_list\">\r\n                                                            {request?.name}\r\n                                                        </p>\r\n                                                        <p className=\"text-white my-0 last__seen\">\r\n                                                            Wants to be your friend\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                    <IconButton\r\n                                                        onClick={() =>\r\n                                                            requestAccepted(request?._id)\r\n                                                        }\r\n                                                    >\r\n                                                        <PersonAdd className=\"text-white\" />\r\n                                                    </IconButton>\r\n                                                    <IconButton\r\n                                                        onClick={() => removeRequest(request?._id)}\r\n                                                    >\r\n                                                        <PersonAddDisabledIcon className=\"text-white\" />\r\n                                                    </IconButton>\r\n                                                </div>\r\n                                            </Card>\r\n                                        ))}\r\n                                    {friendRequests &&\r\n                                        friendRequests.map((requestData) => (\r\n                                            <Card\r\n                                                elevation={10}\r\n                                                body\r\n                                                className=\"bg-dark p-2 d-flex justify-content-between align-items-center mb-3\"\r\n                                                style={{ cursor: 'pointer' }}\r\n                                            >\r\n                                                <div className=\"d-flex\">\r\n                                                    <Avatar\r\n                                                        alt=\"Friend\"\r\n                                                        src={requestData?.photo}\r\n                                                        className=\"shadow-lg border\"\r\n                                                    />\r\n\r\n                                                    <div className=\"ps-3 \">\r\n                                                        <p className=\"text-white my-0 fs-6 user__name_list\">\r\n                                                            {requestData?.name}\r\n                                                        </p>\r\n                                                        <p className=\"text-white my-0 last__seen\">\r\n                                                            Wants to be your friend\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                    <IconButton\r\n                                                        onClick={() =>\r\n                                                            requestAccepted(requestData?._id)\r\n                                                        }\r\n                                                    >\r\n                                                        <PersonAdd className=\"text-white\" />\r\n                                                    </IconButton>\r\n                                                    <IconButton\r\n                                                        onClick={() =>\r\n                                                            removeRequest(requestData?._id)\r\n                                                        }\r\n                                                    >\r\n                                                        <PersonAddDisabledIcon className=\"text-white\" />\r\n                                                    </IconButton>\r\n                                                </div>\r\n                                            </Card>\r\n                                        ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            {users &&\r\n                                !tabValue &&\r\n                                users.map((userInfo) => (\r\n                                    <Users\r\n                                        userInfo={userInfo}\r\n                                        messages={messages}\r\n                                        findRoomUser={findRoomUser}\r\n                                        key={userInfo.email}\r\n                                        setReplyMsgDetails={setReplyMsgDetails}\r\n                                        setDisplayMessages={setDisplayMessages}\r\n                                        showMobileChat={showMobileChat}\r\n                                    />\r\n                                ))}\r\n                        </Col>\r\n                        <Col\r\n                            md={9}\r\n                            xs={12}\r\n                            className={\r\n                                showMobileChat\r\n                                    ? 'bg-primary position-absolute top-0 end-0 bottom-0 start-0'\r\n                                    : 'bg-primary'\r\n                            }\r\n                            style={{\r\n                                display:\r\n                                    showMobileChat && displayMessages\r\n                                        ? 'block'\r\n                                        : !showMobileChat\r\n                                        ? 'block'\r\n                                        : 'none',\r\n                            }}\r\n                        >\r\n                            <main className=\"position-relative h-100\">\r\n                                {roomUser?.email ? (\r\n                                    <>\r\n                                        <section\r\n                                            className=\"message__header d-flex justify-content-between align-items-center py-4 px-2 border-bottom\"\r\n                                            id=\"user__head\"\r\n                                        >\r\n                                            <div className=\"d-flex\">\r\n                                                <Avatar\r\n                                                    alt={roomUser?.name}\r\n                                                    src={roomUser?.photo}\r\n                                                    style={{\r\n                                                        height: 50,\r\n                                                        width: 50,\r\n                                                        cursor: 'pointer',\r\n                                                    }}\r\n                                                    onClick={() => setRoomUserPicShow(true)}\r\n                                                />\r\n                                                <div className=\"ps-3\">\r\n                                                    <h4 className=\"text-white my-0\">\r\n                                                        {roomUser?.name}\r\n                                                    </h4>\r\n                                                    <p className=\"text-white my-0\">\r\n                                                        {roomUser?.isActive\r\n                                                            ? 'Online'\r\n                                                            : `Last Seen ${moment(\r\n                                                                  roomUser?.updatedAt\r\n                                                              ).calendar()}`}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <IconButton\r\n                                                className=\"float-end mobile__back_btn\"\r\n                                                onClick={() => setDisplayMessages(false)}\r\n                                            >\r\n                                                <ArrowRightAltIcon className=\"text-white\" />\r\n                                            </IconButton>\r\n                                        </section>\r\n                                        <ScrollToBottom className=\"message__body overflow-auto position-relative drag__drop\">\r\n                                            {chat &&\r\n                                                chat.map((messageDetails) => (\r\n                                                    <Messages\r\n                                                        messageDetails={messageDetails}\r\n                                                        user={user}\r\n                                                        roomUser={roomUser}\r\n                                                        removeFile={removeFile}\r\n                                                        editMsg={editMsg}\r\n                                                        deleteMsg={deleteMsg}\r\n                                                        replyMsg={replyMsg}\r\n                                                        key={messageDetails._id}\r\n                                                    />\r\n                                                ))}\r\n                                        </ScrollToBottom>\r\n                                        <section\r\n                                            className=\"input__area position-absolute bottom-0 start-0 end-0\"\r\n                                            id=\"text__area\"\r\n                                        >\r\n                                            <form\r\n                                                onSubmit={sendMessage}\r\n                                                className=\"mb-2 bg-primary pt-3\"\r\n                                            >\r\n                                                <Row>\r\n                                                    {replyMsgDetails !== null &&\r\n                                                        replyMsgDetails?.message && (\r\n                                                            <Col xs={10}>\r\n                                                                <div className=\"px-3 py-2 bg-primary position-relative\">\r\n                                                                    <p className=\"mb-0 col-10 text-truncate text-white\">\r\n                                                                        <b>Replying to : </b>\r\n                                                                        {\r\n                                                                            replyMsgDetails.message\r\n                                                                        }{' '}\r\n                                                                        <IconButton\r\n                                                                            className=\"position-absolute top-0 end-0\"\r\n                                                                            onClick={() =>\r\n                                                                                setReplyMsgDetails(\r\n                                                                                    ''\r\n                                                                                )\r\n                                                                            }\r\n                                                                        >\r\n                                                                            <CloseIcon className=\"text-white bg-dark rounded-circle\" />\r\n                                                                        </IconButton>\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        )}\r\n                                                    <Col xs={10}>\r\n                                                        <Form.Group\r\n                                                            controlId=\"formBasicEmail\"\r\n                                                            ref={chatTextHeightRef}\r\n                                                        >\r\n                                                            <Form.Control\r\n                                                                value={message}\r\n                                                                onChange={(e) =>\r\n                                                                    setMessage(e.target.value)\r\n                                                                }\r\n                                                                onKeyPress={(e) =>\r\n                                                                    e.key === 'Enter'\r\n                                                                        ? sendMessage(e)\r\n                                                                        : setMessage(e.target.value)\r\n                                                                }\r\n                                                                ref={textAreaRef}\r\n                                                                type=\"text\"\r\n                                                                as=\"textarea\"\r\n                                                                className=\"rounded text__input bg-primary text-white\"\r\n                                                                autoComplete=\"off\"\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                    </Col>\r\n                                                    <Col xs={1}>\r\n                                                        <div className=\"d-flex\">\r\n                                                            <label\r\n                                                                htmlFor=\"icon-button-file\"\r\n                                                                className=\"float-end\"\r\n                                                            >\r\n                                                                <input\r\n                                                                    id=\"icon-button-file\"\r\n                                                                    type=\"file\"\r\n                                                                    onChange={uploadFile}\r\n                                                                    hidden\r\n                                                                    multiple\r\n                                                                />\r\n                                                                <IconButton\r\n                                                                    aria-label=\"upload picture\"\r\n                                                                    component=\"span\"\r\n                                                                    className=\"border p-2 input__file__button\"\r\n                                                                >\r\n                                                                    <AttachmentIcon className=\"attachments__icon text-dark\" />\r\n                                                                </IconButton>\r\n                                                            </label>\r\n                                                            <Button\r\n                                                                variant=\"outline-secondary rounded-circle p-2 pl-3 shadow-lg float-start\"\r\n                                                                className=\"ms-2\"\r\n                                                                type=\"submit\"\r\n                                                            >\r\n                                                                <SendIcon className=\"attachments__icon\" />\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </form>\r\n                                        </section>\r\n                                    </>\r\n                                ) : (\r\n                                    <div\r\n                                        style={{\r\n                                            position: 'absolute',\r\n                                            top: '50%',\r\n                                            left: '50%',\r\n                                            transform: 'translate(-50%,-50%)',\r\n                                        }}\r\n                                    >\r\n                                        <h4 className=\"text-white\">Please Select a conversation</h4>\r\n                                    </div>\r\n                                )}\r\n                            </main>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n\r\n            {/* footer nav */}\r\n            <Navbar style={{ background: '#000' }} className=\"nav__bar\" ref={footerRef} expand=\"lg\">\r\n                <Container fluid={('sm', 'md')}>\r\n                    <Nav className=\"me-auto align-items-center py-3 text-white\">\r\n                        Copyright <CopyrightIcon className=\"me-2\" /> {new Date().getFullYear()}{' '}\r\n                        e-Chat-Buddy. All rights reserved.\r\n                    </Nav>\r\n                    <Nav className=\"ms-auto align-items-center py-3 text-white\">\r\n                        Designed & Developed By Sazzad Bin Anwar\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n\r\n            {/* All modals */}\r\n            {/* Modal for image upload */}\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(!show)}\r\n                fullscreen=\"md-down\"\r\n                centered\r\n                backdrop=\"static\"\r\n                className=\"shadow-lg\"\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title className=\"position-relative w-100\">\r\n                        Upload File{' '}\r\n                        <IconButton\r\n                            className=\"position-absolute top-0 end-0\"\r\n                            onClick={() => onCloseRemoveImages()}\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row\r\n                        style={{\r\n                            maxHeight: 450,\r\n                            overflowY: 'auto',\r\n                        }}\r\n                    >\r\n                        {images &&\r\n                            images.map((image) => (\r\n                                <UploadPreview\r\n                                    fileData={image}\r\n                                    removeFile={removeFile}\r\n                                    key={image}\r\n                                />\r\n                            ))}\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => onCloseRemoveImages()}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"outline-primary\" onClick={sendMessage}>\r\n                        <SendIcon className=\"fs-7\" />\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* modal for picture view */}\r\n            <Modal\r\n                show={roomUserPicShow}\r\n                onHide={() => setRoomUserPicShow(!roomUserPicShow)}\r\n                fullscreen=\"md-down\"\r\n                centered\r\n                className=\"shadow-lg w-100\"\r\n            >\r\n                {roomUser?.photo ? (\r\n                    <img alt={roomUser?.name} src={roomUser?.photo} height=\"auto\" width=\"auto\" />\r\n                ) : (\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center  my-5\">\r\n                        <img\r\n                            alt=\"userphoto\"\r\n                            src=\"/user.png\"\r\n                            className=\"rounded-circle bg-dark p-3\"\r\n                            height=\"150\"\r\n                            width=\"150\"\r\n                        />\r\n                        <h3 className=\"my-2\">{roomUser?.name}</h3>\r\n                    </div>\r\n                )}\r\n\r\n                <IconButton\r\n                    className=\"position-absolute top-0 end-0\"\r\n                    onClick={() => setRoomUserPicShow(!roomUserPicShow)}\r\n                >\r\n                    <CloseIcon className=\"text-white bg-dark\" />\r\n                </IconButton>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","/* eslint-disable no-unused-vars */\r\nimport { useState } from 'react';\r\n\r\nconst Test = () => {\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n    console.log('hello');\r\n\r\n    const handleFiles = (files) => {\r\n        setSelectedFiles(files);\r\n        console.log(files);\r\n    };\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const fileDrop = (e) => {\r\n        e.preventDefault();\r\n        const { files } = e.dataTransfer;\r\n        if (files.length) {\r\n            handleFiles(files);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className=\"drop-container d-flex justify-content-center align-items-center\"\r\n                onDragOver={dragOver}\r\n                onDragEnter={dragEnter}\r\n                onDragLeave={dragLeave}\r\n                onDrop={fileDrop}\r\n                style={{\r\n                    height: 300,\r\n                    width: 300,\r\n                    border: '1px solid black',\r\n                }}\r\n            >\r\n                <div className=\"drop-message\">\r\n                    <div className=\"upload-icon\" />\r\n                    Drag and Drop files here or click to upload\r\n                </div>\r\n            </div>\r\n            <div className=\"files\">\r\n                {/* {selectedFiles.map((data) => (\r\n                    <div className=\"file-status-bar\" key={data.name}>\r\n                        <div>\r\n                            <div className=\"file-type-logo\" />\r\n                            <div className=\"file-type\">{data.name}</div>\r\n                            <span className={`file-name ${data.invalid ? 'file-error' : ''}`}>\r\n                                {data.name}\r\n                            </span>\r\n                            <span className=\"file-size\">({data.size})</span>{' '}\r\n                        </div>\r\n                        <div className=\"file-remove\">X</div>\r\n                    </div>\r\n                ))} */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport HomeScreen from '../Screens/HomeScreen';\r\nimport NotFound from '../CustomComponents/NotFound';\r\nimport ProtectedRoute from '../Components/ProtectedRoute';\r\nimport Login from '../Screens/Login';\r\nimport Chat from '../Screens/Chat';\r\nimport Test from '../Components/Test';\r\n\r\nconst AppRoutes = () => (\r\n    <Switch>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/test\" component={Test} />\r\n        <ProtectedRoute path=\"/chat\">\r\n            <Chat />\r\n        </ProtectedRoute>\r\n        <Route path=\"/not-found\" component={NotFound} />\r\n        <Route exact path=\"/\" component={HomeScreen} />\r\n        <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n);\r\n\r\nexport default AppRoutes;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport AppRoutes from './Routes/AppRoutes';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './assets/css/global.css';\r\nimport './assets/css/custom.css';\r\n\r\nconst App = () => (\r\n    <Router>\r\n        <Route path=\"/\" component={AppRoutes} />\r\n    </Router>\r\n);\r\n\r\nexport default App;\r\n","/* eslint-disable no-unused-vars */\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { friendRequestsReducer, getChatReducer, getFriendsReducer, loginReducer } from './Reducers';\r\n\r\nconst reducer = combineReducers({\r\n    userLogin: loginReducer,\r\n    friends: getFriendsReducer,\r\n    friendRequests: friendRequestsReducer,\r\n    chat: getChatReducer,\r\n});\r\n\r\nconst getUser = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {};\r\n\r\nconst initialState = {\r\n    userLogin: {\r\n        user: getUser.isLoggedIn ? getUser : { isLoggedIn: false },\r\n    },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","/* eslint-disable import/prefer-default-export */\r\nimport {\r\n    FRIEND_REQUEST_ERROR,\r\n    FRIEND_REQUEST_SUCCESS,\r\n    GET_CHAT_MESSAGE,\r\n    GET_CHAT_MESSAGE_ERROR,\r\n    GET_FRIENDS_ERROR,\r\n    GET_FRIENDS_SUCCESS,\r\n    USER_LOGIN_FAILED,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_FAILED,\r\n    USER_UPDATE_SUCCESS,\r\n} from './Constants';\r\n\r\nexport const loginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_UPDATE_FAILED:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGIN_FAILED:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const friendRequestsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FRIEND_REQUEST_SUCCESS:\r\n            return { friendRequest: action.payload };\r\n        case FRIEND_REQUEST_ERROR:\r\n            return { error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getFriendsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case GET_FRIENDS_SUCCESS:\r\n            return { friends: action.payload };\r\n        case GET_FRIENDS_ERROR:\r\n            return { error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getChatReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case GET_CHAT_MESSAGE:\r\n            return { chat: action.payload };\r\n        case GET_CHAT_MESSAGE_ERROR:\r\n            return { error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            // eslint-disable-next-line no-param-reassign\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\nimport App from './App';\r\nimport store from './Redux/store';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as ServiceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ToastProvider>\r\n            <App />\r\n        </ToastProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nServiceWorkerRegistration.register();\r\n"],"sourceRoot":""}