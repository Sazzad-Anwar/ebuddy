{"version":3,"sources":["Redux/Constants.jsx","Screens/HomeScreen.jsx","Redux/Actons.jsx","CustomComponents/NotFound.jsx","Components/ProtectedRoute.jsx","Screens/Login.jsx","Components/MessageContainingFile.jsx","Components/Messages.jsx","Components/Users.jsx","Components/UploadPreview.jsx","Screens/Chat.jsx","Components/Test.jsx","Routes/AppRoutes.jsx","App.js","Redux/store.js","Redux/Reducers.jsx","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILED","USER_LOGOUT","USER_UPDATE_SUCCESS","USER_UPDATE_FAILED","HomeScreen","addToast","useToasts","user","useSelector","state","userLogin","history","useHistory","dispatch","useDispatch","useState","name","setName","email","setEmail","images","setImages","photoUploaded","setPhotoUploaded","footerRef","useRef","uploadFile","e","a","files","target","formData","FormData","i","length","append","axios","post","data","map","image","preImage","filePath","console","log","response","removeFile","id","uploadId","split","delete","filter","singleImage","useEffect","isLoggedIn","push","handlePhotoUploaded","get","isSuccess","photo","autoDismiss","appearance","className","Container","Row","Col","lg","xs","md","Form","onSubmit","preventDefault","type","localStorage","setItem","JSON","stringify","payload","message","Avatar","alt","src","style","height","width","IconButton","onClick","Group","controlId","Label","Control","value","onChange","placeholder","htmlFor","FormControlLabel","control","Checkbox","checked","label","accept","Button","variant","Navbar","ref","expand","Nav","Date","getFullYear","NotFound","position","top","left","transform","ProtectedRoute","children","rest","render","location","to","pathname","from","Login","Typography","component","MessageContainingFile","fileData","setShow","setChatImage","path","extname","Card","elevation","cursor","right","bottom","zIndex","FileSaver","saveAs","host","controls","backgroundColor","Messages","messageDetails","roomUser","editMsg","deleteMsg","replyMsg","show","anchorEl","setAnchorEl","chatImage","open","Boolean","handleClick","event","currentTarget","handleClose","marginRight","repliedOf","body","startsWith","cardSize","showGraphic","maxLine","minLine","proxyUrl","url","aria-label","aria-controls","aria-haspopup","Menu","keepMounted","onClose","PaperProps","maxHeight","MenuItem","_id","file","moment","updatedAt","fromNow","marginLeft","Modal","onHide","fullscreen","centered","Users","userInfo","messages","findRoomUser","setReplyMsgDetails","setDisplayMessages","showMobileChat","isActive","Badge","badgeContent","userMessage","color","UploadPreview","cardHeight","current","offsetHeight","Chat","users","setUsers","setRoomUser","setMessages","setMessage","search","setSearch","roomUserPicShow","setRoomUserPicShow","replyMsgDetails","editMsgId","setEditMsgId","setShowMobileChat","displayMessages","heightRef","chatTextHeightRef","audio","Audio","socket","io","on","userData","othersData","allUsers","joinedUser","leavingUser","chat","play","prevMsg","msg","emit","getMessage","error","window","innerWidth","addEventListener","off","sendMessage","sendAt","now","key","onCloseRemoveImages","findMsg","bg","fluid","Brand","Link","size","sx","ml","marginTop","overflow","mt","mr","content","display","bgcolor","transformOrigin","horizontal","vertical","anchorOrigin","Divider","ListItemIcon","fontSize","removeItem","disconnect","InputGroup","Text","FormControl","aria-describedby","calendar","onKeyPress","as","autoComplete","Input","hidden","background","backdrop","Header","Title","Body","overflowY","Footer","Test","AppRoutes","exact","App","reducer","combineReducers","action","loading","getUser","getItem","parse","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","href","origin","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ServiceWorkerRegistration"],"mappings":"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","file":"static/js/main.2e8f072c.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAILED = 'USER_LOGIN_FAILED';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAILED = 'USER_UPDATE_FAILED';\r\n","/* eslint-disable no-plusplus */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable prettier/prettier */\r\n// import { Typography } from '@material-ui/core';\r\nimport { Button, Col, Container, Form, Image, Nav, Navbar, Row } from 'react-bootstrap';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport axios from 'axios';\r\nimport { Avatar, Checkbox, FormControlLabel, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport { userLogin } from '../Redux/Actons';\r\n\r\nconst HomeScreen = () => {\r\n    const { addToast } = useToasts();\r\n    const { user } = useSelector((state) => state.userLogin);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [photoUploaded, setPhotoUploaded] = useState(false);\r\n    const footerRef = useRef(0);\r\n\r\n    const uploadFile = async (e) => {\r\n        const { files } = e.target;\r\n        const formData = new FormData();\r\n        for (let i = 0; i < files.length; i++) {\r\n            formData.append('uploads', files[i]);\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.post('/api/v1/upload', formData);\r\n            data.map((image) => setImages((preImage) => [...preImage, image.filePath]));\r\n            setPhotoUploaded(true);\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    };\r\n\r\n    const removeFile = async (id) => {\r\n        const uploadId = id.split('/uploads/')[1];\r\n        console.log({ id, uploadId });\r\n        await axios.delete(`/api/v1/upload/${uploadId}`);\r\n        setImages(images.filter((singleImage) => singleImage !== id));\r\n        setPhotoUploaded(false);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!name || !email) {\r\n            addToast('Name or Email can not be null', {\r\n                autoDismiss: true,\r\n                appearance: 'error',\r\n            });\r\n        } else {\r\n            const data = { name, email, photo: images[0] };\r\n            dispatch(userLogin(data));\r\n            history.push('/chat');\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (user && user?.isLoggedIn) {\r\n            history.push('/chat');\r\n        }\r\n    }, [history, dispatch, user]);\r\n\r\n    const handlePhotoUploaded = async () => {\r\n        try {\r\n            if (email && !photoUploaded) {\r\n                const { data } = await axios.get(`/api/v1/user?email=${email}`);\r\n                if (data.isSuccess) {\r\n                    setImages([data.user.photo]);\r\n                }\r\n            } else if (!email) {\r\n                addToast('Email can not be null', {\r\n                    autoDismiss: true,\r\n                    appearance: 'error',\r\n                });\r\n                setPhotoUploaded(false);\r\n            } else if (email && photoUploaded) {\r\n                setImages([]);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-primary login__screen\">\r\n            <Container className=\"\">\r\n                <h3 className=\"text-white pt-5 text-center\">e-chat-Buddy</h3>\r\n                <Row>\r\n                    <Col lg={4} />\r\n                    <Col xs={12} md={12} lg={4}>\r\n                        <Form onSubmit={handleSubmit} className=\"my-5\">\r\n                            <div className=\"d-flex justify-content-center align-items-center position-relative photo\">\r\n                                <Avatar\r\n                                    alt={name}\r\n                                    src={images[0] ?? '/logo.gif'}\r\n                                    style={{ height: 150, width: 150 }}\r\n                                    className=\"shadow-lg border border-dark\"\r\n                                />\r\n                                {images[0] && (\r\n                                    <IconButton\r\n                                        className=\"position-absolute delete__icon\"\r\n                                        onClick={() => removeFile(images[0])}\r\n                                    >\r\n                                        <CancelIcon className=\"text-white\" />\r\n                                    </IconButton>\r\n                                )}\r\n                            </div>\r\n                            <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                                <Form.Label className=\"text-white\">User Name</Form.Label>\r\n                                <Form.Control\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    htmlFor=\"name\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                                <Form.Label className=\"text-white\">Email address</Form.Label>\r\n                                <Form.Control\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter email\"\r\n                                    htmlFor=\"email\"\r\n                                />\r\n                            </Form.Group>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={photoUploaded}\r\n                                        onChange={() => {\r\n                                            setPhotoUploaded(!photoUploaded);\r\n                                            handlePhotoUploaded();\r\n                                        }}\r\n                                        className=\"text-white\"\r\n                                    />\r\n                                }\r\n                                label=\"Photo is Uploaded\"\r\n                                className=\"text-white\"\r\n                            />\r\n\r\n                            {!photoUploaded && (\r\n                                <Form.Group className=\"mb-3\" controlId=\"photo\">\r\n                                    <Form.Label className=\"text-white\">\r\n                                        Upload Your Photo\r\n                                    </Form.Label>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            className=\"form-control\"\r\n                                            accept=\"image/*\"\r\n                                            onChange={uploadFile}\r\n                                            placeholder=\"Input Photos\"\r\n                                            id=\"inputGroupFile02\"\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            )}\r\n\r\n                            <Button variant=\"outline-secondary w-100\" type=\"submit\">\r\n                                Login\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col lg={4} />\r\n                </Row>\r\n            </Container>\r\n            <Navbar className=\"nav__bar fixed-bottom\" ref={footerRef} expand=\"lg\">\r\n                <Container className=\"d-flex flex-column\">\r\n                    <Nav className=\" align-items-center py-2 text-white\">\r\n                        Copyright <CopyrightIcon className=\"me-2\" /> {new Date().getFullYear()}{' '}\r\n                        e-Chat-Buddy. All rights reserved.\r\n                    </Nav>\r\n                    <Nav className=\"align-items-center pb-4 text-white\">\r\n                        Designed & Developed By Sazzad Bin Anwar\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","/* eslint-disable import/prefer-default-export */\r\nimport axios from 'axios';\r\nimport {\r\n    USER_LOGIN_FAILED,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_FAILED,\r\n    USER_UPDATE_SUCCESS,\r\n} from './Constants';\r\n\r\nexport const userLogin = (user) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        });\r\n\r\n        const { data } = await axios.post('/api/v1/user', user);\r\n        console.log(data);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data.user,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAILED,\r\n            payload: error.response ? error.response : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const userLogout = () => async (dispatch) => {\r\n    localStorage.removeItem('user');\r\n    dispatch({\r\n        type: USER_LOGOUT,\r\n    });\r\n};\r\n\r\nexport const userUpdate = (user) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.put('/api/v1/user', user);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n            payload: data.user,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAILED,\r\n            payload: error.response ? error.response : error.message,\r\n        });\r\n    }\r\n};\r\n","const NotFound = () => (\r\n    <div\r\n        style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%,-50%)' }}\r\n    >\r\n        <h4>404 | Page Not Found</h4>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProtectedRoute = ({ children, ...rest }) => {\r\n    const { user } = useSelector((state) => state.userLogin);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                user && user.isLoggedIn ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/',\r\n                            state: { from: location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\nexport default ProtectedRoute;\r\n","import { Typography } from '@material-ui/core';\r\n\r\nconst Login = () => (\r\n    <>\r\n        <Typography\r\n            component=\"h1\"\r\n            variant=\"h4\"\r\n            style={{\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                transform: 'translate(-50%,-50%)',\r\n            }}\r\n        >\r\n            This is login page\r\n        </Typography>\r\n    </>\r\n);\r\n\r\nexport default Login;\r\n","/* eslint-disable jsx-a11y/media-has-caption */\r\nimport { Card, IconButton } from '@material-ui/core';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport path from 'path';\r\nimport { Col } from 'react-bootstrap';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport FileSaver from 'file-saver';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport { host } from '../Config.json';\r\n\r\nconst MessageContainingFile = ({ fileData, setShow, setChatImage }) => {\r\n    if (\r\n        path.extname(fileData) === '.png' ||\r\n        path.extname(fileData) === '.jpg' ||\r\n        path.extname(fileData) === '.jpeg' ||\r\n        path.extname(fileData) === '.gif'\r\n    ) {\r\n        return (\r\n            <Col xs={12} md={4} className=\"g-2\" key={fileData}>\r\n                <Card\r\n                    elevation={5}\r\n                    className=\"mb-0 img__card\"\r\n                    style={{\r\n                        cursor: 'pointer',\r\n                        position: 'relative',\r\n                        height: 200,\r\n                        width: 200,\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={fileData}\r\n                        height={200}\r\n                        width={200}\r\n                        className=\"position-absolute\"\r\n                        alt={`upload-${fileData}`}\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            left: 0,\r\n                        }}\r\n                    />\r\n                    <div className=\"position-absolute start-0 top-0 end-0 bottom-0 download__btn\">\r\n                        <GetAppIcon\r\n                            className=\"bg-white rounded-circle position-absolute\"\r\n                            style={{\r\n                                top: '50%',\r\n                                left: '50%',\r\n                                transform: 'translate(-50%,-50%)',\r\n                                cursor: 'pointer',\r\n                                zIndex: 1,\r\n                            }}\r\n                            onClick={() =>\r\n                                FileSaver.saveAs(\r\n                                    `${host}${fileData}`,\r\n                                    `image.${path.extname(fileData)}`\r\n                                )\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"position-absolute start-0 top-0 end-0 bottom-0 download__btn\">\r\n                        <ZoomInIcon\r\n                            className=\"bg-white rounded-circle position-absolute\"\r\n                            style={{\r\n                                top: 0,\r\n                                right: 0,\r\n                                cursor: 'pointer',\r\n                            }}\r\n                            onClick={() => {\r\n                                setShow(true);\r\n                                setChatImage(fileData);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    if (\r\n        path.extname(fileData) === '.mp4' ||\r\n        path.extname(fileData) === '.mov' ||\r\n        path.extname(fileData) === '.wmv' ||\r\n        path.extname(fileData) === '.flv' ||\r\n        path.extname(fileData) === '.webm' ||\r\n        path.extname(fileData) === '.mkv'\r\n    ) {\r\n        return (\r\n            <Col xs={12} className=\"g-2\" key={fileData}>\r\n                <Card\r\n                    elevation={5}\r\n                    className=\"mb-0 img__card\"\r\n                    style={{\r\n                        cursor: 'pointer',\r\n                        position: 'relative',\r\n                        height: 400,\r\n                        width: 400,\r\n                    }}\r\n                >\r\n                    <video controls width=\"100%\" height=\"400\">\r\n                        <source\r\n                            src={fileData}\r\n                            type={`video/${path.extname(fileData).split('.')[1]}`}\r\n                        />\r\n                    </video>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n    if (\r\n        path.extname(fileData) === '.mp3' ||\r\n        path.extname(fileData) === '.ogg' ||\r\n        path.extname(fileData) === '.mpeg'\r\n    ) {\r\n        return (\r\n            <Col xs={12} className=\"g-2\" key={fileData}>\r\n                <audio controls>\r\n                    <source src={fileData} type={`audio/${path.extname(fileData).split('.')[1]}`} />\r\n                </audio>\r\n            </Col>\r\n        );\r\n    }\r\n    return (\r\n        <Col xs={12} className=\"g-2\" key={fileData}>\r\n            <Card\r\n                elevation={5}\r\n                className=\"mb-0 py-1 px-2 rounded\"\r\n                style={{\r\n                    backgroundColor: '#616161',\r\n                }}\r\n            >\r\n                <div\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                    style={{ width: 200 }}\r\n                >\r\n                    <InsertDriveFileIcon className=\"text-white\" />\r\n                    <span className=\"col-4 text-truncate text-white\">{fileData.split('/')[2]}</span>\r\n                    <span className=\"text-white\">{path.extname(fileData)}</span>\r\n                    <IconButton>\r\n                        <GetAppIcon\r\n                            className=\"text-white\"\r\n                            onClick={() =>\r\n                                FileSaver.saveAs(\r\n                                    `${host}${fileData}`,\r\n                                    `file.${path.extname(fileData)}`\r\n                                )\r\n                            }\r\n                        />\r\n                    </IconButton>\r\n                </div>\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default MessageContainingFile;\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable jsx-a11y/media-has-caption */\r\n/* eslint-disable no-nested-ternary */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-boolean-value */\r\nimport { Avatar, Card, IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport { ReactTinyLink } from 'react-tiny-link';\r\nimport moment from 'moment';\r\nimport { Col, Modal, Popover, Row } from 'react-bootstrap';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useState } from 'react';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport MessageContainingFile from './MessageContainingFile';\r\n\r\nconst Messages = ({ messageDetails, user, roomUser, editMsg, deleteMsg, replyMsg }) => {\r\n    const [show, setShow] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [chatImage, setChatImage] = useState('');\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    if (\r\n        user.email !== messageDetails.from &&\r\n        roomUser.email === messageDetails.from &&\r\n        user.email === messageDetails.to\r\n    ) {\r\n        return (\r\n            <div className=\"d-flex my-3 chat__buddy\" style={{ marginRight: '20%' }}>\r\n                <Avatar\r\n                    alt={roomUser.name}\r\n                    src={roomUser.photo}\r\n                    style={{ width: 32, height: 32 }}\r\n                />\r\n                <div>\r\n                    <div className=\"d-flex\">\r\n                        {messageDetails.message && (\r\n                            <div className=\"chat__card chat__person ms-0 p-2\">\r\n                                {messageDetails.repliedOf && (\r\n                                    <Card\r\n                                        body\r\n                                        className=\"chat__card chat__person p-2 bg-dark text-white col-4 text-truncate\"\r\n                                        style={{ width: '100%' }}\r\n                                    >\r\n                                        {messageDetails.repliedOf}\r\n                                    </Card>\r\n                                )}\r\n\r\n                                <Card\r\n                                    body\r\n                                    className=\"chat__card chat__person p-2\"\r\n                                    style={{ width: '100%' }}\r\n                                >\r\n                                    {messageDetails.message.startsWith('http') ? (\r\n                                        <ReactTinyLink\r\n                                            cardSize=\"small\"\r\n                                            showGraphic={true}\r\n                                            maxLine={2}\r\n                                            minLine={1}\r\n                                            proxyUrl=\"https://corsanywhere.herokuapp.com\"\r\n                                            url={messageDetails.message}\r\n                                        />\r\n                                    ) : (\r\n                                        messageDetails.message\r\n                                    )}\r\n                                </Card>\r\n                            </div>\r\n                        )}\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"long-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                            className=\"ms-2\"\r\n                        >\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    maxHeight: 48 * 4.5,\r\n                                },\r\n                            }}\r\n                        >\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    replyMsg(messageDetails._id);\r\n                                }}\r\n                            >\r\n                                <ReplyIcon />\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n\r\n                    {messageDetails.file && (\r\n                        <Row>\r\n                            {messageDetails.file.map((fileData) => (\r\n                                <MessageContainingFile\r\n                                    fileData={fileData}\r\n                                    setShow={setShow}\r\n                                    setChatImage={setChatImage}\r\n                                />\r\n                            ))}\r\n                        </Row>\r\n                    )}\r\n                    <p className=\"text-white ms-3 mt-1 last__seen\">\r\n                        {moment(messageDetails.updatedAt).fromNow()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (user.email === messageDetails.from && roomUser.email === messageDetails.to) {\r\n        return (\r\n            <div\r\n                className=\"d-flex flex-column justify-content-end align-items-end my-3\"\r\n                style={{ marginLeft: '20%' }}\r\n            >\r\n                <div className=\"d-flex my__chat text-right justify-content-end\">\r\n                    <div className=\"chat__card me-3 d-flex justify-content-center align-items-center\">\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"long-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                            className=\"me-3\"\r\n                        >\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    maxHeight: 48 * 4.5,\r\n                                    // width: '20ch',\r\n                                },\r\n                            }}\r\n                        >\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    deleteMsg(messageDetails._id);\r\n                                }}\r\n                            >\r\n                                <DeleteIcon />\r\n                            </MenuItem>\r\n                            {messageDetails.message && (\r\n                                <MenuItem\r\n                                    onClick={() => {\r\n                                        handleClose();\r\n                                        editMsg(messageDetails._id);\r\n                                    }}\r\n                                >\r\n                                    <EditIcon />\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    replyMsg(messageDetails._id);\r\n                                }}\r\n                            >\r\n                                <ReplyIcon />\r\n                            </MenuItem>\r\n                        </Menu>\r\n\r\n                        {messageDetails.message && (\r\n                            <div className=\"chat__person me-3 p-2\">\r\n                                {messageDetails.repliedOf && (\r\n                                    <Card\r\n                                        body\r\n                                        className=\"chat__person me-3 p-2 bg-dark text-white col-4 text-truncate\"\r\n                                        style={{ width: '100%' }}\r\n                                    >\r\n                                        {messageDetails.repliedOf}\r\n                                    </Card>\r\n                                )}\r\n                                <Card\r\n                                    body\r\n                                    className=\"chat__person me-3 p-2\"\r\n                                    style={{ width: '100%' }}\r\n                                >\r\n                                    {messageDetails.message.startsWith('http') ? (\r\n                                        <ReactTinyLink\r\n                                            cardSize=\"small\"\r\n                                            showGraphic={true}\r\n                                            maxLine={2}\r\n                                            minLine={1}\r\n                                            proxyUrl=\"https://corsanywhere.herokuapp.com\"\r\n                                            url={messageDetails.message}\r\n                                        />\r\n                                    ) : (\r\n                                        messageDetails.message\r\n                                    )}\r\n                                </Card>\r\n                            </div>\r\n                        )}\r\n                        {messageDetails.file && (\r\n                            <Row>\r\n                                {messageDetails.file.map((fileData) => (\r\n                                    <MessageContainingFile\r\n                                        fileData={fileData}\r\n                                        setShow={setShow}\r\n                                        setChatImage={setChatImage}\r\n                                    />\r\n                                ))}\r\n                            </Row>\r\n                        )}\r\n                    </div>\r\n\r\n                    <Avatar\r\n                        alt={user.name}\r\n                        src={user.photo}\r\n                        style={{ width: 32, height: 32, marginRight: 10 }}\r\n                    />\r\n                </div>\r\n                <p className=\"text-white mt-1 pe-5 last__seen\">\r\n                    {moment(messageDetails.updatedAt).fromNow()}\r\n                </p>\r\n\r\n                {/* modal for picture view */}\r\n                <Modal\r\n                    show={show}\r\n                    onHide={() => setShow(!show)}\r\n                    fullscreen=\"md-down\"\r\n                    centered\r\n                    className=\"shadow-lg w-100\"\r\n                >\r\n                    <img alt={chatImage} src={chatImage} />\r\n                    <CloseIcon\r\n                        className=\"bg-white rounded-circle position-absolute\"\r\n                        style={{\r\n                            top: '-10px',\r\n                            right: '-10px',\r\n                            cursor: 'pointer',\r\n                        }}\r\n                        onClick={() => setShow(!show)}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n    if (roomUser.email !== messageDetails.to) {\r\n        return null;\r\n    }\r\n    return null;\r\n};\r\n\r\nexport default Messages;\r\n","import { Avatar, Badge, Card } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\nconst Users = ({\r\n    userInfo,\r\n    messages,\r\n    findRoomUser,\r\n    setReplyMsgDetails,\r\n    setDisplayMessages,\r\n    showMobileChat,\r\n}) => (\r\n    <Card\r\n        elevation={10}\r\n        body\r\n        className={\r\n            userInfo.isActive\r\n                ? 'bg-success p-2 d-flex align-items-center mb-3'\r\n                : 'bg-dark p-2 d-flex align-items-center mb-3'\r\n        }\r\n        style={{ cursor: 'pointer' }}\r\n        onClick={() => {\r\n            findRoomUser(userInfo.email);\r\n            setReplyMsgDetails('');\r\n            setDisplayMessages(!!showMobileChat);\r\n        }}\r\n    >\r\n        <Badge\r\n            badgeContent={\r\n                userInfo.isActive\r\n                    ? messages.filter((userMessage) => userMessage.from === userInfo.email).length\r\n                    : 0\r\n            }\r\n            color=\"primary\"\r\n        >\r\n            <Avatar alt={userInfo.name} src={userInfo.photo} className=\"shadow-lg border\" />\r\n        </Badge>\r\n\r\n        <div className=\"ps-3 \">\r\n            <p className=\"text-white my-0 fs-6 user__name_list\">{userInfo.name}</p>\r\n            <p className=\"text-white my-0 last__seen\">\r\n                {userInfo.isActive ? 'Online' : `Active ${moment(userInfo.updatedAt).fromNow()}`}\r\n                {}\r\n            </p>\r\n        </div>\r\n    </Card>\r\n);\r\n\r\nexport default Users;\r\n","/* eslint-disable jsx-a11y/media-has-caption */\r\nimport { Card } from '@material-ui/core';\r\nimport { Col } from 'react-bootstrap';\r\nimport path from 'path';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport { useRef } from 'react';\r\n\r\nconst UploadPreview = ({ fileData, removeFile }) => {\r\n    const cardHeight = useRef(0);\r\n\r\n    if (\r\n        path.extname(fileData) === '.png' ||\r\n        path.extname(fileData) === '.jpg' ||\r\n        path.extname(fileData) === '.jpeg' ||\r\n        path.extname(fileData) === '.gif'\r\n    ) {\r\n        return (\r\n            <Col xs={12} md={6} className=\"g-2\" key={fileData}>\r\n                <Card\r\n                    elevation={5}\r\n                    className=\"mb-0 img__card\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        height: 200,\r\n                        width: 200,\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={fileData}\r\n                        height={200}\r\n                        width={200}\r\n                        className=\"position-absolute\"\r\n                        alt={`upload-${fileData}`}\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0,\r\n                            left: 0,\r\n                        }}\r\n                    />\r\n                    <CancelIcon\r\n                        className=\"position-absolute\"\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            cursor: 'pointer',\r\n                        }}\r\n                        onClick={() => removeFile(fileData)}\r\n                    />\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    if (\r\n        path.extname(fileData) === '.mp4' ||\r\n        path.extname(fileData) === '.mov' ||\r\n        path.extname(fileData) === '.wmv' ||\r\n        path.extname(fileData) === '.flv' ||\r\n        path.extname(fileData) === '.webm' ||\r\n        path.extname(fileData) === '.mkv'\r\n    ) {\r\n        return (\r\n            <Col xs={12} className=\"g-2\" key={fileData}>\r\n                <Card\r\n                    elevation={5}\r\n                    className=\"mb-0 img__card\"\r\n                    style={{\r\n                        position: 'relative',\r\n                    }}\r\n                >\r\n                    <video controls width=\"100%\" height=\"400\">\r\n                        <source\r\n                            src={fileData}\r\n                            type={`video/${path.extname(fileData).split('.')[1]}`}\r\n                        />\r\n                    </video>\r\n                    <CancelIcon\r\n                        className=\"position-absolute\"\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            cursor: 'pointer',\r\n                            zIndex: 1,\r\n                        }}\r\n                        onClick={() => removeFile(fileData)}\r\n                    />\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n    if (\r\n        path.extname(fileData) === '.mp3' ||\r\n        path.extname(fileData) === '.ogg' ||\r\n        path.extname(fileData) === '.mpeg'\r\n    ) {\r\n        return (\r\n            <Col xs={12} className=\"g-2\" key={fileData}>\r\n                <div className=\"position-relative\">\r\n                    <audio controls>\r\n                        <source\r\n                            src={fileData}\r\n                            type={`audio/${path.extname(fileData).split('.')[1]}`}\r\n                        />\r\n                    </audio>\r\n                    <CancelIcon\r\n                        className=\"position-absolute\"\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            cursor: 'pointer',\r\n                        }}\r\n                        onClick={() => removeFile(fileData)}\r\n                    />\r\n                </div>\r\n            </Col>\r\n        );\r\n    }\r\n    console.log(cardHeight.current.offsetHeight);\r\n    return (\r\n        <Col xs={12} md={6} className=\"g-2\" key={fileData}>\r\n            <Card\r\n                elevation={5}\r\n                className=\"mb-0 py-3 px-3 rounded position-relative\"\r\n                style={{\r\n                    backgroundColor: '#616161',\r\n                }}\r\n            >\r\n                <div\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                    style={{ width: 200 }}\r\n                >\r\n                    <InsertDriveFileIcon className=\"text-white\" />\r\n                    <span className=\"col-4 text-truncate text-white\">{fileData.split('/')[2]}</span>\r\n                    <span className=\"text-white\">{path.extname(fileData)}</span>\r\n                    <CancelIcon\r\n                        className=\"position-absolute\"\r\n                        style={{\r\n                            right: 0,\r\n                            top: 0,\r\n                            cursor: 'pointer',\r\n                        }}\r\n                        onClick={() => removeFile(fileData)}\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default UploadPreview;\r\n","/* eslint-disable no-nested-ternary */\r\n/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-unused-vars */\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport {\r\n    Button,\r\n    CloseButton,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormControl,\r\n    InputGroup,\r\n    Modal,\r\n    Nav,\r\n    Navbar,\r\n    NavDropdown,\r\n    Row,\r\n} from 'react-bootstrap';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link, NavLink, useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n    Avatar,\r\n    Card,\r\n    Badge,\r\n    IconButton,\r\n    CardMedia,\r\n    Input,\r\n    MenuItem,\r\n    ListItemIcon,\r\n    Divider,\r\n    Menu,\r\n} from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport { io } from 'socket.io-client';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from 'axios';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PersonAdd from '@material-ui/icons/PersonAdd';\r\nimport Settings from '@material-ui/icons/Settings';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport { userLogout, userUpdate } from '../Redux/Actons';\r\nimport Messages from '../Components/Messages';\r\nimport Users from '../Components/Users';\r\nimport UploadPreview from '../Components/UploadPreview';\r\n\r\nconst Chat = () => {\r\n    const { user } = useSelector((state) => state.userLogin);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState([]);\r\n    const { addToast } = useToasts();\r\n    const [roomUser, setRoomUser] = useState({});\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [search, setSearch] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const [roomUserPicShow, setRoomUserPicShow] = useState(false);\r\n    const [replyMsgDetails, setReplyMsgDetails] = useState({});\r\n    const [editMsgId, setEditMsgId] = useState('');\r\n    const [showMobileChat, setShowMobileChat] = useState(false);\r\n    const [displayMessages, setDisplayMessages] = useState(false);\r\n    const heightRef = useRef(0);\r\n    const footerRef = useRef(0);\r\n    const chatTextHeightRef = useRef(0);\r\n    const audio = new Audio('/msg_sound.mp3');\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    // const socket = io('/');\r\n    const socket = useRef(null);\r\n\r\n    useEffect(() => {\r\n        socket.current = io('/');\r\n        socket.current.on('user-joined', (userData) => {\r\n            const othersData = userData.allUsers.filter(\r\n                (userInfo) => userInfo.email !== user.email\r\n            );\r\n            setUsers(othersData);\r\n            if (\r\n                userData.joinedUser &&\r\n                userData.joinedUser.email !== user.email &&\r\n                user?.isLoggedIn\r\n            ) {\r\n                addToast(`${userData.joinedUser.name} is active`, {\r\n                    appearance: 'info',\r\n                    autoDismiss: true,\r\n                });\r\n\r\n                if (roomUser !== null && roomUser.email === userData.joinedUser.email) {\r\n                    setRoomUser(userData.joinedUser);\r\n                }\r\n            } else if (\r\n                userData.leavingUser &&\r\n                userData.leavingUser.email !== user.email &&\r\n                user?.isLoggedIn\r\n            ) {\r\n                setRoomUser(userData.leavingUser);\r\n            }\r\n        });\r\n\r\n        socket.current.on('chat-message', (chat) => {\r\n            audio.play();\r\n            setMessages((prevMsg) => [...prevMsg, chat]);\r\n        });\r\n\r\n        socket.current.on('removeMsgFromChat', async (data) => {\r\n            try {\r\n                const { data: msg } = await axios.get('/api/v1/messages');\r\n                setMessages(msg.messages);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        });\r\n\r\n        socket.current.emit('user-login', user);\r\n\r\n        try {\r\n            const getMessage = async () => {\r\n                const { data } = await axios.get('/api/v1/messages');\r\n                setMessages(data.messages);\r\n            };\r\n            getMessage();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        if (!user && !user?.isLoggedIn) {\r\n            history.push('/');\r\n        }\r\n\r\n        if (window.innerWidth < 991) {\r\n            setShowMobileChat(true);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth < 991) {\r\n                setShowMobileChat(true);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.current.off('user-joined', (data) => {});\r\n            socket.current.off('room-user-details', (userData) => {});\r\n            socket.current.off('chat-message', (chat) => {});\r\n            socket.current.off('removeMsgFromChat', (data) => {});\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [addToast, user, search]);\r\n\r\n    const findRoomUser = (email) => {\r\n        setRoomUser(users.filter((userInfo) => userInfo.email === email)[0]);\r\n    };\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const chat = {\r\n            _id: editMsgId,\r\n            user: user._id,\r\n            from: user.email,\r\n            file: images,\r\n            repliedOf: replyMsgDetails.message ?? '',\r\n            to: roomUser.email,\r\n            message,\r\n            sendAt: Date.now(),\r\n        };\r\n        if ((message && e.key === 'Enter') || message) {\r\n            setMessage('');\r\n            try {\r\n                const { data } = await axios.post('/api/v1/messages', chat);\r\n                setMessages([...messages, data.message]);\r\n                socket.current.emit('message', data.message);\r\n                setShow(false);\r\n                setImages([]);\r\n                setReplyMsgDetails({});\r\n                setEditMsgId('');\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        } else {\r\n            addToast('Please Write something', {\r\n                appearance: 'info',\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    const uploadFile = async (e) => {\r\n        const { files } = e.target;\r\n        const formData = new FormData();\r\n        for (let i = 0; i < files.length; i++) {\r\n            formData.append('uploads', files[i]);\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.post('/api/v1/upload', formData);\r\n            data.map((image) => setImages((preImage) => [...preImage, image.filePath]));\r\n            data.length ? setShow(true) : setShow(false);\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    };\r\n\r\n    const removeFile = async (id) => {\r\n        const uploadId = id.split('/uploads/')[1];\r\n        await axios.delete(`/api/v1/upload/${uploadId}`);\r\n        setImages(images.filter((singleImage) => singleImage !== id));\r\n        images.length === 1 ? setShow(false) : setShow(true);\r\n    };\r\n\r\n    const onCloseRemoveImages = () => {\r\n        if (images.length) {\r\n            images.map((image) => removeFile(image));\r\n            if (images.length - 1 > 0) {\r\n                addToast(`Remove ${images.length - 1} files`, {\r\n                    autoDismiss: true,\r\n                    appearance: 'info',\r\n                });\r\n            }\r\n        }\r\n        if (!images.length) {\r\n            setShow(!show);\r\n        }\r\n    };\r\n\r\n    const deleteMsg = (id) => {\r\n        socket.current.emit('messageDelete', id);\r\n    };\r\n    const editMsg = (id) => {\r\n        setEditMsgId(id);\r\n        setMessages(messages.filter((findMsg) => findMsg._id !== id));\r\n        setMessage(messages.filter((findMsg) => findMsg._id === id)[0].message);\r\n    };\r\n\r\n    const replyMsg = (id) => {\r\n        setReplyMsgDetails(messages.filter((findMsg) => findMsg._id === id)[0]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" className=\"nav__bar\" ref={heightRef} expand=\"lg\">\r\n                <Container fluid={('xs', 'sm', 'md', 'lg')}>\r\n                    <Link to=\"/\">\r\n                        <Navbar.Brand className=\"text-white align-items-center\">\r\n                            <img\r\n                                className=\"app__logo me-2\"\r\n                                height=\"30px\"\r\n                                src=\"/logo.gif\"\r\n                                alt=\"logo\"\r\n                            />\r\n                            <span className=\"h4\">Chat-Buddy</span>\r\n                        </Navbar.Brand>\r\n                    </Link>\r\n                    <Nav className=\"ms-auto align-items-center\">\r\n                        <Nav.Link className=\"text-white fs-5\">\r\n                            <IconButton onClick={handleClick} size=\"small\" sx={{ ml: 2 }}>\r\n                                <Avatar\r\n                                    style={{ width: 32, height: 32 }}\r\n                                    src={user.photo}\r\n                                    alt={user.name}\r\n                                />\r\n                            </IconButton>\r\n                        </Nav.Link>\r\n\r\n                        {/* profile submenu */}\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            onClick={handleClose}\r\n                            style={{\r\n                                marginTop: heightRef.current.offsetHeight - 15,\r\n                            }}\r\n                            PaperProps={{\r\n                                elevation: 0,\r\n                                sx: {\r\n                                    overflow: 'visible',\r\n                                    filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                                    mt: 1.5,\r\n                                    '& .MuiAvatar-root': {\r\n                                        width: 32,\r\n                                        height: 32,\r\n                                        ml: -0.5,\r\n                                        mr: 1,\r\n                                    },\r\n                                    '&:before': {\r\n                                        content: '\"\"',\r\n                                        display: 'block',\r\n                                        position: 'absolute',\r\n                                        top: 0,\r\n                                        right: 14,\r\n                                        width: 10,\r\n                                        height: 10,\r\n                                        bgcolor: 'background.paper',\r\n                                        transform: 'translateY(-50%) rotate(45deg)',\r\n                                        zIndex: 0,\r\n                                    },\r\n                                },\r\n                            }}\r\n                            transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                            anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                        >\r\n                            <MenuItem>\r\n                                <Avatar\r\n                                    src={user.photo}\r\n                                    alt={user.name}\r\n                                    style={{ width: 32, height: 32, marginRight: 28 }}\r\n                                />{' '}\r\n                                {user.name}\r\n                            </MenuItem>\r\n                            <Divider />\r\n                            <MenuItem>\r\n                                <ListItemIcon>\r\n                                    <Settings fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                Settings\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    dispatch(userLogout());\r\n                                    socket.current.disconnect();\r\n                                    history.push('/');\r\n                                    localStorage.removeItem('roomUser');\r\n                                }}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <ExitToAppIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                Logout\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n\r\n            <section className=\"bg__black\">\r\n                <Container fluid={('sm', 'md', 'lg')}>\r\n                    <Row>\r\n                        <Col\r\n                            md={3}\r\n                            xs={12}\r\n                            style={{\r\n                                height: `calc(100vh - ${\r\n                                    heightRef.current.offsetHeight + footerRef.current.offsetHeight\r\n                                }px)`,\r\n                                backgroundColor: '#1c2834',\r\n                            }}\r\n                        >\r\n                            <div className=\"search__bar\">\r\n                                <InputGroup className=\"py-3\">\r\n                                    <InputGroup.Text id=\"search\" className=\"bg-white border-end-0\">\r\n                                        <SearchIcon />\r\n                                    </InputGroup.Text>\r\n                                    <FormControl\r\n                                        className=\"border-start-0\"\r\n                                        placeholder=\"Username\"\r\n                                        aria-label=\"Username\"\r\n                                        aria-describedby=\"search\"\r\n                                        value={search}\r\n                                        onChange={(e) => setSearch(e.target.value)}\r\n                                        type=\"text\"\r\n                                    />\r\n                                </InputGroup>\r\n                            </div>\r\n                            {users &&\r\n                                users.map((userInfo) => (\r\n                                    <Users\r\n                                        userInfo={userInfo}\r\n                                        messages={messages}\r\n                                        findRoomUser={findRoomUser}\r\n                                        key={userInfo.email}\r\n                                        setReplyMsgDetails={setReplyMsgDetails}\r\n                                        setDisplayMessages={setDisplayMessages}\r\n                                        showMobileChat={showMobileChat}\r\n                                    />\r\n                                ))}\r\n                        </Col>\r\n                        <Col\r\n                            md={9}\r\n                            xs={12}\r\n                            className={\r\n                                showMobileChat\r\n                                    ? 'bg-primary position-absolute top-0 end-0 bottom-0 start-0'\r\n                                    : 'bg-primary'\r\n                            }\r\n                            style={{\r\n                                display:\r\n                                    showMobileChat && displayMessages\r\n                                        ? 'block'\r\n                                        : !showMobileChat\r\n                                        ? 'block'\r\n                                        : 'none',\r\n                            }}\r\n                        >\r\n                            <main className=\"position-relative h-100\">\r\n                                {roomUser.email ? (\r\n                                    <>\r\n                                        <section\r\n                                            className=\"message__header d-flex justify-content-between align-items-center py-4 px-2 border-bottom\"\r\n                                            id=\"user__head\"\r\n                                        >\r\n                                            <div className=\"d-flex\">\r\n                                                <Avatar\r\n                                                    alt={roomUser.name}\r\n                                                    src={roomUser.photo}\r\n                                                    style={{\r\n                                                        height: 50,\r\n                                                        width: 50,\r\n                                                        cursor: 'pointer',\r\n                                                    }}\r\n                                                    onClick={() => setRoomUserPicShow(true)}\r\n                                                />\r\n                                                <div className=\"ps-3\">\r\n                                                    <h4 className=\"text-white my-0\">\r\n                                                        {roomUser.name}\r\n                                                    </h4>\r\n                                                    <p className=\"text-white my-0\">\r\n                                                        {roomUser.isActive\r\n                                                            ? 'Online'\r\n                                                            : `Last Seen ${moment(\r\n                                                                  roomUser.updatedAt\r\n                                                              ).calendar()}`}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <IconButton\r\n                                                className=\"float-end mobile__back_btn\"\r\n                                                onClick={() => setDisplayMessages(false)}\r\n                                            >\r\n                                                <ArrowRightAltIcon className=\"text-white\" />\r\n                                            </IconButton>\r\n                                        </section>\r\n                                        <ScrollToBottom className=\"message__body overflow-auto position-relative\">\r\n                                            {messages &&\r\n                                                messages.map((messageDetails) => (\r\n                                                    <Messages\r\n                                                        messageDetails={messageDetails}\r\n                                                        user={user}\r\n                                                        roomUser={roomUser}\r\n                                                        removeFile={removeFile}\r\n                                                        editMsg={editMsg}\r\n                                                        deleteMsg={deleteMsg}\r\n                                                        replyMsg={replyMsg}\r\n                                                        key={messageDetails.id}\r\n                                                    />\r\n                                                ))}\r\n                                        </ScrollToBottom>\r\n                                        <section\r\n                                            className=\"input__area position-absolute bottom-0 start-0 end-0\"\r\n                                            id=\"text__area\"\r\n                                        >\r\n                                            <form onSubmit={sendMessage} className=\"mb-2\">\r\n                                                <Row>\r\n                                                    {replyMsgDetails !== null &&\r\n                                                    replyMsgDetails.message ? (\r\n                                                        <Col xs={10}>\r\n                                                            <div className=\"px-3 py-2 bg-primary position-relative\">\r\n                                                                <p className=\"mb-0 col-10 text-truncate text-white\">\r\n                                                                    <b>Replying to : </b>\r\n                                                                    {replyMsgDetails.message}{' '}\r\n                                                                    <IconButton\r\n                                                                        className=\"position-absolute top-0 end-0\"\r\n                                                                        onClick={() =>\r\n                                                                            setReplyMsgDetails('')\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <CloseIcon className=\"text-white bg-dark rounded-circle\" />\r\n                                                                    </IconButton>\r\n                                                                </p>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    ) : null}\r\n                                                    <Col xs={10}>\r\n                                                        <Form.Group controlId=\"formBasicEmail\">\r\n                                                            <Form.Control\r\n                                                                value={message}\r\n                                                                onChange={(e) =>\r\n                                                                    setMessage(e.target.value)\r\n                                                                }\r\n                                                                onKeyPress={(e) =>\r\n                                                                    e.key === 'Enter'\r\n                                                                        ? sendMessage(e)\r\n                                                                        : setMessage(e.target.value)\r\n                                                                }\r\n                                                                ref={chatTextHeightRef}\r\n                                                                type=\"text\"\r\n                                                                as=\"textarea\"\r\n                                                                className=\"rounded text__input bg-primary text-white\"\r\n                                                                autoComplete=\"off\"\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                    </Col>\r\n                                                    <Col xs={1}>\r\n                                                        <div className=\"d-flex\">\r\n                                                            <label\r\n                                                                htmlFor=\"icon-button-file\"\r\n                                                                className=\"float-end\"\r\n                                                            >\r\n                                                                <Input\r\n                                                                    id=\"icon-button-file\"\r\n                                                                    type=\"file\"\r\n                                                                    onChange={uploadFile}\r\n                                                                    hidden\r\n                                                                />\r\n                                                                <IconButton\r\n                                                                    aria-label=\"upload picture\"\r\n                                                                    component=\"span\"\r\n                                                                    className=\"border p-2 input__file__button\"\r\n                                                                >\r\n                                                                    <AttachmentIcon className=\"attachments__icon text-dark\" />\r\n                                                                </IconButton>\r\n                                                            </label>\r\n                                                            <Button\r\n                                                                variant=\"outline-secondary rounded-circle p-2 pl-3 shadow-lg float-start\"\r\n                                                                className=\"ms-2\"\r\n                                                                type=\"submit\"\r\n                                                            >\r\n                                                                <SendIcon className=\"attachments__icon\" />\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </form>\r\n                                        </section>\r\n                                    </>\r\n                                ) : (\r\n                                    <div\r\n                                        style={{\r\n                                            position: 'absolute',\r\n                                            top: '50%',\r\n                                            left: '50%',\r\n                                            transform: 'translate(-50%,-50%)',\r\n                                        }}\r\n                                    >\r\n                                        <h4 className=\"text-white\">Please Select a conversation</h4>\r\n                                    </div>\r\n                                )}\r\n                            </main>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n\r\n            {/* footer nav */}\r\n            <Navbar style={{ background: '#000' }} className=\"nav__bar\" ref={footerRef} expand=\"lg\">\r\n                <Container fluid={('sm', 'md')}>\r\n                    <Nav className=\"me-auto align-items-center py-3 text-white\">\r\n                        Copyright <CopyrightIcon className=\"me-2\" /> {new Date().getFullYear()}{' '}\r\n                        e-Chat-Buddy. All rights reserved.\r\n                    </Nav>\r\n                    <Nav className=\"ms-auto align-items-center py-3 text-white\">\r\n                        Designed & Developed By Sazzad Bin Anwar\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n\r\n            {/* All modals */}\r\n            {/* Modal for image upload */}\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(!show)}\r\n                fullscreen=\"md-down\"\r\n                centered\r\n                backdrop=\"static\"\r\n                className=\"shadow-lg\"\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title className=\"position-relative w-100\">\r\n                        Upload File{' '}\r\n                        <IconButton\r\n                            className=\"position-absolute top-0 end-0\"\r\n                            onClick={() => onCloseRemoveImages()}\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row\r\n                        style={{\r\n                            maxHeight: 450,\r\n                            overflowY: 'auto',\r\n                        }}\r\n                    >\r\n                        {images &&\r\n                            images.map((image) => (\r\n                                <UploadPreview\r\n                                    fileData={image}\r\n                                    removeFile={removeFile}\r\n                                    key={image}\r\n                                />\r\n                            ))}\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => onCloseRemoveImages()}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"outline-primary\" onClick={sendMessage}>\r\n                        <SendIcon className=\"fs-7\" />\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* modal for picture view */}\r\n            <Modal\r\n                show={roomUserPicShow}\r\n                onHide={() => setRoomUserPicShow(!roomUserPicShow)}\r\n                fullscreen=\"md-down\"\r\n                centered\r\n                className=\"shadow-lg w-100\"\r\n            >\r\n                <img alt={roomUser.name} src={roomUser.photo} />\r\n                <IconButton\r\n                    className=\"position-absolute top-0 end-0\"\r\n                    onClick={() => setRoomUserPicShow(!roomUserPicShow)}\r\n                >\r\n                    <CloseIcon className=\"text-white bg-dark\" />\r\n                </IconButton>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","import { Card } from '@material-ui/core';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\n/* eslint-disable jsx-a11y/media-has-caption */\r\nconst Test = () => {\r\n    console.log('hello');\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Row>\r\n                <Col xs={12} md={3}>\r\n                    <Card\r\n                        elevation={5}\r\n                        className=\"mb-0 p-1 border rounded d-flex justify-content-between align-items-center\"\r\n                        style={{\r\n                            backgroundColor: '#616161',\r\n                        }}\r\n                    >\r\n                        <InsertDriveFileIcon className=\"text-white\" />\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport HomeScreen from '../Screens/HomeScreen';\r\nimport NotFound from '../CustomComponents/NotFound';\r\nimport ProtectedRoute from '../Components/ProtectedRoute';\r\nimport Login from '../Screens/Login';\r\nimport Chat from '../Screens/Chat';\r\nimport Test from '../Components/Test';\r\n\r\nconst AppRoutes = () => (\r\n    <Switch>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/test\" component={Test} />\r\n        <ProtectedRoute path=\"/chat\">\r\n            <Chat />\r\n        </ProtectedRoute>\r\n        <Route path=\"/not-found\" component={NotFound} />\r\n        <Route exact path=\"/\" component={HomeScreen} />\r\n        <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n);\r\n\r\nexport default AppRoutes;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport AppRoutes from './Routes/AppRoutes';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './assets/css/global.css';\r\nimport './assets/css/custom.css';\r\n\r\nconst App = () => (\r\n    <Router>\r\n        <Route path=\"/\" component={AppRoutes} />\r\n    </Router>\r\n);\r\n\r\nexport default App;\r\n","/* eslint-disable no-unused-vars */\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { loginReducer } from './Reducers';\r\n\r\nconst reducer = combineReducers({\r\n    userLogin: loginReducer,\r\n});\r\n\r\nconst getUser = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {};\r\n\r\nconst initialState = {\r\n    userLogin: {\r\n        user: getUser.isLoggedIn ? getUser : { isLoggedIn: false },\r\n    },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","/* eslint-disable import/prefer-default-export */\r\nimport {\r\n    USER_LOGIN_FAILED,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_FAILED,\r\n    USER_UPDATE_SUCCESS,\r\n} from './Constants';\r\n\r\nexport const loginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_UPDATE_FAILED:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGIN_FAILED:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            // eslint-disable-next-line no-param-reassign\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\nimport App from './App';\r\nimport store from './Redux/store';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as ServiceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ToastProvider>\r\n            <App />\r\n        </ToastProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nServiceWorkerRegistration.register();\r\n"],"sourceRoot":""}